"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/yet-another-react-lightbox";
exports.ids = ["vendor-chunks/yet-another-react-lightbox"];
exports.modules = {

/***/ "(ssr)/./node_modules/yet-another-react-lightbox/dist/plugins/thumbnails/thumbnails.css":
/*!****************************************************************************************!*\
  !*** ./node_modules/yet-another-react-lightbox/dist/plugins/thumbnails/thumbnails.css ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"bc28d2faae0f\");\nif (false) {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMveWV0LWFub3RoZXItcmVhY3QtbGlnaHRib3gvZGlzdC9wbHVnaW5zL3RodW1ibmFpbHMvdGh1bWJuYWlscy5jc3MiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGlFQUFlLGNBQWM7QUFDN0IsSUFBSSxLQUFVLEVBQUUsRUFBdUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93YXRlcm1hcmstZXhwZXJpZW5jZS8uL25vZGVfbW9kdWxlcy95ZXQtYW5vdGhlci1yZWFjdC1saWdodGJveC9kaXN0L3BsdWdpbnMvdGh1bWJuYWlscy90aHVtYm5haWxzLmNzcz8wYWNlIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IFwiYmMyOGQyZmFhZTBmXCJcbmlmIChtb2R1bGUuaG90KSB7IG1vZHVsZS5ob3QuYWNjZXB0KCkgfVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/yet-another-react-lightbox/dist/plugins/thumbnails/thumbnails.css\n");

/***/ }),

/***/ "(ssr)/./node_modules/yet-another-react-lightbox/dist/styles.css":
/*!*****************************************************************!*\
  !*** ./node_modules/yet-another-react-lightbox/dist/styles.css ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"62202f7375c6\");\nif (false) {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMveWV0LWFub3RoZXItcmVhY3QtbGlnaHRib3gvZGlzdC9zdHlsZXMuY3NzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZSxjQUFjO0FBQzdCLElBQUksS0FBVSxFQUFFLEVBQXVCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2F0ZXJtYXJrLWV4cGVyaWVuY2UvLi9ub2RlX21vZHVsZXMveWV0LWFub3RoZXItcmVhY3QtbGlnaHRib3gvZGlzdC9zdHlsZXMuY3NzP2JhNzUiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCI2MjIwMmY3Mzc1YzZcIlxuaWYgKG1vZHVsZS5ob3QpIHsgbW9kdWxlLmhvdC5hY2NlcHQoKSB9XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/yet-another-react-lightbox/dist/styles.css\n");

/***/ }),

/***/ "(ssr)/./node_modules/yet-another-react-lightbox/dist/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/yet-another-react-lightbox/dist/index.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ACTION_CLOSE: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_CLOSE),\n/* harmony export */   ACTION_NEXT: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_NEXT),\n/* harmony export */   ACTION_PREV: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_PREV),\n/* harmony export */   ACTION_SWIPE: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_SWIPE),\n/* harmony export */   ACTIVE_SLIDE_COMPLETE: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.ACTIVE_SLIDE_COMPLETE),\n/* harmony export */   ACTIVE_SLIDE_ERROR: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.ACTIVE_SLIDE_ERROR),\n/* harmony export */   ACTIVE_SLIDE_LOADING: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.ACTIVE_SLIDE_LOADING),\n/* harmony export */   ACTIVE_SLIDE_PLAYING: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.ACTIVE_SLIDE_PLAYING),\n/* harmony export */   CLASS_FLEX_CENTER: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.CLASS_FLEX_CENTER),\n/* harmony export */   CLASS_FULLSIZE: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.CLASS_FULLSIZE),\n/* harmony export */   CLASS_NO_SCROLL: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.CLASS_NO_SCROLL),\n/* harmony export */   CLASS_NO_SCROLL_PADDING: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.CLASS_NO_SCROLL_PADDING),\n/* harmony export */   CLASS_SLIDE_WRAPPER: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.CLASS_SLIDE_WRAPPER),\n/* harmony export */   Carousel: () => (/* binding */ Carousel),\n/* harmony export */   CarouselModule: () => (/* binding */ CarouselModule),\n/* harmony export */   CloseIcon: () => (/* binding */ CloseIcon),\n/* harmony export */   Controller: () => (/* binding */ Controller),\n/* harmony export */   ControllerContext: () => (/* binding */ ControllerContext),\n/* harmony export */   ControllerModule: () => (/* binding */ ControllerModule),\n/* harmony export */   ELEMENT_BUTTON: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.ELEMENT_BUTTON),\n/* harmony export */   ELEMENT_ICON: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.ELEMENT_ICON),\n/* harmony export */   EVENT_ON_KEY_DOWN: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.EVENT_ON_KEY_DOWN),\n/* harmony export */   EVENT_ON_KEY_UP: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.EVENT_ON_KEY_UP),\n/* harmony export */   EVENT_ON_POINTER_CANCEL: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.EVENT_ON_POINTER_CANCEL),\n/* harmony export */   EVENT_ON_POINTER_DOWN: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.EVENT_ON_POINTER_DOWN),\n/* harmony export */   EVENT_ON_POINTER_LEAVE: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.EVENT_ON_POINTER_LEAVE),\n/* harmony export */   EVENT_ON_POINTER_MOVE: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.EVENT_ON_POINTER_MOVE),\n/* harmony export */   EVENT_ON_POINTER_UP: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.EVENT_ON_POINTER_UP),\n/* harmony export */   EVENT_ON_WHEEL: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.EVENT_ON_WHEEL),\n/* harmony export */   ErrorIcon: () => (/* binding */ ErrorIcon),\n/* harmony export */   EventsContext: () => (/* binding */ EventsContext),\n/* harmony export */   EventsProvider: () => (/* binding */ EventsProvider),\n/* harmony export */   IMAGE_FIT_CONTAIN: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.IMAGE_FIT_CONTAIN),\n/* harmony export */   IMAGE_FIT_COVER: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.IMAGE_FIT_COVER),\n/* harmony export */   IconButton: () => (/* binding */ IconButton),\n/* harmony export */   ImageSlide: () => (/* binding */ ImageSlide),\n/* harmony export */   Lightbox: () => (/* binding */ Lightbox),\n/* harmony export */   LightboxDefaultProps: () => (/* binding */ LightboxDefaultProps),\n/* harmony export */   LightboxDispatchContext: () => (/* binding */ LightboxDispatchContext),\n/* harmony export */   LightboxPropsContext: () => (/* binding */ LightboxPropsContext),\n/* harmony export */   LightboxPropsProvider: () => (/* binding */ LightboxPropsProvider),\n/* harmony export */   LightboxStateContext: () => (/* binding */ LightboxStateContext),\n/* harmony export */   LightboxStateProvider: () => (/* binding */ LightboxStateProvider),\n/* harmony export */   LoadingIcon: () => (/* binding */ LoadingIcon),\n/* harmony export */   MODULE_CAROUSEL: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.MODULE_CAROUSEL),\n/* harmony export */   MODULE_CONTROLLER: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.MODULE_CONTROLLER),\n/* harmony export */   MODULE_NAVIGATION: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.MODULE_NAVIGATION),\n/* harmony export */   MODULE_NO_SCROLL: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.MODULE_NO_SCROLL),\n/* harmony export */   MODULE_PORTAL: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.MODULE_PORTAL),\n/* harmony export */   MODULE_ROOT: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.MODULE_ROOT),\n/* harmony export */   MODULE_TOOLBAR: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.MODULE_TOOLBAR),\n/* harmony export */   Navigation: () => (/* binding */ Navigation),\n/* harmony export */   NavigationButton: () => (/* binding */ NavigationButton),\n/* harmony export */   NavigationModule: () => (/* binding */ NavigationModule),\n/* harmony export */   NextIcon: () => (/* binding */ NextIcon),\n/* harmony export */   NoScroll: () => (/* binding */ NoScroll),\n/* harmony export */   NoScrollModule: () => (/* binding */ NoScrollModule),\n/* harmony export */   PLUGIN_CAPTIONS: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.PLUGIN_CAPTIONS),\n/* harmony export */   PLUGIN_COUNTER: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.PLUGIN_COUNTER),\n/* harmony export */   PLUGIN_DOWNLOAD: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.PLUGIN_DOWNLOAD),\n/* harmony export */   PLUGIN_FULLSCREEN: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.PLUGIN_FULLSCREEN),\n/* harmony export */   PLUGIN_INLINE: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.PLUGIN_INLINE),\n/* harmony export */   PLUGIN_SHARE: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.PLUGIN_SHARE),\n/* harmony export */   PLUGIN_SLIDESHOW: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.PLUGIN_SLIDESHOW),\n/* harmony export */   PLUGIN_THUMBNAILS: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.PLUGIN_THUMBNAILS),\n/* harmony export */   PLUGIN_ZOOM: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.PLUGIN_ZOOM),\n/* harmony export */   Portal: () => (/* binding */ Portal),\n/* harmony export */   PortalModule: () => (/* binding */ PortalModule),\n/* harmony export */   PreviousIcon: () => (/* binding */ PreviousIcon),\n/* harmony export */   Root: () => (/* binding */ Root),\n/* harmony export */   RootModule: () => (/* binding */ RootModule),\n/* harmony export */   SLIDE_STATUS_COMPLETE: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.SLIDE_STATUS_COMPLETE),\n/* harmony export */   SLIDE_STATUS_ERROR: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.SLIDE_STATUS_ERROR),\n/* harmony export */   SLIDE_STATUS_LOADING: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.SLIDE_STATUS_LOADING),\n/* harmony export */   SLIDE_STATUS_PLACEHOLDER: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.SLIDE_STATUS_PLACEHOLDER),\n/* harmony export */   SLIDE_STATUS_PLAYING: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.SLIDE_STATUS_PLAYING),\n/* harmony export */   SwipeState: () => (/* binding */ SwipeState),\n/* harmony export */   TimeoutsContext: () => (/* binding */ TimeoutsContext),\n/* harmony export */   TimeoutsProvider: () => (/* binding */ TimeoutsProvider),\n/* harmony export */   Toolbar: () => (/* binding */ Toolbar),\n/* harmony export */   ToolbarModule: () => (/* binding */ ToolbarModule),\n/* harmony export */   UNKNOWN_ACTION_TYPE: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.UNKNOWN_ACTION_TYPE),\n/* harmony export */   VK_ARROW_LEFT: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.VK_ARROW_LEFT),\n/* harmony export */   VK_ARROW_RIGHT: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.VK_ARROW_RIGHT),\n/* harmony export */   VK_ESCAPE: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.VK_ESCAPE),\n/* harmony export */   activeSlideStatus: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_2__.activeSlideStatus),\n/* harmony export */   addToolbarButton: () => (/* binding */ addToolbarButton),\n/* harmony export */   calculatePreload: () => (/* binding */ calculatePreload),\n/* harmony export */   cleanup: () => (/* binding */ cleanup),\n/* harmony export */   clsx: () => (/* binding */ clsx),\n/* harmony export */   composePrefix: () => (/* binding */ composePrefix),\n/* harmony export */   computeSlideRect: () => (/* binding */ computeSlideRect),\n/* harmony export */   createIcon: () => (/* binding */ createIcon),\n/* harmony export */   createIconDisabled: () => (/* binding */ createIconDisabled),\n/* harmony export */   createModule: () => (/* binding */ createModule),\n/* harmony export */   createNode: () => (/* binding */ createNode),\n/* harmony export */   cssClass: () => (/* binding */ cssClass),\n/* harmony export */   cssVar: () => (/* binding */ cssVar),\n/* harmony export */   \"default\": () => (/* binding */ Lightbox),\n/* harmony export */   devicePixelRatio: () => (/* binding */ devicePixelRatio),\n/* harmony export */   getSlide: () => (/* binding */ getSlide),\n/* harmony export */   getSlideIfPresent: () => (/* binding */ getSlideIfPresent),\n/* harmony export */   getSlideIndex: () => (/* binding */ getSlideIndex),\n/* harmony export */   hasSlides: () => (/* binding */ hasSlides),\n/* harmony export */   hasWindow: () => (/* binding */ hasWindow),\n/* harmony export */   isImageFitCover: () => (/* binding */ isImageFitCover),\n/* harmony export */   isImageSlide: () => (/* binding */ isImageSlide),\n/* harmony export */   label: () => (/* binding */ label),\n/* harmony export */   makeComposePrefix: () => (/* binding */ makeComposePrefix),\n/* harmony export */   makeUseContext: () => (/* binding */ makeUseContext),\n/* harmony export */   parseInt: () => (/* binding */ parseInt),\n/* harmony export */   parseLengthPercentage: () => (/* binding */ parseLengthPercentage),\n/* harmony export */   round: () => (/* binding */ round),\n/* harmony export */   setRef: () => (/* binding */ setRef),\n/* harmony export */   stopNavigationEventsPropagation: () => (/* binding */ stopNavigationEventsPropagation),\n/* harmony export */   useAnimation: () => (/* binding */ useAnimation),\n/* harmony export */   useContainerRect: () => (/* binding */ useContainerRect),\n/* harmony export */   useController: () => (/* binding */ useController),\n/* harmony export */   useDelay: () => (/* binding */ useDelay),\n/* harmony export */   useEventCallback: () => (/* binding */ useEventCallback),\n/* harmony export */   useEvents: () => (/* binding */ useEvents),\n/* harmony export */   useForkRef: () => (/* binding */ useForkRef),\n/* harmony export */   useKeyboardNavigation: () => (/* binding */ useKeyboardNavigation),\n/* harmony export */   useLayoutEffect: () => (/* binding */ useLayoutEffect),\n/* harmony export */   useLightboxDispatch: () => (/* binding */ useLightboxDispatch),\n/* harmony export */   useLightboxProps: () => (/* binding */ useLightboxProps),\n/* harmony export */   useLightboxState: () => (/* binding */ useLightboxState),\n/* harmony export */   useLoseFocus: () => (/* binding */ useLoseFocus),\n/* harmony export */   useMotionPreference: () => (/* binding */ useMotionPreference),\n/* harmony export */   useNavigationState: () => (/* binding */ useNavigationState),\n/* harmony export */   usePointerEvents: () => (/* binding */ usePointerEvents),\n/* harmony export */   usePointerSwipe: () => (/* binding */ usePointerSwipe),\n/* harmony export */   usePreventWheelDefaults: () => (/* binding */ usePreventWheelDefaults),\n/* harmony export */   useRTL: () => (/* binding */ useRTL),\n/* harmony export */   useSensors: () => (/* binding */ useSensors),\n/* harmony export */   useThrottle: () => (/* binding */ useThrottle),\n/* harmony export */   useTimeouts: () => (/* binding */ useTimeouts),\n/* harmony export */   useWheelSwipe: () => (/* binding */ useWheelSwipe),\n/* harmony export */   withPlugins: () => (/* binding */ withPlugins)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./types.js */ \"(ssr)/./node_modules/yet-another-react-lightbox/dist/types.js\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-dom.js\");\n/* __next_internal_client_entry_do_not_use__ ACTIVE_SLIDE_COMPLETE,ACTIVE_SLIDE_ERROR,ACTIVE_SLIDE_LOADING,ACTIVE_SLIDE_PLAYING,CLASS_FULLSIZE,PLUGIN_CAPTIONS,PLUGIN_COUNTER,PLUGIN_DOWNLOAD,PLUGIN_FULLSCREEN,PLUGIN_INLINE,PLUGIN_SHARE,PLUGIN_SLIDESHOW,PLUGIN_THUMBNAILS,PLUGIN_ZOOM,SLIDE_STATUS_PLAYING,ACTION_CLOSE,ACTION_NEXT,ACTION_PREV,ACTION_SWIPE,CLASS_FLEX_CENTER,CLASS_NO_SCROLL,CLASS_NO_SCROLL_PADDING,CLASS_SLIDE_WRAPPER,Carousel,CarouselModule,CloseIcon,Controller,ControllerContext,ControllerModule,ELEMENT_BUTTON,ELEMENT_ICON,EVENT_ON_KEY_DOWN,EVENT_ON_KEY_UP,EVENT_ON_POINTER_CANCEL,EVENT_ON_POINTER_DOWN,EVENT_ON_POINTER_LEAVE,EVENT_ON_POINTER_MOVE,EVENT_ON_POINTER_UP,EVENT_ON_WHEEL,ErrorIcon,EventsContext,EventsProvider,IMAGE_FIT_CONTAIN,IMAGE_FIT_COVER,IconButton,ImageSlide,Lightbox,LightboxDefaultProps,LightboxDispatchContext,LightboxPropsContext,LightboxPropsProvider,LightboxStateContext,LightboxStateProvider,LoadingIcon,MODULE_CAROUSEL,MODULE_CONTROLLER,MODULE_NAVIGATION,MODULE_NO_SCROLL,MODULE_PORTAL,MODULE_ROOT,MODULE_TOOLBAR,Navigation,NavigationButton,NavigationModule,NextIcon,NoScroll,NoScrollModule,Portal,PortalModule,PreviousIcon,Root,RootModule,SLIDE_STATUS_COMPLETE,SLIDE_STATUS_ERROR,SLIDE_STATUS_LOADING,SLIDE_STATUS_PLACEHOLDER,SwipeState,TimeoutsContext,TimeoutsProvider,Toolbar,ToolbarModule,UNKNOWN_ACTION_TYPE,VK_ARROW_LEFT,VK_ARROW_RIGHT,VK_ESCAPE,activeSlideStatus,addToolbarButton,calculatePreload,cleanup,clsx,composePrefix,computeSlideRect,createIcon,createIconDisabled,createModule,createNode,cssClass,cssVar,default,devicePixelRatio,getSlide,getSlideIfPresent,getSlideIndex,hasSlides,hasWindow,isImageFitCover,isImageSlide,label,makeComposePrefix,makeUseContext,parseInt,parseLengthPercentage,round,setRef,stopNavigationEventsPropagation,useAnimation,useContainerRect,useController,useDelay,useEventCallback,useEvents,useForkRef,useKeyboardNavigation,useLayoutEffect,useLightboxDispatch,useLightboxProps,useLightboxState,useLoseFocus,useMotionPreference,useNavigationState,usePointerEvents,usePointerSwipe,usePreventWheelDefaults,useRTL,useSensors,useThrottle,useTimeouts,useWheelSwipe,withPlugins auto */ \n\n\n\nconst clsx = (...classes)=>[\n        ...classes\n    ].filter((cls)=>Boolean(cls)).join(\" \");\nconst cssPrefix$3 = \"yarl__\";\nconst cssClass = (name)=>`${cssPrefix$3}${name}`;\nconst cssVar = (name)=>`--${cssPrefix$3}${name}`;\nconst composePrefix = (base, prefix)=>`${base}${prefix ? `_${prefix}` : \"\"}`;\nconst makeComposePrefix = (base)=>(prefix)=>composePrefix(base, prefix);\nconst label = (labels, lbl)=>labels && labels[lbl] ? labels[lbl] : lbl;\nconst cleanup = (...cleaners)=>()=>{\n        cleaners.forEach((cleaner)=>{\n            cleaner();\n        });\n    };\nconst makeUseContext = (name, contextName, context)=>()=>{\n        const ctx = react__WEBPACK_IMPORTED_MODULE_0__.useContext(context);\n        if (!ctx) {\n            throw new Error(`${name} must be used within a ${contextName}.Provider`);\n        }\n        return ctx;\n    };\nconst hasWindow = ()=>\"undefined\" !== \"undefined\";\nfunction round(value, decimals = 0) {\n    const factor = 10 ** decimals;\n    return Math.round((value + Number.EPSILON) * factor) / factor;\n}\nconst isImageSlide = (slide)=>slide.type === undefined || slide.type === \"image\";\nconst isImageFitCover = (image, imageFit)=>image.imageFit === _types_js__WEBPACK_IMPORTED_MODULE_2__.IMAGE_FIT_COVER || image.imageFit !== _types_js__WEBPACK_IMPORTED_MODULE_2__.IMAGE_FIT_CONTAIN && imageFit === _types_js__WEBPACK_IMPORTED_MODULE_2__.IMAGE_FIT_COVER;\nfunction parseInt(value) {\n    return typeof value === \"string\" ? Number.parseInt(value, 10) : value;\n}\nfunction parseLengthPercentage(input) {\n    if (typeof input === \"number\") {\n        return {\n            pixel: input\n        };\n    }\n    if (typeof input === \"string\") {\n        const value = parseInt(input);\n        return input.endsWith(\"%\") ? {\n            percent: value\n        } : {\n            pixel: value\n        };\n    }\n    return {\n        pixel: 0\n    };\n}\nfunction computeSlideRect(containerRect, padding) {\n    const paddingValue = parseLengthPercentage(padding);\n    const paddingPixels = paddingValue.percent !== undefined ? containerRect.width / 100 * paddingValue.percent : paddingValue.pixel;\n    return {\n        width: Math.max(containerRect.width - 2 * paddingPixels, 0),\n        height: Math.max(containerRect.height - 2 * paddingPixels, 0)\n    };\n}\nconst devicePixelRatio = ()=>(hasWindow() ? window === null || window === void 0 ? void 0 : window.devicePixelRatio : undefined) || 1;\nconst getSlideIndex = (index, slidesCount)=>slidesCount > 0 ? (index % slidesCount + slidesCount) % slidesCount : 0;\nconst hasSlides = (slides)=>slides.length > 0;\nconst getSlide = (slides, index)=>slides[getSlideIndex(index, slides.length)];\nconst getSlideIfPresent = (slides, index)=>hasSlides(slides) ? getSlide(slides, index) : undefined;\nfunction addToolbarButton(toolbar, key, button) {\n    if (!button) return toolbar;\n    const { buttons, ...restToolbar } = toolbar;\n    const index = buttons.findIndex((item)=>item === key);\n    const buttonWithKey = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.isValidElement(button) ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(button, {\n        key\n    }, null) : button;\n    if (index >= 0) {\n        const result = [\n            ...buttons\n        ];\n        result.splice(index, 1, buttonWithKey);\n        return {\n            buttons: result,\n            ...restToolbar\n        };\n    }\n    return {\n        buttons: [\n            buttonWithKey,\n            ...buttons\n        ],\n        ...restToolbar\n    };\n}\nfunction stopNavigationEventsPropagation() {\n    const stopPropagation = (event)=>{\n        event.stopPropagation();\n    };\n    return {\n        onPointerDown: stopPropagation,\n        onKeyDown: stopPropagation,\n        onWheel: stopPropagation\n    };\n}\nfunction calculatePreload(carousel, slides, minimum = 0) {\n    return Math.min(carousel.preload, Math.max(carousel.finite ? slides.length - 1 : Math.floor(slides.length / 2), minimum));\n}\nconst LightboxDefaultProps = {\n    open: false,\n    close: ()=>{},\n    index: 0,\n    slides: [],\n    render: {},\n    plugins: [],\n    toolbar: {\n        buttons: [\n            _types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_CLOSE\n        ]\n    },\n    labels: {},\n    animation: {\n        fade: 250,\n        swipe: 500,\n        easing: {\n            fade: \"ease\",\n            swipe: \"ease-out\",\n            navigation: \"ease-in-out\"\n        }\n    },\n    carousel: {\n        finite: false,\n        preload: 2,\n        padding: \"16px\",\n        spacing: \"30%\",\n        imageFit: _types_js__WEBPACK_IMPORTED_MODULE_2__.IMAGE_FIT_CONTAIN,\n        imageProps: {}\n    },\n    controller: {\n        ref: null,\n        focus: true,\n        aria: false,\n        touchAction: \"none\",\n        closeOnPullUp: false,\n        closeOnPullDown: false,\n        closeOnBackdropClick: false,\n        preventDefaultWheelX: true,\n        preventDefaultWheelY: false\n    },\n    portal: {},\n    noScroll: {\n        disabled: false\n    },\n    on: {},\n    styles: {},\n    className: \"\"\n};\nfunction createModule(name, component) {\n    return {\n        name,\n        component\n    };\n}\nfunction createNode(module, children) {\n    return {\n        module,\n        children\n    };\n}\nfunction traverseNode(node, target, apply) {\n    if (node.module.name === target) {\n        return apply(node);\n    }\n    if (node.children) {\n        return [\n            createNode(node.module, node.children.flatMap((n)=>{\n                var _a;\n                return (_a = traverseNode(n, target, apply)) !== null && _a !== void 0 ? _a : [];\n            }))\n        ];\n    }\n    return [\n        node\n    ];\n}\nfunction traverse(nodes, target, apply) {\n    return nodes.flatMap((node)=>{\n        var _a;\n        return (_a = traverseNode(node, target, apply)) !== null && _a !== void 0 ? _a : [];\n    });\n}\nfunction withPlugins(root, plugins = [], augmentations = []) {\n    let config = root;\n    const contains = (target)=>{\n        const nodes = [\n            ...config\n        ];\n        while(nodes.length > 0){\n            const node = nodes.pop();\n            if ((node === null || node === void 0 ? void 0 : node.module.name) === target) return true;\n            if (node === null || node === void 0 ? void 0 : node.children) nodes.push(...node.children);\n        }\n        return false;\n    };\n    const addParent = (target, module)=>{\n        if (target === \"\") {\n            config = [\n                createNode(module, config)\n            ];\n            return;\n        }\n        config = traverse(config, target, (node)=>[\n                createNode(module, [\n                    node\n                ])\n            ]);\n    };\n    const append = (target, module)=>{\n        config = traverse(config, target, (node)=>[\n                createNode(node.module, [\n                    createNode(module, node.children)\n                ])\n            ]);\n    };\n    const addChild = (target, module, precede)=>{\n        config = traverse(config, target, (node)=>{\n            var _a;\n            return [\n                createNode(node.module, [\n                    ...precede ? [\n                        createNode(module)\n                    ] : [],\n                    ...(_a = node.children) !== null && _a !== void 0 ? _a : [],\n                    ...!precede ? [\n                        createNode(module)\n                    ] : []\n                ])\n            ];\n        });\n    };\n    const addSibling = (target, module, precede)=>{\n        config = traverse(config, target, (node)=>[\n                ...precede ? [\n                    createNode(module)\n                ] : [],\n                node,\n                ...!precede ? [\n                    createNode(module)\n                ] : []\n            ]);\n    };\n    const addModule = (module)=>{\n        append(_types_js__WEBPACK_IMPORTED_MODULE_2__.MODULE_CONTROLLER, module);\n    };\n    const replace = (target, module)=>{\n        config = traverse(config, target, (node)=>[\n                createNode(module, node.children)\n            ]);\n    };\n    const remove = (target)=>{\n        config = traverse(config, target, (node)=>node.children);\n    };\n    const augment = (augmentation)=>{\n        augmentations.push(augmentation);\n    };\n    plugins.forEach((plugin)=>{\n        plugin({\n            contains,\n            addParent,\n            append,\n            addChild,\n            addSibling,\n            addModule,\n            replace,\n            remove,\n            augment\n        });\n    });\n    return {\n        config,\n        augmentation: (props)=>augmentations.reduce((acc, augmentation)=>augmentation(acc), props)\n    };\n}\nconst EventsContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);\nconst useEvents = makeUseContext(\"useEvents\", \"EventsContext\", EventsContext);\nfunction EventsProvider({ children }) {\n    const [subscriptions] = react__WEBPACK_IMPORTED_MODULE_0__.useState({});\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>()=>{\n            Object.keys(subscriptions).forEach((topic)=>delete subscriptions[topic]);\n        }, [\n        subscriptions\n    ]);\n    const context = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>{\n        const unsubscribe = (topic, callback)=>{\n            var _a;\n            (_a = subscriptions[topic]) === null || _a === void 0 ? void 0 : _a.splice(0, subscriptions[topic].length, ...subscriptions[topic].filter((cb)=>cb !== callback));\n        };\n        const subscribe = (topic, callback)=>{\n            if (!subscriptions[topic]) {\n                subscriptions[topic] = [];\n            }\n            subscriptions[topic].push(callback);\n            return ()=>unsubscribe(topic, callback);\n        };\n        const publish = (...[topic, event])=>{\n            var _a;\n            (_a = subscriptions[topic]) === null || _a === void 0 ? void 0 : _a.forEach((callback)=>callback(event));\n        };\n        return {\n            publish,\n            subscribe,\n            unsubscribe\n        };\n    }, [\n        subscriptions\n    ]);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(EventsContext.Provider, {\n        value: context\n    }, children);\n}\nconst LightboxPropsContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);\nconst useLightboxProps = makeUseContext(\"useLightboxProps\", \"LightboxPropsContext\", LightboxPropsContext);\nfunction LightboxPropsProvider({ children, ...props }) {\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(LightboxPropsContext.Provider, {\n        value: props\n    }, children);\n}\nconst LightboxStateContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);\nconst useLightboxState = makeUseContext(\"useLightboxState\", \"LightboxStateContext\", LightboxStateContext);\nconst LightboxDispatchContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);\nconst useLightboxDispatch = makeUseContext(\"useLightboxDispatch\", \"LightboxDispatchContext\", LightboxDispatchContext);\nfunction reducer(state, action) {\n    switch(action.type){\n        case \"swipe\":\n            {\n                const { slides } = state;\n                const increment = (action === null || action === void 0 ? void 0 : action.increment) || 0;\n                const globalIndex = state.globalIndex + increment;\n                const currentIndex = getSlideIndex(globalIndex, slides.length);\n                const currentSlide = getSlideIfPresent(slides, currentIndex);\n                const animation = increment || action.duration ? {\n                    increment,\n                    duration: action.duration,\n                    easing: action.easing\n                } : undefined;\n                return {\n                    slides,\n                    currentIndex,\n                    globalIndex,\n                    currentSlide,\n                    animation\n                };\n            }\n        case \"update\":\n            if (action.slides !== state.slides || action.index !== state.currentIndex) {\n                return {\n                    slides: action.slides,\n                    currentIndex: action.index,\n                    globalIndex: action.index,\n                    currentSlide: getSlideIfPresent(action.slides, action.index)\n                };\n            }\n            return state;\n        default:\n            throw new Error(_types_js__WEBPACK_IMPORTED_MODULE_2__.UNKNOWN_ACTION_TYPE);\n    }\n}\nfunction LightboxStateProvider({ slides, index, children }) {\n    const [state, dispatch] = react__WEBPACK_IMPORTED_MODULE_0__.useReducer(reducer, {\n        slides,\n        currentIndex: index,\n        globalIndex: index,\n        currentSlide: getSlideIfPresent(slides, index)\n    });\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        dispatch({\n            type: \"update\",\n            slides,\n            index\n        });\n    }, [\n        slides,\n        index\n    ]);\n    const context = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>({\n            ...state,\n            state,\n            dispatch\n        }), [\n        state,\n        dispatch\n    ]);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(LightboxDispatchContext.Provider, {\n        value: dispatch\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(LightboxStateContext.Provider, {\n        value: context\n    }, children));\n}\nconst TimeoutsContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);\nconst useTimeouts = makeUseContext(\"useTimeouts\", \"TimeoutsContext\", TimeoutsContext);\nfunction TimeoutsProvider({ children }) {\n    const [timeouts] = react__WEBPACK_IMPORTED_MODULE_0__.useState([]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>()=>{\n            timeouts.forEach((tid)=>window.clearTimeout(tid));\n            timeouts.splice(0, timeouts.length);\n        }, [\n        timeouts\n    ]);\n    const context = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>{\n        const removeTimeout = (id)=>{\n            timeouts.splice(0, timeouts.length, ...timeouts.filter((tid)=>tid !== id));\n        };\n        const setTimeout = (fn, delay)=>{\n            const id = window.setTimeout(()=>{\n                removeTimeout(id);\n                fn();\n            }, delay);\n            timeouts.push(id);\n            return id;\n        };\n        const clearTimeout = (id)=>{\n            if (id !== undefined) {\n                removeTimeout(id);\n                window.clearTimeout(id);\n            }\n        };\n        return {\n            setTimeout,\n            clearTimeout\n        };\n    }, [\n        timeouts\n    ]);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(TimeoutsContext.Provider, {\n        value: context\n    }, children);\n}\nconst IconButton = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function IconButton({ label: label$1, className, icon: Icon, renderIcon, onClick, style, ...rest }, ref) {\n    const { styles, labels } = useLightboxProps();\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"button\", {\n        ref: ref,\n        type: \"button\",\n        \"aria-label\": label(labels, label$1),\n        className: clsx(cssClass(_types_js__WEBPACK_IMPORTED_MODULE_2__.ELEMENT_BUTTON), className),\n        onClick: onClick,\n        style: {\n            ...style,\n            ...styles.button\n        },\n        ...rest\n    }, renderIcon ? renderIcon() : /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Icon, {\n        className: cssClass(_types_js__WEBPACK_IMPORTED_MODULE_2__.ELEMENT_ICON),\n        style: styles.icon\n    }));\n});\nfunction svgIcon(name, children) {\n    const icon = (props)=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            viewBox: \"0 0 24 24\",\n            width: \"24\",\n            height: \"24\",\n            \"aria-hidden\": \"true\",\n            focusable: \"false\",\n            ...props\n        }, children);\n    icon.displayName = name;\n    return icon;\n}\nfunction createIcon(name, glyph) {\n    return svgIcon(name, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"g\", {\n        fill: \"currentColor\"\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n        d: \"M0 0h24v24H0z\",\n        fill: \"none\"\n    }), glyph));\n}\nfunction createIconDisabled(name, glyph) {\n    return svgIcon(name, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"defs\", null, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"mask\", {\n        id: \"strike\"\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n        d: \"M0 0h24v24H0z\",\n        fill: \"white\"\n    }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n        d: \"M0 0L24 24\",\n        stroke: \"black\",\n        strokeWidth: 4\n    }))), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n        d: \"M0.70707 2.121320L21.878680 23.292883\",\n        stroke: \"currentColor\",\n        strokeWidth: 2\n    }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"g\", {\n        fill: \"currentColor\",\n        mask: \"url(#strike)\"\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n        d: \"M0 0h24v24H0z\",\n        fill: \"none\"\n    }), glyph)));\n}\nconst CloseIcon = createIcon(\"Close\", /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}));\nconst PreviousIcon = createIcon(\"Previous\", /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"\n}));\nconst NextIcon = createIcon(\"Next\", /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"\n}));\nconst LoadingIcon = createIcon(\"Loading\", /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, Array.from({\n    length: 8\n}).map((_, index, array)=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"line\", {\n        key: index,\n        x1: \"12\",\n        y1: \"6.5\",\n        x2: \"12\",\n        y2: \"1.8\",\n        strokeLinecap: \"round\",\n        strokeWidth: \"2.6\",\n        stroke: \"currentColor\",\n        strokeOpacity: 1 / array.length * (index + 1),\n        transform: `rotate(${360 / array.length * index}, 12, 12)`\n    }))));\nconst ErrorIcon = createIcon(\"Error\", /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M21.9,21.9l-8.49-8.49l0,0L3.59,3.59l0,0L2.1,2.1L0.69,3.51L3,5.83V19c0,1.1,0.9,2,2,2h13.17l2.31,2.31L21.9,21.9z M5,18 l3.5-4.5l2.5,3.01L12.17,15l3,3H5z M21,18.17L5.83,3H19c1.1,0,2,0.9,2,2V18.17z\"\n}));\nconst useLayoutEffect = hasWindow() ? react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect : react__WEBPACK_IMPORTED_MODULE_0__.useEffect;\nfunction useMotionPreference() {\n    const [reduceMotion, setReduceMotion] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        var _a, _b;\n        const mediaQuery = (_a = window.matchMedia) === null || _a === void 0 ? void 0 : _a.call(window, \"(prefers-reduced-motion: reduce)\");\n        setReduceMotion(mediaQuery === null || mediaQuery === void 0 ? void 0 : mediaQuery.matches);\n        const listener = (event)=>setReduceMotion(event.matches);\n        (_b = mediaQuery === null || mediaQuery === void 0 ? void 0 : mediaQuery.addEventListener) === null || _b === void 0 ? void 0 : _b.call(mediaQuery, \"change\", listener);\n        return ()=>{\n            var _a;\n            return (_a = mediaQuery === null || mediaQuery === void 0 ? void 0 : mediaQuery.removeEventListener) === null || _a === void 0 ? void 0 : _a.call(mediaQuery, \"change\", listener);\n        };\n    }, []);\n    return reduceMotion;\n}\nfunction currentTransformation(node) {\n    let x = 0;\n    let y = 0;\n    let z = 0;\n    const matrix = window.getComputedStyle(node).transform;\n    const matcher = matrix.match(/matrix.*\\((.+)\\)/);\n    if (matcher) {\n        const values = matcher[1].split(\",\").map(parseInt);\n        if (values.length === 6) {\n            x = values[4];\n            y = values[5];\n        } else if (values.length === 16) {\n            x = values[12];\n            y = values[13];\n            z = values[14];\n        }\n    }\n    return {\n        x,\n        y,\n        z\n    };\n}\nfunction useAnimation(nodeRef, computeAnimation) {\n    const snapshot = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n    const animation = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n    const reduceMotion = useMotionPreference();\n    useLayoutEffect(()=>{\n        var _a, _b, _c;\n        if (nodeRef.current && snapshot.current !== undefined && !reduceMotion) {\n            const { keyframes, duration, easing, onfinish } = computeAnimation(snapshot.current, nodeRef.current.getBoundingClientRect(), currentTransformation(nodeRef.current)) || {};\n            if (keyframes && duration) {\n                (_a = animation.current) === null || _a === void 0 ? void 0 : _a.cancel();\n                animation.current = undefined;\n                try {\n                    animation.current = (_c = (_b = nodeRef.current).animate) === null || _c === void 0 ? void 0 : _c.call(_b, keyframes, {\n                        duration,\n                        easing\n                    });\n                } catch (err) {\n                    console.error(err);\n                }\n                if (animation.current) {\n                    animation.current.onfinish = ()=>{\n                        animation.current = undefined;\n                        onfinish === null || onfinish === void 0 ? void 0 : onfinish();\n                    };\n                }\n            }\n        }\n        snapshot.current = undefined;\n    });\n    return {\n        prepareAnimation: (currentSnapshot)=>{\n            snapshot.current = currentSnapshot;\n        },\n        isAnimationPlaying: ()=>{\n            var _a;\n            return ((_a = animation.current) === null || _a === void 0 ? void 0 : _a.playState) === \"running\";\n        }\n    };\n}\nfunction useContainerRect() {\n    const containerRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const observerRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n    const [containerRect, setContainerRect] = react__WEBPACK_IMPORTED_MODULE_0__.useState();\n    const setContainerRef = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((node)=>{\n        containerRef.current = node;\n        if (observerRef.current) {\n            observerRef.current.disconnect();\n            observerRef.current = undefined;\n        }\n        const updateContainerRect = ()=>{\n            if (node) {\n                const styles = window.getComputedStyle(node);\n                const parse = (value)=>parseFloat(value) || 0;\n                setContainerRect({\n                    width: Math.round(node.clientWidth - parse(styles.paddingLeft) - parse(styles.paddingRight)),\n                    height: Math.round(node.clientHeight - parse(styles.paddingTop) - parse(styles.paddingBottom))\n                });\n            } else {\n                setContainerRect(undefined);\n            }\n        };\n        updateContainerRect();\n        if (node && typeof ResizeObserver !== \"undefined\") {\n            observerRef.current = new ResizeObserver(updateContainerRect);\n            observerRef.current.observe(node);\n        }\n    }, []);\n    return {\n        setContainerRef,\n        containerRef,\n        containerRect\n    };\n}\nfunction useDelay() {\n    const timeoutId = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n    const { setTimeout, clearTimeout } = useTimeouts();\n    return react__WEBPACK_IMPORTED_MODULE_0__.useCallback((callback, delay)=>{\n        clearTimeout(timeoutId.current);\n        timeoutId.current = setTimeout(callback, delay > 0 ? delay : 0);\n    }, [\n        setTimeout,\n        clearTimeout\n    ]);\n}\nfunction useEventCallback(fn) {\n    const ref = react__WEBPACK_IMPORTED_MODULE_0__.useRef(fn);\n    useLayoutEffect(()=>{\n        ref.current = fn;\n    });\n    return react__WEBPACK_IMPORTED_MODULE_0__.useCallback((...args)=>{\n        var _a;\n        return (_a = ref.current) === null || _a === void 0 ? void 0 : _a.call(ref, ...args);\n    }, []);\n}\nfunction setRef(ref, value) {\n    if (typeof ref === \"function\") {\n        ref(value);\n    } else if (ref) {\n        ref.current = value;\n    }\n}\nfunction useForkRef(refA, refB) {\n    return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>refA == null && refB == null ? null : (refValue)=>{\n            setRef(refA, refValue);\n            setRef(refB, refValue);\n        }, [\n        refA,\n        refB\n    ]);\n}\nfunction useLoseFocus(focus, disabled = false) {\n    const focused = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n    useLayoutEffect(()=>{\n        if (disabled && focused.current) {\n            focused.current = false;\n            focus();\n        }\n    }, [\n        disabled,\n        focus\n    ]);\n    const onFocus = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(()=>{\n        focused.current = true;\n    }, []);\n    const onBlur = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(()=>{\n        focused.current = false;\n    }, []);\n    return {\n        onFocus,\n        onBlur\n    };\n}\nfunction useRTL() {\n    const [isRTL, setIsRTL] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\n    useLayoutEffect(()=>{\n        setIsRTL(window.getComputedStyle(window.document.documentElement).direction === \"rtl\");\n    }, []);\n    return isRTL;\n}\nfunction useSensors() {\n    const [subscribers] = react__WEBPACK_IMPORTED_MODULE_0__.useState({});\n    const notifySubscribers = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((type, event)=>{\n        var _a;\n        (_a = subscribers[type]) === null || _a === void 0 ? void 0 : _a.forEach((listener)=>{\n            if (!event.isPropagationStopped()) listener(event);\n        });\n    }, [\n        subscribers\n    ]);\n    const registerSensors = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>({\n            onPointerDown: (event)=>notifySubscribers(_types_js__WEBPACK_IMPORTED_MODULE_2__.EVENT_ON_POINTER_DOWN, event),\n            onPointerMove: (event)=>notifySubscribers(_types_js__WEBPACK_IMPORTED_MODULE_2__.EVENT_ON_POINTER_MOVE, event),\n            onPointerUp: (event)=>notifySubscribers(_types_js__WEBPACK_IMPORTED_MODULE_2__.EVENT_ON_POINTER_UP, event),\n            onPointerLeave: (event)=>notifySubscribers(_types_js__WEBPACK_IMPORTED_MODULE_2__.EVENT_ON_POINTER_LEAVE, event),\n            onPointerCancel: (event)=>notifySubscribers(_types_js__WEBPACK_IMPORTED_MODULE_2__.EVENT_ON_POINTER_CANCEL, event),\n            onKeyDown: (event)=>notifySubscribers(_types_js__WEBPACK_IMPORTED_MODULE_2__.EVENT_ON_KEY_DOWN, event),\n            onKeyUp: (event)=>notifySubscribers(_types_js__WEBPACK_IMPORTED_MODULE_2__.EVENT_ON_KEY_UP, event),\n            onWheel: (event)=>notifySubscribers(_types_js__WEBPACK_IMPORTED_MODULE_2__.EVENT_ON_WHEEL, event)\n        }), [\n        notifySubscribers\n    ]);\n    const subscribeSensors = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((type, callback)=>{\n        if (!subscribers[type]) {\n            subscribers[type] = [];\n        }\n        subscribers[type].unshift(callback);\n        return ()=>{\n            const listeners = subscribers[type];\n            if (listeners) {\n                listeners.splice(0, listeners.length, ...listeners.filter((el)=>el !== callback));\n            }\n        };\n    }, [\n        subscribers\n    ]);\n    return {\n        registerSensors,\n        subscribeSensors\n    };\n}\nfunction useThrottle(callback, delay) {\n    const lastCallbackTime = react__WEBPACK_IMPORTED_MODULE_0__.useRef(0);\n    const delayCallback = useDelay();\n    const executeCallback = useEventCallback((...args)=>{\n        lastCallbackTime.current = Date.now();\n        callback(args);\n    });\n    return react__WEBPACK_IMPORTED_MODULE_0__.useCallback((...args)=>{\n        delayCallback(()=>{\n            executeCallback(args);\n        }, delay - (Date.now() - lastCallbackTime.current));\n    }, [\n        delay,\n        executeCallback,\n        delayCallback\n    ]);\n}\nconst slidePrefix = makeComposePrefix(\"slide\");\nconst slideImagePrefix = makeComposePrefix(\"slide_image\");\nfunction ImageSlide({ slide: image, offset, render, rect, imageFit, imageProps, onClick, onLoad, style }) {\n    var _a, _b, _c, _d, _e, _f, _g;\n    const [status, setStatus] = react__WEBPACK_IMPORTED_MODULE_0__.useState(_types_js__WEBPACK_IMPORTED_MODULE_2__.SLIDE_STATUS_LOADING);\n    const { publish } = useEvents();\n    const { setTimeout } = useTimeouts();\n    const imageRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        if (offset === 0) {\n            publish((0,_types_js__WEBPACK_IMPORTED_MODULE_2__.activeSlideStatus)(status));\n        }\n    }, [\n        offset,\n        status,\n        publish\n    ]);\n    const handleLoading = useEventCallback((img)=>{\n        (\"decode\" in img ? img.decode() : Promise.resolve()).catch(()=>{}).then(()=>{\n            if (!img.parentNode) {\n                return;\n            }\n            setStatus(_types_js__WEBPACK_IMPORTED_MODULE_2__.SLIDE_STATUS_COMPLETE);\n            setTimeout(()=>{\n                onLoad === null || onLoad === void 0 ? void 0 : onLoad(img);\n            }, 0);\n        });\n    });\n    const setImageRef = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((img)=>{\n        imageRef.current = img;\n        if (img === null || img === void 0 ? void 0 : img.complete) {\n            handleLoading(img);\n        }\n    }, [\n        handleLoading\n    ]);\n    const handleOnLoad = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((event)=>{\n        handleLoading(event.currentTarget);\n    }, [\n        handleLoading\n    ]);\n    const onError = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(()=>{\n        setStatus(_types_js__WEBPACK_IMPORTED_MODULE_2__.SLIDE_STATUS_ERROR);\n    }, []);\n    const cover = isImageFitCover(image, imageFit);\n    const nonInfinite = (value, fallback)=>Number.isFinite(value) ? value : fallback;\n    const maxWidth = nonInfinite(Math.max(...((_b = (_a = image.srcSet) === null || _a === void 0 ? void 0 : _a.map((x)=>x.width)) !== null && _b !== void 0 ? _b : []).concat(image.width ? [\n        image.width\n    ] : []).filter(Boolean)), ((_c = imageRef.current) === null || _c === void 0 ? void 0 : _c.naturalWidth) || 0);\n    const maxHeight = nonInfinite(Math.max(...((_e = (_d = image.srcSet) === null || _d === void 0 ? void 0 : _d.map((x)=>x.height)) !== null && _e !== void 0 ? _e : []).concat(image.height ? [\n        image.height\n    ] : []).filter(Boolean)), ((_f = imageRef.current) === null || _f === void 0 ? void 0 : _f.naturalHeight) || 0);\n    const defaultStyle = maxWidth && maxHeight ? {\n        maxWidth: `min(${maxWidth}px, 100%)`,\n        maxHeight: `min(${maxHeight}px, 100%)`\n    } : {\n        maxWidth: \"100%\",\n        maxHeight: \"100%\"\n    };\n    const srcSet = (_g = image.srcSet) === null || _g === void 0 ? void 0 : _g.sort((a, b)=>a.width - b.width).map((item)=>`${item.src} ${item.width}w`).join(\", \");\n    const estimateActualWidth = ()=>rect && !cover && image.width && image.height ? rect.height / image.height * image.width : Number.MAX_VALUE;\n    const sizes = srcSet && rect && hasWindow() ? `${Math.round(Math.min(estimateActualWidth(), rect.width))}px` : undefined;\n    const { style: imagePropsStyle, className: imagePropsClassName, ...restImageProps } = imageProps || {};\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"img\", {\n        ref: setImageRef,\n        onLoad: handleOnLoad,\n        onError: onError,\n        onClick: onClick,\n        draggable: false,\n        className: clsx(cssClass(slideImagePrefix()), cover && cssClass(slideImagePrefix(\"cover\")), status !== _types_js__WEBPACK_IMPORTED_MODULE_2__.SLIDE_STATUS_COMPLETE && cssClass(slideImagePrefix(\"loading\")), imagePropsClassName),\n        style: {\n            ...defaultStyle,\n            ...style,\n            ...imagePropsStyle\n        },\n        ...restImageProps,\n        alt: image.alt,\n        sizes: sizes,\n        srcSet: srcSet,\n        src: image.src\n    }), status !== _types_js__WEBPACK_IMPORTED_MODULE_2__.SLIDE_STATUS_COMPLETE && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: cssClass(slidePrefix(_types_js__WEBPACK_IMPORTED_MODULE_2__.SLIDE_STATUS_PLACEHOLDER))\n    }, status === _types_js__WEBPACK_IMPORTED_MODULE_2__.SLIDE_STATUS_LOADING && ((render === null || render === void 0 ? void 0 : render.iconLoading) ? render.iconLoading() : /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(LoadingIcon, {\n        className: clsx(cssClass(_types_js__WEBPACK_IMPORTED_MODULE_2__.ELEMENT_ICON), cssClass(slidePrefix(_types_js__WEBPACK_IMPORTED_MODULE_2__.SLIDE_STATUS_LOADING)))\n    })), status === _types_js__WEBPACK_IMPORTED_MODULE_2__.SLIDE_STATUS_ERROR && ((render === null || render === void 0 ? void 0 : render.iconError) ? render.iconError() : /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ErrorIcon, {\n        className: clsx(cssClass(_types_js__WEBPACK_IMPORTED_MODULE_2__.ELEMENT_ICON), cssClass(slidePrefix(_types_js__WEBPACK_IMPORTED_MODULE_2__.SLIDE_STATUS_ERROR)))\n    }))));\n}\nvar SwipeState;\n(function(SwipeState) {\n    SwipeState[SwipeState[\"NONE\"] = 0] = \"NONE\";\n    SwipeState[SwipeState[\"SWIPE\"] = 1] = \"SWIPE\";\n    SwipeState[SwipeState[\"PULL\"] = 2] = \"PULL\";\n    SwipeState[SwipeState[\"ANIMATION\"] = 3] = \"ANIMATION\";\n})(SwipeState || (SwipeState = {}));\nfunction usePointerEvents(subscribeSensors, onPointerDown, onPointerMove, onPointerUp, disabled) {\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>!disabled ? cleanup(subscribeSensors(_types_js__WEBPACK_IMPORTED_MODULE_2__.EVENT_ON_POINTER_DOWN, onPointerDown), subscribeSensors(_types_js__WEBPACK_IMPORTED_MODULE_2__.EVENT_ON_POINTER_MOVE, onPointerMove), subscribeSensors(_types_js__WEBPACK_IMPORTED_MODULE_2__.EVENT_ON_POINTER_UP, onPointerUp), subscribeSensors(_types_js__WEBPACK_IMPORTED_MODULE_2__.EVENT_ON_POINTER_LEAVE, onPointerUp), subscribeSensors(_types_js__WEBPACK_IMPORTED_MODULE_2__.EVENT_ON_POINTER_CANCEL, onPointerUp)) : ()=>{}, [\n        subscribeSensors,\n        onPointerDown,\n        onPointerMove,\n        onPointerUp,\n        disabled\n    ]);\n}\nvar Gesture;\n(function(Gesture) {\n    Gesture[Gesture[\"NONE\"] = 0] = \"NONE\";\n    Gesture[Gesture[\"SWIPE\"] = 1] = \"SWIPE\";\n    Gesture[Gesture[\"PULL\"] = 2] = \"PULL\";\n})(Gesture || (Gesture = {}));\nconst SWIPE_THRESHOLD = 30;\nfunction usePointerSwipe(subscribeSensors, isSwipeValid, containerWidth, swipeAnimationDuration, onSwipeStart, onSwipeProgress, onSwipeFinish, onSwipeCancel, pullUpEnabled, pullDownEnabled, onPullStart, onPullProgress, onPullFinish, onPullCancel) {\n    const offset = react__WEBPACK_IMPORTED_MODULE_0__.useRef(0);\n    const pointers = react__WEBPACK_IMPORTED_MODULE_0__.useRef([]);\n    const activePointer = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n    const startTime = react__WEBPACK_IMPORTED_MODULE_0__.useRef(0);\n    const gesture = react__WEBPACK_IMPORTED_MODULE_0__.useRef(Gesture.NONE);\n    const clearPointer = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((event)=>{\n        if (activePointer.current === event.pointerId) {\n            activePointer.current = undefined;\n            gesture.current = Gesture.NONE;\n        }\n        const currentPointers = pointers.current;\n        currentPointers.splice(0, currentPointers.length, ...currentPointers.filter((p)=>p.pointerId !== event.pointerId));\n    }, []);\n    const addPointer = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((event)=>{\n        clearPointer(event);\n        event.persist();\n        pointers.current.push(event);\n    }, [\n        clearPointer\n    ]);\n    const onPointerDown = useEventCallback((event)=>{\n        addPointer(event);\n    });\n    const exceedsPullThreshold = (value, threshold)=>pullDownEnabled && value > threshold || pullUpEnabled && value < -threshold;\n    const onPointerUp = useEventCallback((event)=>{\n        if (pointers.current.find((x)=>x.pointerId === event.pointerId) && activePointer.current === event.pointerId) {\n            const duration = Date.now() - startTime.current;\n            const currentOffset = offset.current;\n            if (gesture.current === Gesture.SWIPE) {\n                if (Math.abs(currentOffset) > 0.3 * containerWidth || Math.abs(currentOffset) > 5 && duration < swipeAnimationDuration) {\n                    onSwipeFinish(currentOffset, duration);\n                } else {\n                    onSwipeCancel(currentOffset);\n                }\n            } else if (gesture.current === Gesture.PULL) {\n                if (exceedsPullThreshold(currentOffset, 2 * SWIPE_THRESHOLD)) {\n                    onPullFinish(currentOffset, duration);\n                } else {\n                    onPullCancel(currentOffset);\n                }\n            }\n            offset.current = 0;\n            gesture.current = Gesture.NONE;\n        }\n        clearPointer(event);\n    });\n    const onPointerMove = useEventCallback((event)=>{\n        const pointer = pointers.current.find((p)=>p.pointerId === event.pointerId);\n        if (pointer) {\n            const isCurrentPointer = activePointer.current === event.pointerId;\n            if (event.buttons === 0) {\n                if (isCurrentPointer && offset.current !== 0) {\n                    onPointerUp(event);\n                } else {\n                    clearPointer(pointer);\n                }\n                return;\n            }\n            const deltaX = event.clientX - pointer.clientX;\n            const deltaY = event.clientY - pointer.clientY;\n            if (activePointer.current === undefined) {\n                const startGesture = (newGesture)=>{\n                    addPointer(event);\n                    activePointer.current = event.pointerId;\n                    startTime.current = Date.now();\n                    gesture.current = newGesture;\n                };\n                if (Math.abs(deltaX) > Math.abs(deltaY) && Math.abs(deltaX) > SWIPE_THRESHOLD && isSwipeValid(deltaX)) {\n                    startGesture(Gesture.SWIPE);\n                    onSwipeStart();\n                } else if (Math.abs(deltaY) > Math.abs(deltaX) && exceedsPullThreshold(deltaY, SWIPE_THRESHOLD)) {\n                    startGesture(Gesture.PULL);\n                    onPullStart();\n                }\n            } else if (isCurrentPointer) {\n                if (gesture.current === Gesture.SWIPE) {\n                    offset.current = deltaX;\n                    onSwipeProgress(deltaX);\n                } else if (gesture.current === Gesture.PULL) {\n                    offset.current = deltaY;\n                    onPullProgress(deltaY);\n                }\n            }\n        }\n    });\n    usePointerEvents(subscribeSensors, onPointerDown, onPointerMove, onPointerUp);\n}\nfunction usePreventWheelDefaults({ preventDefaultWheelX, preventDefaultWheelY }) {\n    const ref = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const listener = useEventCallback((event)=>{\n        const horizontal = Math.abs(event.deltaX) > Math.abs(event.deltaY);\n        if (horizontal && preventDefaultWheelX || !horizontal && preventDefaultWheelY || event.ctrlKey) {\n            event.preventDefault();\n        }\n    });\n    return react__WEBPACK_IMPORTED_MODULE_0__.useCallback((node)=>{\n        var _a;\n        if (node) {\n            node.addEventListener(\"wheel\", listener, {\n                passive: false\n            });\n        } else {\n            (_a = ref.current) === null || _a === void 0 ? void 0 : _a.removeEventListener(\"wheel\", listener);\n        }\n        ref.current = node;\n    }, [\n        listener\n    ]);\n}\nfunction useWheelSwipe(swipeState, subscribeSensors, isSwipeValid, containerWidth, swipeAnimationDuration, onSwipeStart, onSwipeProgress, onSwipeFinish, onSwipeCancel) {\n    const offset = react__WEBPACK_IMPORTED_MODULE_0__.useRef(0);\n    const intent = react__WEBPACK_IMPORTED_MODULE_0__.useRef(0);\n    const intentCleanup = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n    const resetCleanup = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n    const wheelResidualMomentum = react__WEBPACK_IMPORTED_MODULE_0__.useRef(0);\n    const startTime = react__WEBPACK_IMPORTED_MODULE_0__.useRef(0);\n    const { setTimeout, clearTimeout } = useTimeouts();\n    const cancelSwipeIntentCleanup = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(()=>{\n        if (intentCleanup.current) {\n            clearTimeout(intentCleanup.current);\n            intentCleanup.current = undefined;\n        }\n    }, [\n        clearTimeout\n    ]);\n    const cancelSwipeResetCleanup = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(()=>{\n        if (resetCleanup.current) {\n            clearTimeout(resetCleanup.current);\n            resetCleanup.current = undefined;\n        }\n    }, [\n        clearTimeout\n    ]);\n    const handleCleanup = useEventCallback(()=>{\n        if (swipeState !== SwipeState.SWIPE) {\n            offset.current = 0;\n            startTime.current = 0;\n            cancelSwipeIntentCleanup();\n            cancelSwipeResetCleanup();\n        }\n    });\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(handleCleanup, [\n        swipeState,\n        handleCleanup\n    ]);\n    const handleCancelSwipe = useEventCallback((currentSwipeOffset)=>{\n        resetCleanup.current = undefined;\n        if (offset.current === currentSwipeOffset) {\n            onSwipeCancel(offset.current);\n        }\n    });\n    const onWheel = useEventCallback((event)=>{\n        if (event.ctrlKey) {\n            return;\n        }\n        if (Math.abs(event.deltaY) > Math.abs(event.deltaX)) {\n            return;\n        }\n        if (swipeState === SwipeState.NONE) {\n            if (Math.abs(event.deltaX) <= 1.2 * Math.abs(wheelResidualMomentum.current)) {\n                wheelResidualMomentum.current = event.deltaX;\n                return;\n            }\n            if (!isSwipeValid(-event.deltaX)) {\n                return;\n            }\n            intent.current += event.deltaX;\n            cancelSwipeIntentCleanup();\n            if (Math.abs(intent.current) > 30) {\n                intent.current = 0;\n                wheelResidualMomentum.current = 0;\n                startTime.current = Date.now();\n                onSwipeStart();\n            } else {\n                const currentSwipeIntent = intent.current;\n                intentCleanup.current = setTimeout(()=>{\n                    intentCleanup.current = undefined;\n                    if (currentSwipeIntent === intent.current) {\n                        intent.current = 0;\n                    }\n                }, swipeAnimationDuration);\n            }\n        } else if (swipeState === SwipeState.SWIPE) {\n            let newSwipeOffset = offset.current - event.deltaX;\n            newSwipeOffset = Math.min(Math.abs(newSwipeOffset), containerWidth) * Math.sign(newSwipeOffset);\n            offset.current = newSwipeOffset;\n            onSwipeProgress(newSwipeOffset);\n            cancelSwipeResetCleanup();\n            if (Math.abs(newSwipeOffset) > 0.2 * containerWidth) {\n                wheelResidualMomentum.current = event.deltaX;\n                onSwipeFinish(newSwipeOffset, Date.now() - startTime.current);\n                return;\n            }\n            resetCleanup.current = setTimeout(()=>handleCancelSwipe(newSwipeOffset), 2 * swipeAnimationDuration);\n        } else {\n            wheelResidualMomentum.current = event.deltaX;\n        }\n    });\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>subscribeSensors(_types_js__WEBPACK_IMPORTED_MODULE_2__.EVENT_ON_WHEEL, onWheel), [\n        subscribeSensors,\n        onWheel\n    ]);\n}\nconst cssContainerPrefix = makeComposePrefix(\"container\");\nconst ControllerContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);\nconst useController = makeUseContext(\"useController\", \"ControllerContext\", ControllerContext);\nfunction Controller({ children, ...props }) {\n    var _a;\n    const { carousel, animation, controller, on, styles, render } = props;\n    const { closeOnPullUp, closeOnPullDown, preventDefaultWheelX, preventDefaultWheelY } = controller;\n    const [toolbarWidth, setToolbarWidth] = react__WEBPACK_IMPORTED_MODULE_0__.useState();\n    const state = useLightboxState();\n    const dispatch = useLightboxDispatch();\n    const [swipeState, setSwipeState] = react__WEBPACK_IMPORTED_MODULE_0__.useState(SwipeState.NONE);\n    const swipeOffset = react__WEBPACK_IMPORTED_MODULE_0__.useRef(0);\n    const pullOffset = react__WEBPACK_IMPORTED_MODULE_0__.useRef(0);\n    const pullOpacity = react__WEBPACK_IMPORTED_MODULE_0__.useRef(1);\n    const { registerSensors, subscribeSensors } = useSensors();\n    const { subscribe, publish } = useEvents();\n    const cleanupAnimationIncrement = useDelay();\n    const cleanupSwipeOffset = useDelay();\n    const cleanupPullOffset = useDelay();\n    const { containerRef, setContainerRef, containerRect } = useContainerRect();\n    const handleContainerRef = useForkRef(usePreventWheelDefaults({\n        preventDefaultWheelX,\n        preventDefaultWheelY\n    }), setContainerRef);\n    const carouselRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const setCarouselRef = useForkRef(carouselRef, undefined);\n    const isRTL = useRTL();\n    const rtl = (value)=>(isRTL ? -1 : 1) * (typeof value === \"number\" ? value : 1);\n    const focus = useEventCallback(()=>{\n        var _a;\n        return (_a = containerRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n    });\n    const getLightboxProps = useEventCallback(()=>props);\n    const getLightboxState = useEventCallback(()=>state);\n    const prev = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((params)=>publish(_types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_PREV, params), [\n        publish\n    ]);\n    const next = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((params)=>publish(_types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_NEXT, params), [\n        publish\n    ]);\n    const close = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(()=>publish(_types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_CLOSE), [\n        publish\n    ]);\n    const isSwipeValid = (offset)=>!(carousel.finite && (rtl(offset) > 0 && state.currentIndex === 0 || rtl(offset) < 0 && state.currentIndex === state.slides.length - 1));\n    const setSwipeOffset = (offset)=>{\n        var _a;\n        swipeOffset.current = offset;\n        (_a = containerRef.current) === null || _a === void 0 ? void 0 : _a.style.setProperty(cssVar(\"swipe_offset\"), `${Math.round(offset)}px`);\n    };\n    const setPullOffset = (offset)=>{\n        var _a, _b;\n        pullOffset.current = offset;\n        pullOpacity.current = (()=>{\n            const threshold = 60;\n            const minOpacity = 0.5;\n            const offsetValue = (()=>{\n                if (closeOnPullDown && offset > 0) return offset;\n                if (closeOnPullUp && offset < 0) return -offset;\n                return 0;\n            })();\n            return Math.min(Math.max(round(1 - offsetValue / threshold * (1 - minOpacity), 2), minOpacity), 1);\n        })();\n        (_a = containerRef.current) === null || _a === void 0 ? void 0 : _a.style.setProperty(cssVar(\"pull_offset\"), `${Math.round(offset)}px`);\n        (_b = containerRef.current) === null || _b === void 0 ? void 0 : _b.style.setProperty(cssVar(\"pull_opacity\"), `${pullOpacity.current}`);\n    };\n    const { prepareAnimation: preparePullAnimation } = useAnimation(carouselRef, (snapshot, rect, translate)=>{\n        if (carouselRef.current && containerRect) {\n            return {\n                keyframes: [\n                    {\n                        transform: `translate(0, ${snapshot.rect.y - rect.y + translate.y}px)`,\n                        opacity: snapshot.opacity\n                    },\n                    {\n                        transform: \"translate(0, 0)\",\n                        opacity: 1\n                    }\n                ],\n                duration: snapshot.duration,\n                easing: animation.easing.fade\n            };\n        }\n        return undefined;\n    });\n    const pull = (offset, cancel)=>{\n        if (closeOnPullUp || closeOnPullDown) {\n            setPullOffset(offset);\n            let duration = 0;\n            if (carouselRef.current) {\n                duration = animation.fade * (cancel ? 2 : 1);\n                preparePullAnimation({\n                    rect: carouselRef.current.getBoundingClientRect(),\n                    opacity: pullOpacity.current,\n                    duration\n                });\n            }\n            cleanupPullOffset(()=>{\n                setPullOffset(0);\n                setSwipeState(SwipeState.NONE);\n            }, duration);\n            setSwipeState(SwipeState.ANIMATION);\n            if (!cancel) {\n                close();\n            }\n        }\n    };\n    const { prepareAnimation, isAnimationPlaying } = useAnimation(carouselRef, (snapshot, rect, translate)=>{\n        var _a;\n        if (carouselRef.current && containerRect && ((_a = state.animation) === null || _a === void 0 ? void 0 : _a.duration)) {\n            const parsedSpacing = parseLengthPercentage(carousel.spacing);\n            const spacingValue = (parsedSpacing.percent ? parsedSpacing.percent * containerRect.width / 100 : parsedSpacing.pixel) || 0;\n            return {\n                keyframes: [\n                    {\n                        transform: `translate(${rtl(state.globalIndex - snapshot.index) * (containerRect.width + spacingValue) + snapshot.rect.x - rect.x + translate.x}px, 0)`\n                    },\n                    {\n                        transform: \"translate(0, 0)\"\n                    }\n                ],\n                duration: state.animation.duration,\n                easing: state.animation.easing\n            };\n        }\n        return undefined;\n    });\n    const swipe = useEventCallback((action)=>{\n        var _a, _b;\n        const currentSwipeOffset = action.offset || 0;\n        const swipeDuration = !currentSwipeOffset ? (_a = animation.navigation) !== null && _a !== void 0 ? _a : animation.swipe : animation.swipe;\n        const swipeEasing = !currentSwipeOffset && !isAnimationPlaying() ? animation.easing.navigation : animation.easing.swipe;\n        let { direction } = action;\n        const count = (_b = action.count) !== null && _b !== void 0 ? _b : 1;\n        let newSwipeState = SwipeState.ANIMATION;\n        let newSwipeAnimationDuration = swipeDuration * count;\n        if (!direction) {\n            const containerWidth = containerRect === null || containerRect === void 0 ? void 0 : containerRect.width;\n            const elapsedTime = action.duration || 0;\n            const expectedTime = containerWidth ? swipeDuration / containerWidth * Math.abs(currentSwipeOffset) : swipeDuration;\n            if (count !== 0) {\n                if (elapsedTime < expectedTime) {\n                    newSwipeAnimationDuration = newSwipeAnimationDuration / expectedTime * Math.max(elapsedTime, expectedTime / 5);\n                } else if (containerWidth) {\n                    newSwipeAnimationDuration = swipeDuration / containerWidth * (containerWidth - Math.abs(currentSwipeOffset));\n                }\n                direction = rtl(currentSwipeOffset) > 0 ? _types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_PREV : _types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_NEXT;\n            } else {\n                newSwipeAnimationDuration = swipeDuration / 2;\n            }\n        }\n        let increment = 0;\n        if (direction === _types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_PREV) {\n            if (isSwipeValid(rtl(1))) {\n                increment = -count;\n            } else {\n                newSwipeState = SwipeState.NONE;\n                newSwipeAnimationDuration = swipeDuration;\n            }\n        } else if (direction === _types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_NEXT) {\n            if (isSwipeValid(rtl(-1))) {\n                increment = count;\n            } else {\n                newSwipeState = SwipeState.NONE;\n                newSwipeAnimationDuration = swipeDuration;\n            }\n        }\n        newSwipeAnimationDuration = Math.round(newSwipeAnimationDuration);\n        cleanupSwipeOffset(()=>{\n            setSwipeOffset(0);\n            setSwipeState(SwipeState.NONE);\n        }, newSwipeAnimationDuration);\n        if (carouselRef.current) {\n            prepareAnimation({\n                rect: carouselRef.current.getBoundingClientRect(),\n                index: state.globalIndex\n            });\n        }\n        setSwipeState(newSwipeState);\n        publish(_types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_SWIPE, {\n            type: \"swipe\",\n            increment,\n            duration: newSwipeAnimationDuration,\n            easing: swipeEasing\n        });\n    });\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        var _a, _b;\n        if (((_a = state.animation) === null || _a === void 0 ? void 0 : _a.increment) && ((_b = state.animation) === null || _b === void 0 ? void 0 : _b.duration)) {\n            cleanupAnimationIncrement(()=>dispatch({\n                    type: \"swipe\",\n                    increment: 0\n                }), state.animation.duration);\n        }\n    }, [\n        state.animation,\n        dispatch,\n        cleanupAnimationIncrement\n    ]);\n    const swipeParams = [\n        subscribeSensors,\n        isSwipeValid,\n        (containerRect === null || containerRect === void 0 ? void 0 : containerRect.width) || 0,\n        animation.swipe,\n        ()=>setSwipeState(SwipeState.SWIPE),\n        (offset)=>setSwipeOffset(offset),\n        (offset, duration)=>swipe({\n                offset,\n                duration,\n                count: 1\n            }),\n        (offset)=>swipe({\n                offset,\n                count: 0\n            })\n    ];\n    const pullParams = [\n        ()=>{\n            if (closeOnPullDown) {\n                setSwipeState(SwipeState.PULL);\n            }\n        },\n        (offset)=>setPullOffset(offset),\n        (offset)=>pull(offset),\n        (offset)=>pull(offset, true)\n    ];\n    usePointerSwipe(...swipeParams, closeOnPullUp, closeOnPullDown, ...pullParams);\n    useWheelSwipe(swipeState, ...swipeParams);\n    const focusOnMount = useEventCallback(()=>{\n        if (controller.focus) {\n            if (document.querySelector(`.${cssClass(_types_js__WEBPACK_IMPORTED_MODULE_2__.MODULE_PORTAL)} .${cssClass(cssContainerPrefix())}`)) {\n                focus();\n            }\n        }\n    });\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(focusOnMount, [\n        focusOnMount\n    ]);\n    const onViewCallback = useEventCallback(()=>{\n        var _a;\n        (_a = on.view) === null || _a === void 0 ? void 0 : _a.call(on, {\n            index: state.currentIndex\n        });\n    });\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(onViewCallback, [\n        state.globalIndex,\n        onViewCallback\n    ]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>cleanup(subscribe(_types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_PREV, (action)=>swipe({\n                direction: _types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_PREV,\n                ...action\n            })), subscribe(_types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_NEXT, (action)=>swipe({\n                direction: _types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_NEXT,\n                ...action\n            })), subscribe(_types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_SWIPE, (action)=>dispatch(action))), [\n        subscribe,\n        swipe,\n        dispatch\n    ]);\n    const context = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>({\n            prev,\n            next,\n            close,\n            focus,\n            slideRect: containerRect ? computeSlideRect(containerRect, carousel.padding) : {\n                width: 0,\n                height: 0\n            },\n            containerRect: containerRect || {\n                width: 0,\n                height: 0\n            },\n            subscribeSensors,\n            containerRef,\n            setCarouselRef,\n            toolbarWidth,\n            setToolbarWidth\n        }), [\n        prev,\n        next,\n        close,\n        focus,\n        subscribeSensors,\n        containerRect,\n        containerRef,\n        setCarouselRef,\n        toolbarWidth,\n        setToolbarWidth,\n        carousel.padding\n    ]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useImperativeHandle(controller.ref, ()=>({\n            prev,\n            next,\n            close,\n            focus,\n            getLightboxProps,\n            getLightboxState\n        }), [\n        prev,\n        next,\n        close,\n        focus,\n        getLightboxProps,\n        getLightboxState\n    ]);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        ref: handleContainerRef,\n        className: clsx(cssClass(cssContainerPrefix()), cssClass(_types_js__WEBPACK_IMPORTED_MODULE_2__.CLASS_FLEX_CENTER)),\n        style: {\n            ...swipeState === SwipeState.SWIPE ? {\n                [cssVar(\"swipe_offset\")]: `${Math.round(swipeOffset.current)}px`\n            } : null,\n            ...swipeState === SwipeState.PULL ? {\n                [cssVar(\"pull_offset\")]: `${Math.round(pullOffset.current)}px`,\n                [cssVar(\"pull_opacity\")]: `${pullOpacity.current}`\n            } : null,\n            ...controller.touchAction !== \"none\" ? {\n                [cssVar(\"controller_touch_action\")]: controller.touchAction\n            } : null,\n            ...styles.container\n        },\n        ...controller.aria ? {\n            role: \"presentation\",\n            \"aria-live\": \"polite\"\n        } : null,\n        tabIndex: -1,\n        ...registerSensors\n    }, containerRect && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ControllerContext.Provider, {\n        value: context\n    }, children, (_a = render.controls) === null || _a === void 0 ? void 0 : _a.call(render)));\n}\nconst ControllerModule = createModule(_types_js__WEBPACK_IMPORTED_MODULE_2__.MODULE_CONTROLLER, Controller);\nfunction cssPrefix$2(value) {\n    return composePrefix(_types_js__WEBPACK_IMPORTED_MODULE_2__.MODULE_CAROUSEL, value);\n}\nfunction cssSlidePrefix(value) {\n    return composePrefix(\"slide\", value);\n}\nfunction CarouselSlide({ slide, offset }) {\n    const containerRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const { currentIndex } = useLightboxState();\n    const { slideRect, close } = useController();\n    const { render, carousel: { imageFit, imageProps }, on: { click: onClick }, controller: { closeOnBackdropClick }, styles: { slide: style } } = useLightboxProps();\n    const renderSlide = ()=>{\n        var _a, _b, _c, _d;\n        let rendered = (_a = render.slide) === null || _a === void 0 ? void 0 : _a.call(render, {\n            slide,\n            offset,\n            rect: slideRect\n        });\n        if (!rendered && isImageSlide(slide)) {\n            rendered = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ImageSlide, {\n                slide: slide,\n                offset: offset,\n                render: render,\n                rect: slideRect,\n                imageFit: imageFit,\n                imageProps: imageProps,\n                onClick: offset === 0 ? ()=>onClick === null || onClick === void 0 ? void 0 : onClick({\n                        index: currentIndex\n                    }) : undefined\n            });\n        }\n        return rendered ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (_b = render.slideHeader) === null || _b === void 0 ? void 0 : _b.call(render, {\n            slide\n        }), ((_c = render.slideContainer) !== null && _c !== void 0 ? _c : ({ children })=>children)({\n            slide,\n            children: rendered\n        }), (_d = render.slideFooter) === null || _d === void 0 ? void 0 : _d.call(render, {\n            slide\n        })) : null;\n    };\n    const handleBackdropClick = (event)=>{\n        const container = containerRef.current;\n        const target = event.target instanceof HTMLElement ? event.target : undefined;\n        if (closeOnBackdropClick && target && container && (target === container || Array.from(container.children).find((x)=>x === target) && target.classList.contains(cssClass(_types_js__WEBPACK_IMPORTED_MODULE_2__.CLASS_SLIDE_WRAPPER)))) {\n            close();\n        }\n    };\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        ref: containerRef,\n        className: clsx(cssClass(cssSlidePrefix()), offset === 0 && cssClass(cssSlidePrefix(\"current\")), cssClass(_types_js__WEBPACK_IMPORTED_MODULE_2__.CLASS_FLEX_CENTER)),\n        onClick: handleBackdropClick,\n        style: style\n    }, renderSlide());\n}\nfunction Placeholder() {\n    const style = useLightboxProps().styles.slide;\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: cssClass(\"slide\"),\n        style: style\n    });\n}\nfunction Carousel({ carousel }) {\n    const { slides, currentIndex, globalIndex } = useLightboxState();\n    const { setCarouselRef } = useController();\n    const spacingValue = parseLengthPercentage(carousel.spacing);\n    const paddingValue = parseLengthPercentage(carousel.padding);\n    const items = [];\n    const preload = calculatePreload(carousel, slides, 1);\n    if (hasSlides(slides)) {\n        for(let i = currentIndex - preload; i < currentIndex; i += 1){\n            const key = globalIndex + i - currentIndex;\n            items.push(!carousel.finite || i >= 0 ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(CarouselSlide, {\n                key: key,\n                slide: slides[(i + preload * slides.length) % slides.length],\n                offset: i - currentIndex\n            }) : /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Placeholder, {\n                key: key\n            }));\n        }\n        items.push(/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(CarouselSlide, {\n            key: globalIndex,\n            slide: slides[currentIndex],\n            offset: 0\n        }));\n        for(let i = currentIndex + 1; i <= currentIndex + preload; i += 1){\n            const key = globalIndex + i - currentIndex;\n            items.push(!carousel.finite || i <= slides.length - 1 ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(CarouselSlide, {\n                key: key,\n                slide: slides[i % slides.length],\n                offset: i - currentIndex\n            }) : /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Placeholder, {\n                key: key\n            }));\n        }\n    }\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        ref: setCarouselRef,\n        className: clsx(cssClass(cssPrefix$2()), items.length > 0 && cssClass(cssPrefix$2(\"with_slides\"))),\n        style: {\n            [`${cssVar(cssPrefix$2(\"slides_count\"))}`]: items.length,\n            [`${cssVar(cssPrefix$2(\"spacing_px\"))}`]: spacingValue.pixel || 0,\n            [`${cssVar(cssPrefix$2(\"spacing_percent\"))}`]: spacingValue.percent || 0,\n            [`${cssVar(cssPrefix$2(\"padding_px\"))}`]: paddingValue.pixel || 0,\n            [`${cssVar(cssPrefix$2(\"padding_percent\"))}`]: paddingValue.percent || 0\n        }\n    }, items);\n}\nconst CarouselModule = createModule(_types_js__WEBPACK_IMPORTED_MODULE_2__.MODULE_CAROUSEL, Carousel);\nfunction useNavigationState() {\n    const { carousel } = useLightboxProps();\n    const { slides, currentIndex } = useLightboxState();\n    const prevDisabled = slides.length === 0 || carousel.finite && currentIndex === 0;\n    const nextDisabled = slides.length === 0 || carousel.finite && currentIndex === slides.length - 1;\n    return {\n        prevDisabled,\n        nextDisabled\n    };\n}\nfunction useKeyboardNavigation(subscribeSensors) {\n    var _a;\n    const isRTL = useRTL();\n    const { publish } = useEvents();\n    const { animation } = useLightboxProps();\n    const { prevDisabled, nextDisabled } = useNavigationState();\n    const throttle = ((_a = animation.navigation) !== null && _a !== void 0 ? _a : animation.swipe) / 2;\n    const prev = useThrottle(()=>publish(_types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_PREV), throttle);\n    const next = useThrottle(()=>publish(_types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_NEXT), throttle);\n    const handleKeyDown = useEventCallback((event)=>{\n        switch(event.key){\n            case _types_js__WEBPACK_IMPORTED_MODULE_2__.VK_ESCAPE:\n                publish(_types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_CLOSE);\n                break;\n            case _types_js__WEBPACK_IMPORTED_MODULE_2__.VK_ARROW_LEFT:\n                if (!(isRTL ? nextDisabled : prevDisabled)) (isRTL ? next : prev)();\n                break;\n            case _types_js__WEBPACK_IMPORTED_MODULE_2__.VK_ARROW_RIGHT:\n                if (!(isRTL ? prevDisabled : nextDisabled)) (isRTL ? prev : next)();\n                break;\n            default:\n        }\n    });\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>subscribeSensors(_types_js__WEBPACK_IMPORTED_MODULE_2__.EVENT_ON_KEY_DOWN, handleKeyDown), [\n        subscribeSensors,\n        handleKeyDown\n    ]);\n}\nfunction NavigationButton({ label, icon, renderIcon, action, onClick, disabled, style }) {\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(IconButton, {\n        label: label,\n        icon: icon,\n        renderIcon: renderIcon,\n        className: cssClass(`navigation_${action}`),\n        disabled: disabled,\n        onClick: onClick,\n        style: style,\n        ...useLoseFocus(useController().focus, disabled)\n    });\n}\nfunction Navigation({ render: { buttonPrev, buttonNext, iconPrev, iconNext }, styles }) {\n    const { prev, next, subscribeSensors } = useController();\n    const { prevDisabled, nextDisabled } = useNavigationState();\n    useKeyboardNavigation(subscribeSensors);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, buttonPrev ? buttonPrev() : /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(NavigationButton, {\n        label: \"Previous\",\n        action: _types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_PREV,\n        icon: PreviousIcon,\n        renderIcon: iconPrev,\n        style: styles.navigationPrev,\n        disabled: prevDisabled,\n        onClick: prev\n    }), buttonNext ? buttonNext() : /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(NavigationButton, {\n        label: \"Next\",\n        action: _types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_NEXT,\n        icon: NextIcon,\n        renderIcon: iconNext,\n        style: styles.navigationNext,\n        disabled: nextDisabled,\n        onClick: next\n    }));\n}\nconst NavigationModule = createModule(_types_js__WEBPACK_IMPORTED_MODULE_2__.MODULE_NAVIGATION, Navigation);\nconst noScroll = cssClass(_types_js__WEBPACK_IMPORTED_MODULE_2__.CLASS_NO_SCROLL);\nconst noScrollPadding = cssClass(_types_js__WEBPACK_IMPORTED_MODULE_2__.CLASS_NO_SCROLL_PADDING);\nfunction isHTMLElement(element) {\n    return \"style\" in element;\n}\nfunction padScrollbar(element, padding, rtl) {\n    const styles = window.getComputedStyle(element);\n    const property = rtl ? \"padding-left\" : \"padding-right\";\n    const computedValue = rtl ? styles.paddingLeft : styles.paddingRight;\n    const originalValue = element.style.getPropertyValue(property);\n    element.style.setProperty(property, `${(parseInt(computedValue) || 0) + padding}px`);\n    return ()=>{\n        if (originalValue) {\n            element.style.setProperty(property, originalValue);\n        } else {\n            element.style.removeProperty(property);\n        }\n    };\n}\nfunction NoScroll({ noScroll: { disabled }, children }) {\n    const rtl = useRTL();\n    useLayoutEffect(()=>{\n        if (disabled) return ()=>{};\n        const cleanup = [];\n        const { body, documentElement } = document;\n        const scrollbar = Math.round(window.innerWidth - documentElement.clientWidth);\n        if (scrollbar > 0) {\n            cleanup.push(padScrollbar(body, scrollbar, rtl));\n            const elements = body.getElementsByTagName(\"*\");\n            for(let i = 0; i < elements.length; i += 1){\n                const element = elements[i];\n                if (isHTMLElement(element) && window.getComputedStyle(element).getPropertyValue(\"position\") === \"fixed\" && !element.classList.contains(noScrollPadding)) {\n                    cleanup.push(padScrollbar(element, scrollbar, rtl));\n                }\n            }\n        }\n        body.classList.add(noScroll);\n        return ()=>{\n            body.classList.remove(noScroll);\n            cleanup.forEach((clean)=>clean());\n        };\n    }, [\n        rtl,\n        disabled\n    ]);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, children);\n}\nconst NoScrollModule = createModule(_types_js__WEBPACK_IMPORTED_MODULE_2__.MODULE_NO_SCROLL, NoScroll);\nfunction cssPrefix$1(value) {\n    return composePrefix(_types_js__WEBPACK_IMPORTED_MODULE_2__.MODULE_PORTAL, value);\n}\nfunction setAttribute(element, attribute, value) {\n    const previousValue = element.getAttribute(attribute);\n    element.setAttribute(attribute, value);\n    return ()=>{\n        if (previousValue) {\n            element.setAttribute(attribute, previousValue);\n        } else {\n            element.removeAttribute(attribute);\n        }\n    };\n}\nfunction Portal({ children, animation, styles, className, on, portal, close }) {\n    const [mounted, setMounted] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\n    const [visible, setVisible] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\n    const cleanup = react__WEBPACK_IMPORTED_MODULE_0__.useRef([]);\n    const restoreFocus = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const { setTimeout } = useTimeouts();\n    const { subscribe } = useEvents();\n    const reduceMotion = useMotionPreference();\n    const animationDuration = !reduceMotion ? animation.fade : 0;\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        setMounted(true);\n        return ()=>{\n            setMounted(false);\n            setVisible(false);\n        };\n    }, []);\n    const handleCleanup = useEventCallback(()=>{\n        cleanup.current.forEach((clean)=>clean());\n        cleanup.current = [];\n    });\n    const handleClose = useEventCallback(()=>{\n        var _a;\n        setVisible(false);\n        handleCleanup();\n        (_a = on.exiting) === null || _a === void 0 ? void 0 : _a.call(on);\n        setTimeout(()=>{\n            var _a;\n            (_a = on.exited) === null || _a === void 0 ? void 0 : _a.call(on);\n            close();\n        }, animationDuration);\n    });\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>subscribe(_types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_CLOSE, handleClose), [\n        subscribe,\n        handleClose\n    ]);\n    const handleEnter = useEventCallback((node)=>{\n        var _a, _b, _c;\n        node.scrollTop;\n        setVisible(true);\n        (_a = on.entering) === null || _a === void 0 ? void 0 : _a.call(on);\n        const elements = (_c = (_b = node.parentNode) === null || _b === void 0 ? void 0 : _b.children) !== null && _c !== void 0 ? _c : [];\n        for(let i = 0; i < elements.length; i += 1){\n            const element = elements[i];\n            if ([\n                \"TEMPLATE\",\n                \"SCRIPT\",\n                \"STYLE\"\n            ].indexOf(element.tagName) === -1 && element !== node) {\n                cleanup.current.push(setAttribute(element, \"inert\", \"true\"));\n                cleanup.current.push(setAttribute(element, \"aria-hidden\", \"true\"));\n            }\n        }\n        cleanup.current.push(()=>{\n            var _a, _b;\n            (_b = (_a = restoreFocus.current) === null || _a === void 0 ? void 0 : _a.focus) === null || _b === void 0 ? void 0 : _b.call(_a);\n        });\n        setTimeout(()=>{\n            var _a;\n            (_a = on.entered) === null || _a === void 0 ? void 0 : _a.call(on);\n        }, animationDuration);\n    });\n    const handleRef = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((node)=>{\n        if (node) {\n            handleEnter(node);\n        } else {\n            handleCleanup();\n        }\n    }, [\n        handleEnter,\n        handleCleanup\n    ]);\n    return mounted ? /*#__PURE__*/ (0,react_dom__WEBPACK_IMPORTED_MODULE_1__.createPortal)(/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        ref: handleRef,\n        className: clsx(className, cssClass(\"root\"), cssClass(cssPrefix$1()), cssClass(_types_js__WEBPACK_IMPORTED_MODULE_2__.CLASS_NO_SCROLL_PADDING), visible && cssClass(cssPrefix$1(\"open\"))),\n        role: \"presentation\",\n        \"aria-live\": \"polite\",\n        style: {\n            ...animation.fade !== LightboxDefaultProps.animation.fade ? {\n                [cssVar(\"fade_animation_duration\")]: `${animationDuration}ms`\n            } : null,\n            ...animation.easing.fade !== LightboxDefaultProps.animation.easing.fade ? {\n                [cssVar(\"fade_animation_timing_function\")]: animation.easing.fade\n            } : null,\n            ...styles.root\n        },\n        onFocus: (event)=>{\n            if (!restoreFocus.current) {\n                restoreFocus.current = event.relatedTarget;\n            }\n        }\n    }, children), portal.root || document.body) : null;\n}\nconst PortalModule = createModule(_types_js__WEBPACK_IMPORTED_MODULE_2__.MODULE_PORTAL, Portal);\nfunction Root({ children }) {\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, children);\n}\nconst RootModule = createModule(_types_js__WEBPACK_IMPORTED_MODULE_2__.MODULE_ROOT, Root);\nfunction cssPrefix(value) {\n    return composePrefix(_types_js__WEBPACK_IMPORTED_MODULE_2__.MODULE_TOOLBAR, value);\n}\nfunction Toolbar({ toolbar: { buttons }, render: { buttonClose, iconClose }, styles }) {\n    const { close, setToolbarWidth } = useController();\n    const { setContainerRef, containerRect } = useContainerRect();\n    useLayoutEffect(()=>{\n        setToolbarWidth(containerRect === null || containerRect === void 0 ? void 0 : containerRect.width);\n    }, [\n        setToolbarWidth,\n        containerRect === null || containerRect === void 0 ? void 0 : containerRect.width\n    ]);\n    const renderCloseButton = ()=>{\n        if (buttonClose) return buttonClose();\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(IconButton, {\n            key: _types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_CLOSE,\n            label: \"Close\",\n            icon: CloseIcon,\n            renderIcon: iconClose,\n            onClick: close\n        });\n    };\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        ref: setContainerRef,\n        style: styles.toolbar,\n        className: cssClass(cssPrefix())\n    }, buttons === null || buttons === void 0 ? void 0 : buttons.map((button)=>button === _types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_CLOSE ? renderCloseButton() : button));\n}\nconst ToolbarModule = createModule(_types_js__WEBPACK_IMPORTED_MODULE_2__.MODULE_TOOLBAR, Toolbar);\nfunction renderNode(node, props) {\n    var _a;\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(node.module.component, {\n        key: node.module.name,\n        ...props\n    }, (_a = node.children) === null || _a === void 0 ? void 0 : _a.map((child)=>renderNode(child, props)));\n}\nfunction mergeAnimation(defaultAnimation, animation = {}) {\n    const { easing: defaultAnimationEasing, ...restDefaultAnimation } = defaultAnimation;\n    const { easing, ...restAnimation } = animation;\n    return {\n        easing: {\n            ...defaultAnimationEasing,\n            ...easing\n        },\n        ...restDefaultAnimation,\n        ...restAnimation\n    };\n}\nfunction Lightbox({ carousel, animation, render, toolbar, controller, noScroll, on, plugins, slides, index, ...restProps }) {\n    const { animation: defaultAnimation, carousel: defaultCarousel, render: defaultRender, toolbar: defaultToolbar, controller: defaultController, noScroll: defaultNoScroll, on: defaultOn, slides: defaultSlides, index: defaultIndex, plugins: defaultPlugins, ...restDefaultProps } = LightboxDefaultProps;\n    const { config, augmentation } = withPlugins([\n        createNode(PortalModule, [\n            createNode(NoScrollModule, [\n                createNode(ControllerModule, [\n                    createNode(CarouselModule),\n                    createNode(ToolbarModule),\n                    createNode(NavigationModule)\n                ])\n            ])\n        ])\n    ], plugins || defaultPlugins);\n    const props = augmentation({\n        animation: mergeAnimation(defaultAnimation, animation),\n        carousel: {\n            ...defaultCarousel,\n            ...carousel\n        },\n        render: {\n            ...defaultRender,\n            ...render\n        },\n        toolbar: {\n            ...defaultToolbar,\n            ...toolbar\n        },\n        controller: {\n            ...defaultController,\n            ...controller\n        },\n        noScroll: {\n            ...defaultNoScroll,\n            ...noScroll\n        },\n        on: {\n            ...defaultOn,\n            ...on\n        },\n        ...restDefaultProps,\n        ...restProps\n    });\n    if (!props.open) return null;\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(LightboxPropsProvider, {\n        ...props\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(LightboxStateProvider, {\n        slides: slides || defaultSlides,\n        index: parseInt(index || defaultIndex)\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(TimeoutsProvider, null, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(EventsProvider, null, renderNode(createNode(RootModule, config), props)))));\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/yet-another-react-lightbox/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/yet-another-react-lightbox/dist/plugins/fullscreen/index.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/yet-another-react-lightbox/dist/plugins/fullscreen/index.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Fullscreen)\n/* harmony export */ });\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../index.js */ \"(ssr)/./node_modules/yet-another-react-lightbox/dist/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../types.js */ \"(ssr)/./node_modules/yet-another-react-lightbox/dist/types.js\");\n\n\n\n\nconst defaultFullscreenProps = {\n    auto: false,\n    ref: null,\n};\nconst resolveFullscreenProps = (fullscreen) => ({\n    ...defaultFullscreenProps,\n    ...fullscreen,\n});\n\nconst FullscreenContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);\nconst useFullscreen = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.makeUseContext)(\"useFullscreen\", \"FullscreenContext\", FullscreenContext);\nfunction FullscreenContextProvider({ fullscreen: fullscreenProps, on, children }) {\n    const { auto, ref } = resolveFullscreenProps(fullscreenProps);\n    const containerRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const [disabled, setDisabled] = react__WEBPACK_IMPORTED_MODULE_0__.useState();\n    const [fullscreen, setFullscreen] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\n    const wasFullscreen = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);\n    (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect)(() => {\n        var _a, _b, _c, _d;\n        setDisabled(!((_d = (_c = (_b = (_a = document.fullscreenEnabled) !== null && _a !== void 0 ? _a : document.webkitFullscreenEnabled) !== null && _b !== void 0 ? _b : document.mozFullScreenEnabled) !== null && _c !== void 0 ? _c : document.msFullscreenEnabled) !== null && _d !== void 0 ? _d : false));\n    }, []);\n    const getFullscreenElement = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(() => {\n        var _a, _b, _c;\n        return (_c = (_b = (_a = document.fullscreenElement) !== null && _a !== void 0 ? _a : document.webkitFullscreenElement) !== null && _b !== void 0 ? _b : document.mozFullScreenElement) !== null && _c !== void 0 ? _c : document.msFullscreenElement;\n    }, []);\n    const enter = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(() => {\n        const container = containerRef.current;\n        if (container) {\n            try {\n                if (container.requestFullscreen) {\n                    container.requestFullscreen().catch(() => { });\n                }\n                else if (container.webkitRequestFullscreen) {\n                    container.webkitRequestFullscreen();\n                }\n                else if (container.mozRequestFullScreen) {\n                    container.mozRequestFullScreen();\n                }\n                else if (container.msRequestFullscreen) {\n                    container.msRequestFullscreen();\n                }\n            }\n            catch (err) {\n            }\n        }\n    }, []);\n    const exit = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(() => {\n        if (getFullscreenElement()) {\n            try {\n                if (document.exitFullscreen) {\n                    document.exitFullscreen().catch(() => { });\n                }\n                else if (document.webkitExitFullscreen) {\n                    document.webkitExitFullscreen();\n                }\n                else if (document.mozCancelFullScreen) {\n                    document.mozCancelFullScreen();\n                }\n                else if (document.msExitFullscreen) {\n                    document.msExitFullscreen();\n                }\n            }\n            catch (err) {\n            }\n        }\n    }, [getFullscreenElement]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n        const events = [\"fullscreenchange\", \"webkitfullscreenchange\", \"mozfullscreenchange\", \"MSFullscreenChange\"];\n        const fullscreenChangeListener = () => {\n            setFullscreen(getFullscreenElement() === containerRef.current);\n        };\n        events.forEach((event) => {\n            document.addEventListener(event, fullscreenChangeListener);\n        });\n        return () => {\n            events.forEach((event) => {\n                document.removeEventListener(event, fullscreenChangeListener);\n            });\n        };\n    }, [getFullscreenElement]);\n    const onEnterFullscreen = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useEventCallback)(() => { var _a; return (_a = on.enterFullscreen) === null || _a === void 0 ? void 0 : _a.call(on); });\n    const onExitFullscreen = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useEventCallback)(() => { var _a; return (_a = on.exitFullscreen) === null || _a === void 0 ? void 0 : _a.call(on); });\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n        if (fullscreen) {\n            wasFullscreen.current = true;\n        }\n        if (wasFullscreen.current) {\n            (fullscreen ? onEnterFullscreen : onExitFullscreen)();\n        }\n    }, [fullscreen, onEnterFullscreen, onExitFullscreen]);\n    const handleAutoFullscreen = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useEventCallback)(() => { var _a; return (_a = (auto ? enter : null)) === null || _a === void 0 ? void 0 : _a(); });\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n        handleAutoFullscreen();\n        return () => exit();\n    }, [handleAutoFullscreen, exit]);\n    const context = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => ({\n        fullscreen,\n        disabled,\n        enter,\n        exit,\n    }), [fullscreen, disabled, enter, exit]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useImperativeHandle(ref, () => context, [context]);\n    return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", { ref: containerRef, className: (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.clsx)((0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cssClass)(_types_js__WEBPACK_IMPORTED_MODULE_2__.PLUGIN_FULLSCREEN), (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cssClass)(_types_js__WEBPACK_IMPORTED_MODULE_2__.CLASS_FULLSIZE)) },\n        react__WEBPACK_IMPORTED_MODULE_0__.createElement(FullscreenContext.Provider, { value: context }, children)));\n}\n\nconst EnterFullscreenIcon = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.createIcon)(\"EnterFullscreen\", react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", { d: \"M7 14H5v5h5v-2H7v-3zm-2-4h2V7h3V5H5v5zm12 7h-3v2h5v-5h-2v3zM14 5v2h3v3h2V5h-5z\" }));\nconst ExitFullscreenIcon = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.createIcon)(\"ExitFullscreen\", react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", { d: \"M5 16h3v3h2v-5H5v2zm3-8H5v2h5V5H8v3zm6 11h2v-3h3v-2h-5v5zm2-11V5h-2v5h5V8h-3z\" }));\nfunction FullscreenButton() {\n    var _a;\n    const { fullscreen, disabled, enter, exit } = useFullscreen();\n    const { render } = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useLightboxProps)();\n    if (disabled)\n        return null;\n    if (render.buttonFullscreen) {\n        return react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (_a = render.buttonFullscreen) === null || _a === void 0 ? void 0 : _a.call(render, { fullscreen, disabled, enter, exit }));\n    }\n    return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(_index_js__WEBPACK_IMPORTED_MODULE_1__.IconButton, { disabled: disabled, label: fullscreen ? \"Exit Fullscreen\" : \"Enter Fullscreen\", icon: fullscreen ? ExitFullscreenIcon : EnterFullscreenIcon, renderIcon: fullscreen ? render.iconExitFullscreen : render.iconEnterFullscreen, onClick: fullscreen ? exit : enter }));\n}\n\nfunction Fullscreen({ augment, contains, addParent }) {\n    augment(({ fullscreen, toolbar, ...restProps }) => ({\n        toolbar: (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.addToolbarButton)(toolbar, _types_js__WEBPACK_IMPORTED_MODULE_2__.PLUGIN_FULLSCREEN, react__WEBPACK_IMPORTED_MODULE_0__.createElement(FullscreenButton, null)),\n        fullscreen: resolveFullscreenProps(fullscreen),\n        ...restProps,\n    }));\n    addParent(contains(_types_js__WEBPACK_IMPORTED_MODULE_2__.PLUGIN_THUMBNAILS) ? _types_js__WEBPACK_IMPORTED_MODULE_2__.PLUGIN_THUMBNAILS : _types_js__WEBPACK_IMPORTED_MODULE_2__.MODULE_CONTROLLER, (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.createModule)(_types_js__WEBPACK_IMPORTED_MODULE_2__.PLUGIN_FULLSCREEN, FullscreenContextProvider));\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/yet-another-react-lightbox/dist/plugins/fullscreen/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/yet-another-react-lightbox/dist/plugins/slideshow/index.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/yet-another-react-lightbox/dist/plugins/slideshow/index.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Slideshow)\n/* harmony export */ });\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../index.js */ \"(ssr)/./node_modules/yet-another-react-lightbox/dist/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../types.js */ \"(ssr)/./node_modules/yet-another-react-lightbox/dist/types.js\");\n\n\n\n\nconst defaultSlideshowProps = {\n    autoplay: false,\n    delay: 3000,\n    ref: null,\n};\nconst resolveSlideshowProps = (slideshow) => ({\n    ...defaultSlideshowProps,\n    ...slideshow,\n});\n\nconst SlideshowContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);\nconst useSlideshow = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.makeUseContext)(\"useSlideshow\", \"SlideshowContext\", SlideshowContext);\nfunction SlideshowContextProvider({ slideshow, carousel: { finite }, on, children }) {\n    const { autoplay, delay, ref } = resolveSlideshowProps(slideshow);\n    const wasPlaying = react__WEBPACK_IMPORTED_MODULE_0__.useRef(autoplay);\n    const [playing, setPlaying] = react__WEBPACK_IMPORTED_MODULE_0__.useState(autoplay);\n    const scheduler = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n    const slideStatus = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n    const { slides, currentIndex } = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useLightboxState)();\n    const { setTimeout, clearTimeout } = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useTimeouts)();\n    const { subscribe } = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useEvents)();\n    const { next } = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useController)();\n    const disabled = slides.length === 0 || (finite && currentIndex === slides.length - 1);\n    const play = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(() => {\n        if (!playing && !disabled) {\n            setPlaying(true);\n        }\n    }, [playing, disabled]);\n    const pause = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(() => {\n        if (playing) {\n            setPlaying(false);\n        }\n    }, [playing]);\n    const cancelScheduler = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(() => {\n        clearTimeout(scheduler.current);\n        scheduler.current = undefined;\n    }, [clearTimeout]);\n    const scheduleNextSlide = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useEventCallback)(() => {\n        cancelScheduler();\n        if (!playing ||\n            disabled ||\n            slideStatus.current === _types_js__WEBPACK_IMPORTED_MODULE_2__.SLIDE_STATUS_LOADING ||\n            slideStatus.current === _types_js__WEBPACK_IMPORTED_MODULE_2__.SLIDE_STATUS_PLAYING) {\n            return;\n        }\n        scheduler.current = setTimeout(() => {\n            if (playing) {\n                slideStatus.current = undefined;\n                next();\n            }\n        }, delay);\n    });\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(scheduleNextSlide, [currentIndex, playing, scheduleNextSlide]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n        if (playing && disabled) {\n            setPlaying(false);\n        }\n    }, [currentIndex, playing, disabled]);\n    const onSlideshowStart = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useEventCallback)(() => { var _a; return (_a = on.slideshowStart) === null || _a === void 0 ? void 0 : _a.call(on); });\n    const onSlideshowStop = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useEventCallback)(() => { var _a; return (_a = on.slideshowStop) === null || _a === void 0 ? void 0 : _a.call(on); });\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n        if (playing) {\n            onSlideshowStart();\n        }\n        else if (wasPlaying.current) {\n            onSlideshowStop();\n        }\n        wasPlaying.current = playing;\n    }, [playing, onSlideshowStart, onSlideshowStop]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cleanup)(cancelScheduler, subscribe(_types_js__WEBPACK_IMPORTED_MODULE_2__.ACTIVE_SLIDE_LOADING, () => {\n        slideStatus.current = _types_js__WEBPACK_IMPORTED_MODULE_2__.SLIDE_STATUS_LOADING;\n        cancelScheduler();\n    }), subscribe(_types_js__WEBPACK_IMPORTED_MODULE_2__.ACTIVE_SLIDE_PLAYING, () => {\n        slideStatus.current = _types_js__WEBPACK_IMPORTED_MODULE_2__.SLIDE_STATUS_PLAYING;\n        cancelScheduler();\n    }), subscribe(_types_js__WEBPACK_IMPORTED_MODULE_2__.ACTIVE_SLIDE_ERROR, () => {\n        slideStatus.current = _types_js__WEBPACK_IMPORTED_MODULE_2__.SLIDE_STATUS_ERROR;\n        scheduleNextSlide();\n    }), subscribe(_types_js__WEBPACK_IMPORTED_MODULE_2__.ACTIVE_SLIDE_COMPLETE, () => {\n        slideStatus.current = _types_js__WEBPACK_IMPORTED_MODULE_2__.SLIDE_STATUS_COMPLETE;\n        scheduleNextSlide();\n    })), [subscribe, cancelScheduler, scheduleNextSlide]);\n    const context = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => ({ playing, disabled, play, pause }), [playing, disabled, play, pause]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useImperativeHandle(ref, () => context, [context]);\n    return react__WEBPACK_IMPORTED_MODULE_0__.createElement(SlideshowContext.Provider, { value: context }, children);\n}\n\nconst PlayIcon = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.createIcon)(\"Play\", react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", { d: \"M8 5v14l11-7z\" }));\nconst PauseIcon = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.createIcon)(\"Pause\", react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", { d: \"M6 19h4V5H6v14zm8-14v14h4V5h-4z\" }));\nfunction SlideshowButton() {\n    const { playing, disabled, play, pause } = useSlideshow();\n    const { render } = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useLightboxProps)();\n    const focusListeners = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useLoseFocus)((0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useController)().focus, disabled);\n    if (render.buttonSlideshow) {\n        return react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, render.buttonSlideshow({ playing, disabled, play, pause }));\n    }\n    return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(_index_js__WEBPACK_IMPORTED_MODULE_1__.IconButton, { label: playing ? \"Pause\" : \"Play\", icon: playing ? PauseIcon : PlayIcon, renderIcon: playing ? render.iconSlideshowPause : render.iconSlideshowPlay, onClick: playing ? pause : play, disabled: disabled, ...focusListeners }));\n}\n\nfunction Slideshow({ augment, addModule }) {\n    augment(({ slideshow, toolbar, ...restProps }) => ({\n        toolbar: (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.addToolbarButton)(toolbar, _types_js__WEBPACK_IMPORTED_MODULE_2__.PLUGIN_SLIDESHOW, react__WEBPACK_IMPORTED_MODULE_0__.createElement(SlideshowButton, null)),\n        slideshow: resolveSlideshowProps(slideshow),\n        ...restProps,\n    }));\n    addModule((0,_index_js__WEBPACK_IMPORTED_MODULE_1__.createModule)(_types_js__WEBPACK_IMPORTED_MODULE_2__.PLUGIN_SLIDESHOW, SlideshowContextProvider));\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/yet-another-react-lightbox/dist/plugins/slideshow/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/yet-another-react-lightbox/dist/plugins/thumbnails/index.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/yet-another-react-lightbox/dist/plugins/thumbnails/index.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Thumbnails)\n/* harmony export */ });\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../index.js */ \"(ssr)/./node_modules/yet-another-react-lightbox/dist/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../types.js */ \"(ssr)/./node_modules/yet-another-react-lightbox/dist/types.js\");\n\n\n\n\nconst defaultThumbnailsProps = {\n    ref: null,\n    position: \"bottom\",\n    width: 120,\n    height: 80,\n    border: 1,\n    borderRadius: 4,\n    padding: 4,\n    gap: 16,\n    imageFit: \"contain\",\n    vignette: true,\n};\nconst resolveThumbnailsProps = (thumbnails) => ({\n    ...defaultThumbnailsProps,\n    ...thumbnails,\n});\nfunction useThumbnailsProps() {\n    const { thumbnails } = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useLightboxProps)();\n    return resolveThumbnailsProps(thumbnails);\n}\n\nconst cssPrefix = (value) => (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.composePrefix)(_types_js__WEBPACK_IMPORTED_MODULE_2__.PLUGIN_THUMBNAILS, value);\nconst cssThumbnailPrefix = (value) => cssPrefix((0,_index_js__WEBPACK_IMPORTED_MODULE_1__.composePrefix)(\"thumbnail\", value));\n\nconst VideoThumbnailIcon = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.createIcon)(\"VideoThumbnail\", react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", { d: \"M10 16.5l6-4.5-6-4.5v9zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\" }));\nconst UnknownThumbnailIcon = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.createIcon)(\"UnknownThumbnail\", react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", { d: \"M23 18V6c0-1.1-.9-2-2-2H3c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2zM8.5 12.5l2.5 3.01L14.5 11l4.5 6H5l3.5-4.5z\" }));\nfunction renderThumbnail({ slide, render, rect, imageFit }) {\n    var _a;\n    const customThumbnail = (_a = render.thumbnail) === null || _a === void 0 ? void 0 : _a.call(render, { slide, render, rect, imageFit });\n    if (customThumbnail) {\n        return customThumbnail;\n    }\n    const thumbnailIconClass = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cssClass)(cssThumbnailPrefix(_types_js__WEBPACK_IMPORTED_MODULE_2__.ELEMENT_ICON));\n    if (!(0,_index_js__WEBPACK_IMPORTED_MODULE_1__.isImageSlide)(slide)) {\n        if (slide.type === \"video\") {\n            return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null,\n                \"poster\" in slide && (react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"img\", { alt: \"\", src: slide.poster, className: (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.clsx)((0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cssClass)(_types_js__WEBPACK_IMPORTED_MODULE_2__.CLASS_FULLSIZE), (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cssClass)(cssPrefix(\"contain_image\"))) })),\n                react__WEBPACK_IMPORTED_MODULE_0__.createElement(VideoThumbnailIcon, { className: thumbnailIconClass })));\n        }\n    }\n    else {\n        return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_index_js__WEBPACK_IMPORTED_MODULE_1__.ImageSlide, { slide: slide, render: render, rect: rect, imageFit: imageFit });\n    }\n    return react__WEBPACK_IMPORTED_MODULE_0__.createElement(UnknownThumbnailIcon, { className: thumbnailIconClass });\n}\nconst activePrefix = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.makeComposePrefix)(\"active\");\nconst fadeInPrefix = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.makeComposePrefix)(\"fadein\");\nconst fadeOutPrefix = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.makeComposePrefix)(\"fadeout\");\nconst placeholderPrefix = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.makeComposePrefix)(\"placeholder\");\nconst DELAY = \"delay\";\nconst DURATION = \"duration\";\nfunction Thumbnail({ slide, onClick, active, fadeIn, fadeOut, placeholder, onLoseFocus }) {\n    const ref = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const { render, styles } = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useLightboxProps)();\n    const { width, height, imageFit } = useThumbnailsProps();\n    const rect = { width, height };\n    const onLoseFocusCallback = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useEventCallback)(onLoseFocus);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n        if (fadeOut && document.activeElement === ref.current) {\n            onLoseFocusCallback();\n        }\n    }, [fadeOut, onLoseFocusCallback]);\n    return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"button\", { ref: ref, type: \"button\", className: (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.clsx)((0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cssClass)(_types_js__WEBPACK_IMPORTED_MODULE_2__.CLASS_FLEX_CENTER), (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cssClass)(cssThumbnailPrefix()), active && (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cssClass)(cssThumbnailPrefix(activePrefix())), fadeIn && (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cssClass)(cssThumbnailPrefix(fadeInPrefix())), fadeOut && (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cssClass)(cssThumbnailPrefix(fadeOutPrefix())), placeholder && (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cssClass)(cssThumbnailPrefix(placeholderPrefix()))), style: {\n            ...(fadeIn\n                ? {\n                    [(0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cssVar)(cssThumbnailPrefix(fadeInPrefix(DURATION)))]: `${fadeIn.duration}ms`,\n                    [(0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cssVar)(cssThumbnailPrefix(fadeInPrefix(DELAY)))]: `${fadeIn.delay}ms`,\n                }\n                : null),\n            ...(fadeOut\n                ? {\n                    [(0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cssVar)(cssThumbnailPrefix(fadeOutPrefix(DURATION)))]: `${fadeOut.duration}ms`,\n                    [(0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cssVar)(cssThumbnailPrefix(fadeOutPrefix(DELAY)))]: `${fadeOut.delay}ms`,\n                }\n                : null),\n            ...styles.thumbnail,\n        }, onClick: onClick }, slide && renderThumbnail({ slide, render, rect, imageFit })));\n}\n\nfunction isHorizontal(position) {\n    return [\"top\", \"bottom\"].includes(position);\n}\nfunction boxSize(thumbnails, dimension, includeGap) {\n    return dimension + 2 * (thumbnails.border + thumbnails.padding) + (includeGap ? thumbnails.gap : 0);\n}\nfunction ThumbnailsTrack({ visible, containerRef }) {\n    const track = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const isRTL = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useRTL)();\n    const { publish, subscribe } = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useEvents)();\n    const { carousel, styles } = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useLightboxProps)();\n    const { slides, globalIndex, animation } = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useLightboxState)();\n    const { registerSensors, subscribeSensors } = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useSensors)();\n    (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useKeyboardNavigation)(subscribeSensors);\n    const thumbnails = useThumbnailsProps();\n    const { position, width, height, border, borderStyle, borderColor, borderRadius, padding, gap, vignette } = thumbnails;\n    const index = globalIndex;\n    const animationDuration = (animation === null || animation === void 0 ? void 0 : animation.duration) || 0;\n    const offset = (animationDuration > 0 && (animation === null || animation === void 0 ? void 0 : animation.increment)) || 0;\n    const { prepareAnimation } = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useAnimation)(track, (snapshot) => ({\n        keyframes: isHorizontal(position)\n            ? [\n                {\n                    transform: `translateX(${(isRTL ? -1 : 1) * boxSize(thumbnails, width, true) * offset + snapshot}px)`,\n                },\n                { transform: \"translateX(0)\" },\n            ]\n            : [\n                {\n                    transform: `translateY(${boxSize(thumbnails, height, true) * offset + snapshot}px)`,\n                },\n                { transform: \"translateY(0)\" },\n            ],\n        duration: animationDuration,\n        easing: animation === null || animation === void 0 ? void 0 : animation.easing,\n    }));\n    const handleControllerSwipe = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useEventCallback)(() => {\n        let animationOffset = 0;\n        if (containerRef.current && track.current) {\n            const containerRect = containerRef.current.getBoundingClientRect();\n            const trackRect = track.current.getBoundingClientRect();\n            animationOffset = isHorizontal(position)\n                ? trackRect.left - containerRect.left - (containerRect.width - trackRect.width) / 2\n                : trackRect.top - containerRect.top - (containerRect.height - trackRect.height) / 2;\n        }\n        prepareAnimation(animationOffset);\n    });\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cleanup)(subscribe(_types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_SWIPE, handleControllerSwipe)), [subscribe, handleControllerSwipe]);\n    const preload = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.calculatePreload)(carousel, slides);\n    const items = [];\n    if ((0,_index_js__WEBPACK_IMPORTED_MODULE_1__.hasSlides)(slides)) {\n        if (offset < 0) {\n            for (let i = index - preload + offset; i < index - preload; i += 1) {\n                items.push({ slide: null, index: i, placeholder: true });\n            }\n        }\n        for (let i = index - preload - Math.max(offset, 0); i < index; i += 1) {\n            if (!(carousel.finite && i < 0)) {\n                items.push({ slide: (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.getSlide)(slides, i), index: i });\n            }\n            else {\n                items.push({ slide: null, index: i, placeholder: true });\n            }\n        }\n        items.push({ slide: (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.getSlide)(slides, index), index });\n        for (let i = index + 1; i <= index + preload - Math.min(offset, 0); i += 1) {\n            if (!carousel.finite || i <= slides.length - 1) {\n                items.push({ slide: (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.getSlide)(slides, i), index: i });\n            }\n            else {\n                items.push({ slide: null, index: i, placeholder: true });\n            }\n        }\n        if (offset > 0) {\n            for (let i = index + preload + 1; i <= index + preload + offset; i += 1) {\n                items.push({ slide: null, index: i, placeholder: true });\n            }\n        }\n    }\n    const handleClick = (slideIndex) => () => {\n        if (slideIndex > index) {\n            publish(_types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_NEXT, { count: slideIndex - index });\n        }\n        else if (slideIndex < index) {\n            publish(_types_js__WEBPACK_IMPORTED_MODULE_2__.ACTION_PREV, { count: index - slideIndex });\n        }\n    };\n    return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", { className: (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.clsx)((0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cssClass)(cssPrefix(\"container\")), (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cssClass)(_types_js__WEBPACK_IMPORTED_MODULE_2__.CLASS_FLEX_CENTER)), style: {\n            ...(!visible ? { display: \"none\" } : null),\n            ...(width !== defaultThumbnailsProps.width\n                ? { [(0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cssVar)(cssThumbnailPrefix(\"width\"))]: `${boxSize(thumbnails, width)}px` }\n                : null),\n            ...(height !== defaultThumbnailsProps.height\n                ? { [(0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cssVar)(cssThumbnailPrefix(\"height\"))]: `${boxSize(thumbnails, height)}px` }\n                : null),\n            ...(border !== defaultThumbnailsProps.border\n                ? { [(0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cssVar)(cssThumbnailPrefix(\"border\"))]: `${border}px` }\n                : null),\n            ...(borderStyle ? { [(0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cssVar)(cssThumbnailPrefix(\"border_style\"))]: borderStyle } : null),\n            ...(borderColor ? { [(0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cssVar)(cssThumbnailPrefix(\"border_color\"))]: borderColor } : null),\n            ...(borderRadius !== defaultThumbnailsProps.borderRadius\n                ? { [(0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cssVar)(cssThumbnailPrefix(\"border_radius\"))]: `${borderRadius}px` }\n                : null),\n            ...(padding !== defaultThumbnailsProps.padding\n                ? { [(0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cssVar)(cssThumbnailPrefix(\"padding\"))]: `${padding}px` }\n                : null),\n            ...(gap !== defaultThumbnailsProps.gap ? { [(0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cssVar)(cssThumbnailPrefix(\"gap\"))]: `${gap}px` } : null),\n            ...styles.thumbnailsContainer,\n        } },\n        react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"nav\", { ref: track, style: styles.thumbnailsTrack, className: (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.clsx)((0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cssClass)(cssPrefix(\"track\")), (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cssClass)(_types_js__WEBPACK_IMPORTED_MODULE_2__.CLASS_FLEX_CENTER)), tabIndex: -1, ...registerSensors }, items.map(({ slide, index: slideIndex, placeholder }) => {\n            const fadeAnimationDuration = animationDuration / Math.abs(offset || 1);\n            const fadeIn = (offset > 0 && slideIndex > index + preload - offset && slideIndex <= index + preload) ||\n                (offset < 0 && slideIndex < index - preload - offset && slideIndex >= index - preload)\n                ? {\n                    duration: fadeAnimationDuration,\n                    delay: ((offset > 0 ? slideIndex - (index + preload - offset) : index - preload - offset - slideIndex) -\n                        1) *\n                        fadeAnimationDuration,\n                }\n                : undefined;\n            const fadeOut = (offset > 0 && slideIndex < index - preload) || (offset < 0 && slideIndex > index + preload)\n                ? {\n                    duration: fadeAnimationDuration,\n                    delay: (offset > 0\n                        ? offset - (index - preload - slideIndex)\n                        : -offset - (slideIndex - (index + preload))) * fadeAnimationDuration,\n                }\n                : undefined;\n            return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(Thumbnail, { key: [`${slideIndex}`, placeholder && \"placeholder\"].filter(Boolean).join(\"-\"), slide: slide, active: slideIndex === index, fadeIn: fadeIn, fadeOut: fadeOut, placeholder: Boolean(placeholder), onClick: handleClick(slideIndex), onLoseFocus: () => { var _a; return (_a = track.current) === null || _a === void 0 ? void 0 : _a.focus(); } }));\n        })),\n        vignette && react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", { className: (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cssClass)(cssPrefix(\"vignette\")) })));\n}\n\nconst ThumbnailsContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);\nconst useThumbnails = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.makeUseContext)(\"useThumbnails\", \"ThumbnailsContext\", ThumbnailsContext);\nfunction ThumbnailsContextProvider({ children, ...props }) {\n    const [visible, setVisible] = react__WEBPACK_IMPORTED_MODULE_0__.useState(true);\n    const containerRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const { ref, position } = resolveThumbnailsProps(props.thumbnails);\n    const context = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => ({\n        visible,\n        show: () => setVisible(true),\n        hide: () => setVisible(false),\n    }), [visible]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useImperativeHandle(ref, () => context, [context]);\n    return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(_index_js__WEBPACK_IMPORTED_MODULE_1__.LightboxPropsProvider, { ...props },\n        react__WEBPACK_IMPORTED_MODULE_0__.createElement(ThumbnailsContext.Provider, { value: context },\n            react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", { ref: containerRef, className: (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.clsx)((0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cssClass)(cssPrefix()), (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cssClass)(cssPrefix(`${position}`))) },\n                [\"start\", \"top\"].includes(position) && react__WEBPACK_IMPORTED_MODULE_0__.createElement(ThumbnailsTrack, { containerRef: containerRef, visible: visible }),\n                react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", { className: (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cssClass)(cssPrefix(\"wrapper\")) }, children),\n                [\"end\", \"bottom\"].includes(position) && react__WEBPACK_IMPORTED_MODULE_0__.createElement(ThumbnailsTrack, { containerRef: containerRef, visible: visible })))));\n}\n\nconst thumbnailsIcon = () => (react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null,\n    react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", { strokeWidth: 2, stroke: \"currentColor\", strokeLinejoin: \"round\", fill: \"none\", d: \"M3 5l18 0l0 14l-18 0l0-14z\" }),\n    react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", { d: \"M5 14h4v3h-4zM10 14h4v3h-4zM15 14h4v3h-4z\" })));\nconst ThumbnailsVisible = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.createIcon)(\"ThumbnailsVisible\", thumbnailsIcon());\nconst ThumbnailsHidden = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.createIconDisabled)(\"ThumbnailsHidden\", thumbnailsIcon());\nfunction ThumbnailsButton() {\n    const { visible, show, hide } = useThumbnails();\n    const { render } = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useLightboxProps)();\n    if (render.buttonThumbnails) {\n        return react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, render.buttonThumbnails({ visible, show, hide }));\n    }\n    return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(_index_js__WEBPACK_IMPORTED_MODULE_1__.IconButton, { label: visible ? \"Hide thumbnails\" : \"Show thumbnails\", icon: visible ? ThumbnailsVisible : ThumbnailsHidden, renderIcon: visible ? render.iconThumbnailsVisible : render.iconThumbnailsHidden, onClick: visible ? hide : show }));\n}\n\nfunction Thumbnails({ augment, contains, append, addParent }) {\n    augment(({ thumbnails: thumbnailsProps, toolbar, ...restProps }) => {\n        const thumbnails = resolveThumbnailsProps(thumbnailsProps);\n        return {\n            toolbar: (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.addToolbarButton)(toolbar, _types_js__WEBPACK_IMPORTED_MODULE_2__.PLUGIN_THUMBNAILS, thumbnails.showToggle ? react__WEBPACK_IMPORTED_MODULE_0__.createElement(ThumbnailsButton, null) : null),\n            thumbnails,\n            ...restProps,\n        };\n    });\n    const module = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.createModule)(_types_js__WEBPACK_IMPORTED_MODULE_2__.PLUGIN_THUMBNAILS, ThumbnailsContextProvider);\n    if (contains(_types_js__WEBPACK_IMPORTED_MODULE_2__.PLUGIN_FULLSCREEN)) {\n        append(_types_js__WEBPACK_IMPORTED_MODULE_2__.PLUGIN_FULLSCREEN, module);\n    }\n    else {\n        addParent(_types_js__WEBPACK_IMPORTED_MODULE_2__.MODULE_CONTROLLER, module);\n    }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/yet-another-react-lightbox/dist/plugins/thumbnails/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/yet-another-react-lightbox/dist/plugins/zoom/index.js":
/*!****************************************************************************!*\
  !*** ./node_modules/yet-another-react-lightbox/dist/plugins/zoom/index.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Zoom)\n/* harmony export */ });\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../index.js */ \"(ssr)/./node_modules/yet-another-react-lightbox/dist/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../types.js */ \"(ssr)/./node_modules/yet-another-react-lightbox/dist/types.js\");\n\n\n\n\nconst defaultZoomProps = {\n    maxZoomPixelRatio: 1,\n    zoomInMultiplier: 2,\n    doubleTapDelay: 300,\n    doubleClickDelay: 500,\n    doubleClickMaxStops: 2,\n    keyboardMoveDistance: 50,\n    wheelZoomDistanceFactor: 100,\n    pinchZoomDistanceFactor: 100,\n    scrollToZoom: false,\n};\nconst resolveZoomProps = (zoom) => ({\n    ...defaultZoomProps,\n    ...zoom,\n});\n\nfunction useZoomAnimation(zoom, offsetX, offsetY, zoomWrapperRef) {\n    const zoomAnimation = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n    const zoomAnimationStart = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n    const { zoom: zoomAnimationDuration } = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useLightboxProps)().animation;\n    const reduceMotion = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useMotionPreference)();\n    const playZoomAnimation = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useEventCallback)(() => {\n        var _a, _b, _c;\n        (_a = zoomAnimation.current) === null || _a === void 0 ? void 0 : _a.cancel();\n        zoomAnimation.current = undefined;\n        if (zoomAnimationStart.current && (zoomWrapperRef === null || zoomWrapperRef === void 0 ? void 0 : zoomWrapperRef.current)) {\n            try {\n                zoomAnimation.current = (_c = (_b = zoomWrapperRef.current).animate) === null || _c === void 0 ? void 0 : _c.call(_b, [\n                    { transform: zoomAnimationStart.current },\n                    { transform: `scale(${zoom}) translateX(${offsetX}px) translateY(${offsetY}px)` },\n                ], {\n                    duration: !reduceMotion ? zoomAnimationDuration !== null && zoomAnimationDuration !== void 0 ? zoomAnimationDuration : 500 : 0,\n                    easing: zoomAnimation.current ? \"ease-out\" : \"ease-in-out\",\n                });\n            }\n            catch (err) {\n                console.error(err);\n            }\n            zoomAnimationStart.current = undefined;\n            if (zoomAnimation.current) {\n                zoomAnimation.current.onfinish = () => {\n                    zoomAnimation.current = undefined;\n                };\n            }\n        }\n    });\n    (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect)(playZoomAnimation, [zoom, offsetX, offsetY, playZoomAnimation]);\n    return react__WEBPACK_IMPORTED_MODULE_0__.useCallback(() => {\n        zoomAnimationStart.current = (zoomWrapperRef === null || zoomWrapperRef === void 0 ? void 0 : zoomWrapperRef.current)\n            ? window.getComputedStyle(zoomWrapperRef.current).transform\n            : undefined;\n    }, [zoomWrapperRef]);\n}\n\nfunction useZoomCallback(zoom, disabled) {\n    const { on } = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useLightboxProps)();\n    const onZoomCallback = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useEventCallback)(() => {\n        var _a;\n        if (!disabled) {\n            (_a = on.zoom) === null || _a === void 0 ? void 0 : _a.call(on, { zoom });\n        }\n    });\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(onZoomCallback, [zoom, onZoomCallback]);\n}\n\nfunction useZoomProps() {\n    const { zoom } = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useLightboxProps)();\n    return resolveZoomProps(zoom);\n}\n\nfunction useZoomImageRect(slideRect, imageDimensions) {\n    var _a, _b;\n    let imageRect = { width: 0, height: 0 };\n    let maxImageRect = { width: 0, height: 0 };\n    const { currentSlide } = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useLightboxState)();\n    const { imageFit } = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useLightboxProps)().carousel;\n    const { maxZoomPixelRatio } = useZoomProps();\n    if (slideRect && currentSlide) {\n        const slide = { ...currentSlide, ...imageDimensions };\n        if ((0,_index_js__WEBPACK_IMPORTED_MODULE_1__.isImageSlide)(slide)) {\n            const cover = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.isImageFitCover)(slide, imageFit);\n            const width = Math.max(...(((_a = slide.srcSet) === null || _a === void 0 ? void 0 : _a.map((x) => x.width)) || []).concat(slide.width ? [slide.width] : []));\n            const height = Math.max(...(((_b = slide.srcSet) === null || _b === void 0 ? void 0 : _b.map((x) => x.height)) || []).concat(slide.height ? [slide.height] : []));\n            if (width > 0 && height > 0 && slideRect.width > 0 && slideRect.height > 0) {\n                maxImageRect = cover\n                    ? {\n                        width: Math.round(Math.min(width, (slideRect.width / slideRect.height) * height)),\n                        height: Math.round(Math.min(height, (slideRect.height / slideRect.width) * width)),\n                    }\n                    : { width, height };\n                maxImageRect = {\n                    width: maxImageRect.width * maxZoomPixelRatio,\n                    height: maxImageRect.height * maxZoomPixelRatio,\n                };\n                imageRect = cover\n                    ? {\n                        width: Math.min(slideRect.width, maxImageRect.width, width),\n                        height: Math.min(slideRect.height, maxImageRect.height, height),\n                    }\n                    : {\n                        width: Math.round(Math.min(slideRect.width, (slideRect.height / height) * width, width)),\n                        height: Math.round(Math.min(slideRect.height, (slideRect.width / width) * height, height)),\n                    };\n            }\n        }\n    }\n    const maxZoom = imageRect.width ? Math.max((0,_index_js__WEBPACK_IMPORTED_MODULE_1__.round)(maxImageRect.width / imageRect.width, 5), 1) : 1;\n    return { imageRect, maxZoom };\n}\n\nfunction distance(pointerA, pointerB) {\n    return ((pointerA.clientX - pointerB.clientX) ** 2 + (pointerA.clientY - pointerB.clientY) ** 2) ** 0.5;\n}\nfunction useZoomSensors(zoom, maxZoom, disabled, changeZoom, changeOffsets, zoomWrapperRef) {\n    const activePointers = react__WEBPACK_IMPORTED_MODULE_0__.useRef([]);\n    const lastPointerDown = react__WEBPACK_IMPORTED_MODULE_0__.useRef(0);\n    const pinchZoomDistance = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n    const { globalIndex } = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useLightboxState)();\n    const { containerRef, subscribeSensors } = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useController)();\n    const { keyboardMoveDistance, zoomInMultiplier, wheelZoomDistanceFactor, scrollToZoom, doubleTapDelay, doubleClickDelay, doubleClickMaxStops, pinchZoomDistanceFactor, } = useZoomProps();\n    const translateCoordinates = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((event) => {\n        if (containerRef.current) {\n            const { pageX, pageY } = event;\n            const { scrollX, scrollY } = window;\n            const { left, top, width, height } = containerRef.current.getBoundingClientRect();\n            return [pageX - left - scrollX - width / 2, pageY - top - scrollY - height / 2];\n        }\n        return [];\n    }, [containerRef]);\n    const onKeyDown = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useEventCallback)((event) => {\n        const preventDefault = () => {\n            event.preventDefault();\n            event.stopPropagation();\n        };\n        if (zoom > 1) {\n            const move = (deltaX, deltaY) => {\n                preventDefault();\n                changeOffsets(deltaX, deltaY);\n            };\n            if (event.key === \"ArrowDown\") {\n                move(0, keyboardMoveDistance);\n            }\n            else if (event.key === \"ArrowUp\") {\n                move(0, -keyboardMoveDistance);\n            }\n            else if (event.key === \"ArrowLeft\") {\n                move(-keyboardMoveDistance, 0);\n            }\n            else if (event.key === \"ArrowRight\") {\n                move(keyboardMoveDistance, 0);\n            }\n        }\n        const handleChangeZoom = (zoomValue) => {\n            preventDefault();\n            changeZoom(zoomValue);\n        };\n        const hasMeta = () => event.getModifierState(\"Meta\");\n        if (event.key === \"+\" || (event.key === \"=\" && hasMeta())) {\n            handleChangeZoom(zoom * zoomInMultiplier);\n        }\n        else if (event.key === \"-\" || (event.key === \"_\" && hasMeta())) {\n            handleChangeZoom(zoom / zoomInMultiplier);\n        }\n        else if (event.key === \"0\" && hasMeta()) {\n            handleChangeZoom(1);\n        }\n    });\n    const onWheel = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useEventCallback)((event) => {\n        if (event.ctrlKey || scrollToZoom) {\n            if (Math.abs(event.deltaY) > Math.abs(event.deltaX)) {\n                event.stopPropagation();\n                changeZoom(zoom * (1 - event.deltaY / wheelZoomDistanceFactor), true, ...translateCoordinates(event));\n                return;\n            }\n        }\n        if (zoom > 1) {\n            event.stopPropagation();\n            if (!scrollToZoom) {\n                changeOffsets(event.deltaX, event.deltaY);\n            }\n        }\n    });\n    const clearPointer = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((event) => {\n        const pointers = activePointers.current;\n        pointers.splice(0, pointers.length, ...pointers.filter((p) => p.pointerId !== event.pointerId));\n    }, []);\n    const replacePointer = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((event) => {\n        clearPointer(event);\n        event.persist();\n        activePointers.current.push(event);\n    }, [clearPointer]);\n    const onPointerDown = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useEventCallback)((event) => {\n        var _a;\n        const pointers = activePointers.current;\n        if (!((_a = zoomWrapperRef === null || zoomWrapperRef === void 0 ? void 0 : zoomWrapperRef.current) === null || _a === void 0 ? void 0 : _a.contains(event.target))) {\n            return;\n        }\n        if (zoom > 1) {\n            event.stopPropagation();\n        }\n        const { timeStamp } = event;\n        if (pointers.length === 0 &&\n            timeStamp - lastPointerDown.current < (event.pointerType === \"touch\" ? doubleTapDelay : doubleClickDelay)) {\n            lastPointerDown.current = 0;\n            changeZoom(zoom !== maxZoom ? zoom * Math.max(maxZoom ** (1 / doubleClickMaxStops), zoomInMultiplier) : 1, false, ...translateCoordinates(event));\n        }\n        else {\n            lastPointerDown.current = timeStamp;\n        }\n        replacePointer(event);\n        if (pointers.length === 2) {\n            pinchZoomDistance.current = distance(pointers[0], pointers[1]);\n        }\n    });\n    const onPointerMove = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useEventCallback)((event) => {\n        const pointers = activePointers.current;\n        const activePointer = pointers.find((p) => p.pointerId === event.pointerId);\n        if (pointers.length === 2 && pinchZoomDistance.current) {\n            event.stopPropagation();\n            replacePointer(event);\n            const currentDistance = distance(pointers[0], pointers[1]);\n            const delta = currentDistance - pinchZoomDistance.current;\n            if (Math.abs(delta) > 0) {\n                changeZoom(zoom * (1 + delta / pinchZoomDistanceFactor), true, ...pointers\n                    .map((x) => translateCoordinates(x))\n                    .reduce((acc, coordinate) => coordinate.map((x, i) => acc[i] + x / 2)));\n                pinchZoomDistance.current = currentDistance;\n            }\n            return;\n        }\n        if (zoom > 1) {\n            event.stopPropagation();\n            if (activePointer) {\n                if (pointers.length === 1) {\n                    changeOffsets((activePointer.clientX - event.clientX) / zoom, (activePointer.clientY - event.clientY) / zoom);\n                }\n                replacePointer(event);\n            }\n        }\n    });\n    const onPointerUp = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((event) => {\n        const pointers = activePointers.current;\n        if (pointers.length === 2 && pointers.find((p) => p.pointerId === event.pointerId)) {\n            pinchZoomDistance.current = undefined;\n        }\n        clearPointer(event);\n    }, [clearPointer]);\n    const cleanupSensors = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(() => {\n        const pointers = activePointers.current;\n        pointers.splice(0, pointers.length);\n        lastPointerDown.current = 0;\n        pinchZoomDistance.current = undefined;\n    }, []);\n    (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.usePointerEvents)(subscribeSensors, onPointerDown, onPointerMove, onPointerUp, disabled);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(cleanupSensors, [globalIndex, cleanupSensors]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n        if (!disabled) {\n            return (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cleanup)(cleanupSensors, subscribeSensors(_types_js__WEBPACK_IMPORTED_MODULE_2__.EVENT_ON_KEY_DOWN, onKeyDown), subscribeSensors(_types_js__WEBPACK_IMPORTED_MODULE_2__.EVENT_ON_WHEEL, onWheel));\n        }\n        return () => { };\n    }, [disabled, subscribeSensors, cleanupSensors, onKeyDown, onWheel]);\n}\n\nfunction useZoomState(imageRect, maxZoom, zoomWrapperRef) {\n    const [zoom, setZoom] = react__WEBPACK_IMPORTED_MODULE_0__.useState(1);\n    const [offsetX, setOffsetX] = react__WEBPACK_IMPORTED_MODULE_0__.useState(0);\n    const [offsetY, setOffsetY] = react__WEBPACK_IMPORTED_MODULE_0__.useState(0);\n    const animate = useZoomAnimation(zoom, offsetX, offsetY, zoomWrapperRef);\n    const { currentSlide, globalIndex } = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useLightboxState)();\n    const { containerRect, slideRect } = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useController)();\n    const { zoomInMultiplier } = useZoomProps();\n    const currentSource = currentSlide && (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.isImageSlide)(currentSlide) ? currentSlide.src : undefined;\n    const disabled = !currentSource || !(zoomWrapperRef === null || zoomWrapperRef === void 0 ? void 0 : zoomWrapperRef.current);\n    (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect)(() => {\n        setZoom(1);\n        setOffsetX(0);\n        setOffsetY(0);\n    }, [globalIndex, currentSource]);\n    const changeOffsets = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((dx, dy, targetZoom) => {\n        const newZoom = targetZoom || zoom;\n        const newOffsetX = offsetX - (dx || 0);\n        const newOffsetY = offsetY - (dy || 0);\n        const maxOffsetX = (imageRect.width * newZoom - slideRect.width) / 2 / newZoom;\n        const maxOffsetY = (imageRect.height * newZoom - slideRect.height) / 2 / newZoom;\n        setOffsetX(Math.min(Math.abs(newOffsetX), Math.max(maxOffsetX, 0)) * Math.sign(newOffsetX));\n        setOffsetY(Math.min(Math.abs(newOffsetY), Math.max(maxOffsetY, 0)) * Math.sign(newOffsetY));\n    }, [zoom, offsetX, offsetY, slideRect, imageRect.width, imageRect.height]);\n    const changeZoom = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((targetZoom, rapid, dx, dy) => {\n        const newZoom = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.round)(Math.min(Math.max(targetZoom + 0.001 < maxZoom ? targetZoom : maxZoom, 1), maxZoom), 5);\n        if (newZoom === zoom)\n            return;\n        if (!rapid) {\n            animate();\n        }\n        changeOffsets(dx ? dx * (1 / zoom - 1 / newZoom) : 0, dy ? dy * (1 / zoom - 1 / newZoom) : 0, newZoom);\n        setZoom(newZoom);\n    }, [zoom, maxZoom, changeOffsets, animate]);\n    const handleControllerRectChange = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useEventCallback)(() => {\n        if (zoom > 1) {\n            if (zoom > maxZoom) {\n                changeZoom(maxZoom, true);\n            }\n            changeOffsets();\n        }\n    });\n    (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect)(handleControllerRectChange, [containerRect.width, containerRect.height, handleControllerRectChange]);\n    const zoomIn = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(() => changeZoom(zoom * zoomInMultiplier), [zoom, zoomInMultiplier, changeZoom]);\n    const zoomOut = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(() => changeZoom(zoom / zoomInMultiplier), [zoom, zoomInMultiplier, changeZoom]);\n    return { zoom, offsetX, offsetY, disabled, changeOffsets, changeZoom, zoomIn, zoomOut };\n}\n\nconst ZoomControllerContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);\nconst useZoom = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.makeUseContext)(\"useZoom\", \"ZoomControllerContext\", ZoomControllerContext);\nfunction ZoomContextProvider({ children }) {\n    const [zoomWrapper, setZoomWrapper] = react__WEBPACK_IMPORTED_MODULE_0__.useState();\n    const { slideRect } = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useController)();\n    const { imageRect, maxZoom } = useZoomImageRect(slideRect, zoomWrapper === null || zoomWrapper === void 0 ? void 0 : zoomWrapper.imageDimensions);\n    const { zoom, offsetX, offsetY, disabled, changeZoom, changeOffsets, zoomIn, zoomOut } = useZoomState(imageRect, maxZoom, zoomWrapper === null || zoomWrapper === void 0 ? void 0 : zoomWrapper.zoomWrapperRef);\n    useZoomCallback(zoom, disabled);\n    useZoomSensors(zoom, maxZoom, disabled, changeZoom, changeOffsets, zoomWrapper === null || zoomWrapper === void 0 ? void 0 : zoomWrapper.zoomWrapperRef);\n    const zoomRef = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => ({ zoom, maxZoom, offsetX, offsetY, disabled, zoomIn, zoomOut, changeZoom }), [zoom, maxZoom, offsetX, offsetY, disabled, zoomIn, zoomOut, changeZoom]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useImperativeHandle(useZoomProps().ref, () => zoomRef, [zoomRef]);\n    const context = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => ({ ...zoomRef, setZoomWrapper }), [zoomRef, setZoomWrapper]);\n    return react__WEBPACK_IMPORTED_MODULE_0__.createElement(ZoomControllerContext.Provider, { value: context }, children);\n}\n\nconst ZoomInIcon = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.createIcon)(\"ZoomIn\", react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null,\n    react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", { d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\" }),\n    react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", { d: \"M12 10h-2v2H9v-2H7V9h2V7h1v2h2v1z\" })));\nconst ZoomOutIcon = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.createIcon)(\"ZoomOut\", react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", { d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14zM7 9h5v1H7z\" }));\nconst ZoomButton = react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function ZoomButton({ zoomIn, onLoseFocus }, ref) {\n    const wasEnabled = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);\n    const wasFocused = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);\n    const { zoom, maxZoom, zoomIn: zoomInCallback, zoomOut: zoomOutCallback, disabled: zoomDisabled } = useZoom();\n    const { render } = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useLightboxProps)();\n    const disabled = zoomDisabled || (zoomIn ? zoom >= maxZoom : zoom <= 1);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n        if (disabled && wasEnabled.current && wasFocused.current) {\n            onLoseFocus();\n        }\n        if (!disabled) {\n            wasEnabled.current = true;\n        }\n    }, [disabled, onLoseFocus]);\n    return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(_index_js__WEBPACK_IMPORTED_MODULE_1__.IconButton, { ref: ref, disabled: disabled, label: zoomIn ? \"Zoom in\" : \"Zoom out\", icon: zoomIn ? ZoomInIcon : ZoomOutIcon, renderIcon: zoomIn ? render.iconZoomIn : render.iconZoomOut, onClick: zoomIn ? zoomInCallback : zoomOutCallback, onFocus: () => {\n            wasFocused.current = true;\n        }, onBlur: () => {\n            wasFocused.current = false;\n        } }));\n});\n\nfunction ZoomButtonsGroup() {\n    const zoomInRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const zoomOutRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const { focus } = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useController)();\n    const focusSibling = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((sibling) => {\n        var _a, _b;\n        if (!((_a = sibling.current) === null || _a === void 0 ? void 0 : _a.disabled)) {\n            (_b = sibling.current) === null || _b === void 0 ? void 0 : _b.focus();\n        }\n        else {\n            focus();\n        }\n    }, [focus]);\n    const focusZoomIn = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(() => focusSibling(zoomInRef), [focusSibling]);\n    const focusZoomOut = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(() => focusSibling(zoomOutRef), [focusSibling]);\n    return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null,\n        react__WEBPACK_IMPORTED_MODULE_0__.createElement(ZoomButton, { zoomIn: true, ref: zoomInRef, onLoseFocus: focusZoomOut }),\n        react__WEBPACK_IMPORTED_MODULE_0__.createElement(ZoomButton, { ref: zoomOutRef, onLoseFocus: focusZoomIn })));\n}\n\nfunction ZoomToolbarControl() {\n    const { render } = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useLightboxProps)();\n    const zoomRef = useZoom();\n    if (render.buttonZoom) {\n        return react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, render.buttonZoom(zoomRef));\n    }\n    return react__WEBPACK_IMPORTED_MODULE_0__.createElement(ZoomButtonsGroup, null);\n}\n\nfunction isResponsiveImageSlide(slide) {\n    var _a;\n    return (((_a = slide.srcSet) === null || _a === void 0 ? void 0 : _a.length) || 0) > 0;\n}\nfunction reducer({ current, preload }, { type, source }) {\n    switch (type) {\n        case \"fetch\":\n            if (!current) {\n                return { current: source };\n            }\n            return { current, preload: source };\n        case \"done\":\n            if (source === preload) {\n                return { current: source };\n            }\n            return { current, preload };\n        default:\n            throw new Error(_types_js__WEBPACK_IMPORTED_MODULE_2__.UNKNOWN_ACTION_TYPE);\n    }\n}\nfunction ResponsiveImage(props) {\n    var _a, _b;\n    const [{ current, preload }, dispatch] = react__WEBPACK_IMPORTED_MODULE_0__.useReducer(reducer, {});\n    const { slide: image, rect, imageFit, render } = props;\n    const srcSet = image.srcSet.sort((a, b) => a.width - b.width);\n    const width = (_a = image.width) !== null && _a !== void 0 ? _a : srcSet[srcSet.length - 1].width;\n    const height = (_b = image.height) !== null && _b !== void 0 ? _b : srcSet[srcSet.length - 1].height;\n    const cover = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.isImageFitCover)(image, imageFit);\n    const maxWidth = Math.max(...srcSet.map((x) => x.width));\n    const targetWidth = Math.min((cover ? Math.max : Math.min)(rect.width, width * (rect.height / height)), maxWidth);\n    const pixelDensity = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.devicePixelRatio)();\n    const handleResize = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useEventCallback)(() => {\n        var _a;\n        const targetSource = (_a = srcSet.find((x) => x.width >= targetWidth * pixelDensity)) !== null && _a !== void 0 ? _a : srcSet[srcSet.length - 1];\n        if (!current || srcSet.findIndex((x) => x.src === current) < srcSet.findIndex((x) => x === targetSource)) {\n            dispatch({ type: \"fetch\", source: targetSource.src });\n        }\n    });\n    (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect)(handleResize, [rect.width, rect.height, pixelDensity, handleResize]);\n    const handlePreload = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useEventCallback)((currentPreload) => dispatch({ type: \"done\", source: currentPreload }));\n    const style = {\n        WebkitTransform: \"translateZ(0)\",\n    };\n    if (!cover) {\n        Object.assign(style, rect.width / rect.height < width / height ? { width: \"100%\", height: \"auto\" } : { width: \"auto\", height: \"100%\" });\n    }\n    return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null,\n        preload && preload !== current && (react__WEBPACK_IMPORTED_MODULE_0__.createElement(_index_js__WEBPACK_IMPORTED_MODULE_1__.ImageSlide, { key: \"preload\", ...props, slide: { ...image, src: preload, srcSet: undefined }, style: { position: \"absolute\", visibility: \"hidden\", ...style }, onLoad: () => handlePreload(preload), render: {\n                ...render,\n                iconLoading: () => null,\n                iconError: () => null,\n            } })),\n        current && (react__WEBPACK_IMPORTED_MODULE_0__.createElement(_index_js__WEBPACK_IMPORTED_MODULE_1__.ImageSlide, { key: \"current\", ...props, slide: { ...image, src: current, srcSet: undefined }, style: style }))));\n}\n\nfunction ZoomWrapper({ render, slide, offset, rect }) {\n    var _a;\n    const [imageDimensions, setImageDimensions] = react__WEBPACK_IMPORTED_MODULE_0__.useState();\n    const zoomWrapperRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    const { zoom, maxZoom, offsetX, offsetY, setZoomWrapper } = useZoom();\n    const { carousel, on } = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useLightboxProps)();\n    const { currentIndex } = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useLightboxState)();\n    (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect)(() => {\n        if (offset === 0) {\n            setZoomWrapper({ zoomWrapperRef, imageDimensions });\n            return () => setZoomWrapper(undefined);\n        }\n        return () => { };\n    }, [offset, imageDimensions, setZoomWrapper]);\n    let rendered = (_a = render.slide) === null || _a === void 0 ? void 0 : _a.call(render, { slide, offset, rect, zoom, maxZoom });\n    if (!rendered && (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.isImageSlide)(slide)) {\n        const slideProps = {\n            slide,\n            offset,\n            rect,\n            render,\n            imageFit: carousel.imageFit,\n            imageProps: carousel.imageProps,\n            onClick: offset === 0 ? () => { var _a; return (_a = on.click) === null || _a === void 0 ? void 0 : _a.call(on, { index: currentIndex }); } : undefined,\n        };\n        rendered = isResponsiveImageSlide(slide) ? (react__WEBPACK_IMPORTED_MODULE_0__.createElement(ResponsiveImage, { key: slide.src, ...slideProps, slide: slide, rect: offset === 0 ? { width: rect.width * zoom, height: rect.height * zoom } : rect })) : (react__WEBPACK_IMPORTED_MODULE_0__.createElement(_index_js__WEBPACK_IMPORTED_MODULE_1__.ImageSlide, { key: slide.src, onLoad: (img) => setImageDimensions({ width: img.naturalWidth, height: img.naturalHeight }), ...slideProps }));\n    }\n    if (!rendered)\n        return null;\n    return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", { ref: zoomWrapperRef, className: (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.clsx)((0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cssClass)(_types_js__WEBPACK_IMPORTED_MODULE_2__.CLASS_FULLSIZE), (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cssClass)(_types_js__WEBPACK_IMPORTED_MODULE_2__.CLASS_FLEX_CENTER), (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.cssClass)(_types_js__WEBPACK_IMPORTED_MODULE_2__.CLASS_SLIDE_WRAPPER)), style: offset === 0 ? { transform: `scale(${zoom}) translateX(${offsetX}px) translateY(${offsetY}px)` } : undefined }, rendered));\n}\n\nconst Zoom = ({ augment, addModule }) => {\n    augment(({ zoom: zoomProps, toolbar, render, controller, ...restProps }) => {\n        const zoom = resolveZoomProps(zoomProps);\n        return {\n            zoom,\n            toolbar: (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.addToolbarButton)(toolbar, _types_js__WEBPACK_IMPORTED_MODULE_2__.PLUGIN_ZOOM, react__WEBPACK_IMPORTED_MODULE_0__.createElement(ZoomToolbarControl, null)),\n            render: {\n                ...render,\n                slide: (props) => { var _a; return (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.isImageSlide)(props.slide) ? react__WEBPACK_IMPORTED_MODULE_0__.createElement(ZoomWrapper, { render: render, ...props }) : (_a = render.slide) === null || _a === void 0 ? void 0 : _a.call(render, props); },\n            },\n            controller: { ...controller, preventDefaultWheelY: zoom.scrollToZoom },\n            ...restProps,\n        };\n    });\n    addModule((0,_index_js__WEBPACK_IMPORTED_MODULE_1__.createModule)(_types_js__WEBPACK_IMPORTED_MODULE_2__.PLUGIN_ZOOM, ZoomContextProvider));\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMveWV0LWFub3RoZXItcmVhY3QtbGlnaHRib3gvZGlzdC9wbHVnaW5zL3pvb20vaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFrVTtBQUNuUztBQUM4SDs7QUFFN0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQSwwQkFBMEIseUNBQVk7QUFDdEMsK0JBQStCLHlDQUFZO0FBQzNDLFlBQVksOEJBQThCLEVBQUUsMkRBQWdCO0FBQzVELHlCQUF5Qiw4REFBbUI7QUFDNUMsOEJBQThCLDJEQUFnQjtBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsdUNBQXVDO0FBQzdELHNCQUFzQixvQkFBb0IsS0FBSyxlQUFlLFFBQVEsaUJBQWlCLFFBQVEsTUFBTTtBQUNyRztBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxJQUFJLDBEQUFlO0FBQ25CLFdBQVcsOENBQWlCO0FBQzVCO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBLFlBQVksS0FBSyxFQUFFLDJEQUFnQjtBQUNuQywyQkFBMkIsMkRBQWdCO0FBQzNDO0FBQ0E7QUFDQSw4RUFBOEUsTUFBTTtBQUNwRjtBQUNBLEtBQUs7QUFDTCxJQUFJLDRDQUFlO0FBQ25COztBQUVBO0FBQ0EsWUFBWSxPQUFPLEVBQUUsMkRBQWdCO0FBQ3JDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLHNCQUFzQjtBQUN0Qix5QkFBeUI7QUFDekIsWUFBWSxlQUFlLEVBQUUsMkRBQWdCO0FBQzdDLFlBQVksV0FBVyxFQUFFLDJEQUFnQjtBQUN6QyxZQUFZLG9CQUFvQjtBQUNoQztBQUNBLHdCQUF3QjtBQUN4QixZQUFZLHVEQUFZO0FBQ3hCLDBCQUEwQiwwREFBZTtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0NBQStDLGdEQUFLO0FBQ3BELGFBQWE7QUFDYjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQix5Q0FBWTtBQUN2Qyw0QkFBNEIseUNBQVk7QUFDeEMsOEJBQThCLHlDQUFZO0FBQzFDLFlBQVksY0FBYyxFQUFFLDJEQUFnQjtBQUM1QyxZQUFZLGlDQUFpQyxFQUFFLHdEQUFhO0FBQzVELFlBQVksaUtBQWlLO0FBQzdLLGlDQUFpQyw4Q0FBaUI7QUFDbEQ7QUFDQSxvQkFBb0IsZUFBZTtBQUNuQyxvQkFBb0IsbUJBQW1CO0FBQ3ZDLG9CQUFvQiwyQkFBMkI7QUFDL0M7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLHNCQUFzQiwyREFBZ0I7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLG9CQUFvQiwyREFBZ0I7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wseUJBQXlCLDhDQUFpQjtBQUMxQztBQUNBO0FBQ0EsS0FBSztBQUNMLDJCQUEyQiw4Q0FBaUI7QUFDNUM7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLDBCQUEwQiwyREFBZ0I7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixZQUFZO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCwwQkFBMEIsMkRBQWdCO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCx3QkFBd0IsOENBQWlCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsMkJBQTJCLDhDQUFpQjtBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxJQUFJLDJEQUFnQjtBQUNwQixJQUFJLDRDQUFlO0FBQ25CLElBQUksNENBQWU7QUFDbkI7QUFDQSxtQkFBbUIsa0RBQU8sa0NBQWtDLHdEQUFpQiwrQkFBK0IscURBQWM7QUFDMUg7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBLDRCQUE0QiwyQ0FBYztBQUMxQyxrQ0FBa0MsMkNBQWM7QUFDaEQsa0NBQWtDLDJDQUFjO0FBQ2hEO0FBQ0EsWUFBWSw0QkFBNEIsRUFBRSwyREFBZ0I7QUFDMUQsWUFBWSwyQkFBMkIsRUFBRSx3REFBYTtBQUN0RCxZQUFZLG1CQUFtQjtBQUMvQiwwQ0FBMEMsdURBQVk7QUFDdEQ7QUFDQSxJQUFJLDBEQUFlO0FBQ25CO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCwwQkFBMEIsOENBQWlCO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLHVCQUF1Qiw4Q0FBaUI7QUFDeEMsd0JBQXdCLGdEQUFLO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLHVDQUF1QywyREFBZ0I7QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLElBQUksMERBQWU7QUFDbkIsbUJBQW1CLDhDQUFpQjtBQUNwQyxvQkFBb0IsOENBQWlCO0FBQ3JDLGFBQWE7QUFDYjs7QUFFQSw4QkFBOEIsZ0RBQW1CO0FBQ2pELGdCQUFnQix5REFBYztBQUM5QiwrQkFBK0IsVUFBVTtBQUN6QywwQ0FBMEMsMkNBQWM7QUFDeEQsWUFBWSxZQUFZLEVBQUUsd0RBQWE7QUFDdkMsWUFBWSxxQkFBcUI7QUFDakMsWUFBWSwrRUFBK0U7QUFDM0Y7QUFDQTtBQUNBLG9CQUFvQiwwQ0FBYSxVQUFVLHdFQUF3RTtBQUNuSCxJQUFJLHNEQUF5QjtBQUM3QixvQkFBb0IsMENBQWEsVUFBVSw0QkFBNEI7QUFDdkUsV0FBVyxnREFBbUIsbUNBQW1DLGdCQUFnQjtBQUNqRjs7QUFFQSxtQkFBbUIscURBQVUsV0FBVyxnREFBbUIsQ0FBQywyQ0FBYztBQUMxRSxJQUFJLGdEQUFtQixXQUFXLGlQQUFpUDtBQUNuUixJQUFJLGdEQUFtQixXQUFXLHdDQUF3QztBQUMxRSxvQkFBb0IscURBQVUsWUFBWSxnREFBbUIsV0FBVyw0UEFBNFA7QUFDcFUsbUJBQW1CLDZDQUFnQix1QkFBdUIscUJBQXFCO0FBQy9FLHVCQUF1Qix5Q0FBWTtBQUNuQyx1QkFBdUIseUNBQVk7QUFDbkMsWUFBWSwwRkFBMEY7QUFDdEcsWUFBWSxTQUFTLEVBQUUsMkRBQWdCO0FBQ3ZDO0FBQ0EsSUFBSSw0Q0FBZTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsWUFBWSxnREFBbUIsQ0FBQyxpREFBVSxJQUFJO0FBQzlDO0FBQ0EsU0FBUztBQUNUO0FBQ0EsV0FBVztBQUNYLENBQUM7O0FBRUQ7QUFDQSxzQkFBc0IseUNBQVk7QUFDbEMsdUJBQXVCLHlDQUFZO0FBQ25DLFlBQVksUUFBUSxFQUFFLHdEQUFhO0FBQ25DLHlCQUF5Qiw4Q0FBaUI7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsd0JBQXdCLDhDQUFpQjtBQUN6Qyx5QkFBeUIsOENBQWlCO0FBQzFDLFlBQVksZ0RBQW1CLENBQUMsMkNBQWM7QUFDOUMsUUFBUSxnREFBbUIsZUFBZSx5REFBeUQ7QUFDbkcsUUFBUSxnREFBbUIsZUFBZSwyQ0FBMkM7QUFDckY7O0FBRUE7QUFDQSxZQUFZLFNBQVMsRUFBRSwyREFBZ0I7QUFDdkM7QUFDQTtBQUNBLGVBQWUsZ0RBQW1CLENBQUMsMkNBQWM7QUFDakQ7QUFDQSxXQUFXLGdEQUFtQjtBQUM5Qjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixrQkFBa0IsSUFBSSxjQUFjO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0EsNEJBQTRCLDBEQUFtQjtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsa0JBQWtCLGNBQWMsNkNBQWdCLFlBQVk7QUFDekUsWUFBWSx1Q0FBdUM7QUFDbkQ7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLDBEQUFlO0FBQ2pDO0FBQ0E7QUFDQSx5QkFBeUIsMkRBQWdCO0FBQ3pDLHlCQUF5QiwyREFBZ0I7QUFDekM7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLHlDQUF5QztBQUNoRTtBQUNBLEtBQUs7QUFDTCxJQUFJLDBEQUFlO0FBQ25CLDBCQUEwQiwyREFBZ0IsZ0NBQWdDLHNDQUFzQztBQUNoSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJFQUEyRSxnQ0FBZ0MsSUFBSSwrQkFBK0I7QUFDOUk7QUFDQSxZQUFZLGdEQUFtQixDQUFDLDJDQUFjO0FBQzlDLDJDQUEyQyxnREFBbUIsQ0FBQyxpREFBVSxJQUFJLG1DQUFtQywyQ0FBMkMsV0FBVyxzREFBc0Q7QUFDNU47QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmLG9CQUFvQixnREFBbUIsQ0FBQyxpREFBVSxJQUFJLG1DQUFtQywyQ0FBMkMsZ0JBQWdCO0FBQ3BKOztBQUVBLHVCQUF1Qiw2QkFBNkI7QUFDcEQ7QUFDQSxrREFBa0QsMkNBQWM7QUFDaEUsMkJBQTJCLHlDQUFZO0FBQ3ZDLFlBQVksa0RBQWtEO0FBQzlELFlBQVksZUFBZSxFQUFFLDJEQUFnQjtBQUM3QyxZQUFZLGVBQWUsRUFBRSwyREFBZ0I7QUFDN0MsSUFBSSwwREFBZTtBQUNuQjtBQUNBLDZCQUE2QixpQ0FBaUM7QUFDOUQ7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLDhGQUE4RixvQ0FBb0M7QUFDbEkscUJBQXFCLHVEQUFZO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNENBQTRDLFFBQVEsMEVBQTBFLHFCQUFxQixLQUFLO0FBQ3hKO0FBQ0Esb0RBQW9ELGdEQUFtQixvQkFBb0Isb0VBQW9FLHVEQUF1RCxRQUFRLE1BQU0sZ0RBQW1CLENBQUMsaURBQVUsSUFBSSxzREFBc0Qsb0RBQW9ELGtCQUFrQjtBQUNsWTtBQUNBO0FBQ0E7QUFDQSxZQUFZLGdEQUFtQixVQUFVLGdDQUFnQywrQ0FBSSxDQUFDLG1EQUFRLENBQUMscURBQWMsR0FBRyxtREFBUSxDQUFDLHdEQUFpQixHQUFHLG1EQUFRLENBQUMsMERBQW1CLDRCQUE0QixvQkFBb0IsS0FBSyxlQUFlLFFBQVEsaUJBQWlCLFFBQVEsT0FBTyxhQUFhO0FBQzFSOztBQUVBLGdCQUFnQixvQkFBb0I7QUFDcEMsZUFBZSw0REFBNEQ7QUFDM0U7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLDJEQUFnQixVQUFVLGtEQUFXLEVBQUUsZ0RBQW1CO0FBQy9FO0FBQ0E7QUFDQSxvQ0FBb0MsUUFBUSxPQUFPLHVEQUFZLGdCQUFnQixnREFBbUIsZ0JBQWdCLDBCQUEwQixzRkFBc0Y7QUFDbE8sYUFBYTtBQUNiLDBCQUEwQix3REFBd0Q7QUFDbEY7QUFDQTtBQUNBLEtBQUs7QUFDTCxjQUFjLHVEQUFZLENBQUMsa0RBQVc7QUFDdEM7O0FBRTJCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2F0ZXJtYXJrLWV4cGVyaWVuY2UvLi9ub2RlX21vZHVsZXMveWV0LWFub3RoZXItcmVhY3QtbGlnaHRib3gvZGlzdC9wbHVnaW5zL3pvb20vaW5kZXguanM/NjM4MiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VMaWdodGJveFByb3BzLCB1c2VNb3Rpb25QcmVmZXJlbmNlLCB1c2VFdmVudENhbGxiYWNrLCB1c2VMYXlvdXRFZmZlY3QsIHVzZUxpZ2h0Ym94U3RhdGUsIGlzSW1hZ2VTbGlkZSwgaXNJbWFnZUZpdENvdmVyLCByb3VuZCwgdXNlQ29udHJvbGxlciwgdXNlUG9pbnRlckV2ZW50cywgY2xlYW51cCwgbWFrZVVzZUNvbnRleHQsIGNyZWF0ZUljb24sIEljb25CdXR0b24sIGRldmljZVBpeGVsUmF0aW8sIEltYWdlU2xpZGUsIGNsc3gsIGNzc0NsYXNzLCBhZGRUb29sYmFyQnV0dG9uLCBjcmVhdGVNb2R1bGUgfSBmcm9tICcuLi8uLi9pbmRleC5qcyc7XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBFVkVOVF9PTl9LRVlfRE9XTiwgRVZFTlRfT05fV0hFRUwsIFVOS05PV05fQUNUSU9OX1RZUEUsIENMQVNTX0ZVTExTSVpFLCBDTEFTU19GTEVYX0NFTlRFUiwgQ0xBU1NfU0xJREVfV1JBUFBFUiwgUExVR0lOX1pPT00gfSBmcm9tICcuLi8uLi90eXBlcy5qcyc7XG5cbmNvbnN0IGRlZmF1bHRab29tUHJvcHMgPSB7XG4gICAgbWF4Wm9vbVBpeGVsUmF0aW86IDEsXG4gICAgem9vbUluTXVsdGlwbGllcjogMixcbiAgICBkb3VibGVUYXBEZWxheTogMzAwLFxuICAgIGRvdWJsZUNsaWNrRGVsYXk6IDUwMCxcbiAgICBkb3VibGVDbGlja01heFN0b3BzOiAyLFxuICAgIGtleWJvYXJkTW92ZURpc3RhbmNlOiA1MCxcbiAgICB3aGVlbFpvb21EaXN0YW5jZUZhY3RvcjogMTAwLFxuICAgIHBpbmNoWm9vbURpc3RhbmNlRmFjdG9yOiAxMDAsXG4gICAgc2Nyb2xsVG9ab29tOiBmYWxzZSxcbn07XG5jb25zdCByZXNvbHZlWm9vbVByb3BzID0gKHpvb20pID0+ICh7XG4gICAgLi4uZGVmYXVsdFpvb21Qcm9wcyxcbiAgICAuLi56b29tLFxufSk7XG5cbmZ1bmN0aW9uIHVzZVpvb21BbmltYXRpb24oem9vbSwgb2Zmc2V0WCwgb2Zmc2V0WSwgem9vbVdyYXBwZXJSZWYpIHtcbiAgICBjb25zdCB6b29tQW5pbWF0aW9uID0gUmVhY3QudXNlUmVmKCk7XG4gICAgY29uc3Qgem9vbUFuaW1hdGlvblN0YXJ0ID0gUmVhY3QudXNlUmVmKCk7XG4gICAgY29uc3QgeyB6b29tOiB6b29tQW5pbWF0aW9uRHVyYXRpb24gfSA9IHVzZUxpZ2h0Ym94UHJvcHMoKS5hbmltYXRpb247XG4gICAgY29uc3QgcmVkdWNlTW90aW9uID0gdXNlTW90aW9uUHJlZmVyZW5jZSgpO1xuICAgIGNvbnN0IHBsYXlab29tQW5pbWF0aW9uID0gdXNlRXZlbnRDYWxsYmFjaygoKSA9PiB7XG4gICAgICAgIHZhciBfYSwgX2IsIF9jO1xuICAgICAgICAoX2EgPSB6b29tQW5pbWF0aW9uLmN1cnJlbnQpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5jYW5jZWwoKTtcbiAgICAgICAgem9vbUFuaW1hdGlvbi5jdXJyZW50ID0gdW5kZWZpbmVkO1xuICAgICAgICBpZiAoem9vbUFuaW1hdGlvblN0YXJ0LmN1cnJlbnQgJiYgKHpvb21XcmFwcGVyUmVmID09PSBudWxsIHx8IHpvb21XcmFwcGVyUmVmID09PSB2b2lkIDAgPyB2b2lkIDAgOiB6b29tV3JhcHBlclJlZi5jdXJyZW50KSkge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICB6b29tQW5pbWF0aW9uLmN1cnJlbnQgPSAoX2MgPSAoX2IgPSB6b29tV3JhcHBlclJlZi5jdXJyZW50KS5hbmltYXRlKSA9PT0gbnVsbCB8fCBfYyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2MuY2FsbChfYiwgW1xuICAgICAgICAgICAgICAgICAgICB7IHRyYW5zZm9ybTogem9vbUFuaW1hdGlvblN0YXJ0LmN1cnJlbnQgfSxcbiAgICAgICAgICAgICAgICAgICAgeyB0cmFuc2Zvcm06IGBzY2FsZSgke3pvb219KSB0cmFuc2xhdGVYKCR7b2Zmc2V0WH1weCkgdHJhbnNsYXRlWSgke29mZnNldFl9cHgpYCB9LFxuICAgICAgICAgICAgICAgIF0sIHtcbiAgICAgICAgICAgICAgICAgICAgZHVyYXRpb246ICFyZWR1Y2VNb3Rpb24gPyB6b29tQW5pbWF0aW9uRHVyYXRpb24gIT09IG51bGwgJiYgem9vbUFuaW1hdGlvbkR1cmF0aW9uICE9PSB2b2lkIDAgPyB6b29tQW5pbWF0aW9uRHVyYXRpb24gOiA1MDAgOiAwLFxuICAgICAgICAgICAgICAgICAgICBlYXNpbmc6IHpvb21BbmltYXRpb24uY3VycmVudCA/IFwiZWFzZS1vdXRcIiA6IFwiZWFzZS1pbi1vdXRcIixcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoIChlcnIpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKGVycik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB6b29tQW5pbWF0aW9uU3RhcnQuY3VycmVudCA9IHVuZGVmaW5lZDtcbiAgICAgICAgICAgIGlmICh6b29tQW5pbWF0aW9uLmN1cnJlbnQpIHtcbiAgICAgICAgICAgICAgICB6b29tQW5pbWF0aW9uLmN1cnJlbnQub25maW5pc2ggPSAoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHpvb21BbmltYXRpb24uY3VycmVudCA9IHVuZGVmaW5lZDtcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSk7XG4gICAgdXNlTGF5b3V0RWZmZWN0KHBsYXlab29tQW5pbWF0aW9uLCBbem9vbSwgb2Zmc2V0WCwgb2Zmc2V0WSwgcGxheVpvb21BbmltYXRpb25dKTtcbiAgICByZXR1cm4gUmVhY3QudXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgICAgICB6b29tQW5pbWF0aW9uU3RhcnQuY3VycmVudCA9ICh6b29tV3JhcHBlclJlZiA9PT0gbnVsbCB8fCB6b29tV3JhcHBlclJlZiA9PT0gdm9pZCAwID8gdm9pZCAwIDogem9vbVdyYXBwZXJSZWYuY3VycmVudClcbiAgICAgICAgICAgID8gd2luZG93LmdldENvbXB1dGVkU3R5bGUoem9vbVdyYXBwZXJSZWYuY3VycmVudCkudHJhbnNmb3JtXG4gICAgICAgICAgICA6IHVuZGVmaW5lZDtcbiAgICB9LCBbem9vbVdyYXBwZXJSZWZdKTtcbn1cblxuZnVuY3Rpb24gdXNlWm9vbUNhbGxiYWNrKHpvb20sIGRpc2FibGVkKSB7XG4gICAgY29uc3QgeyBvbiB9ID0gdXNlTGlnaHRib3hQcm9wcygpO1xuICAgIGNvbnN0IG9uWm9vbUNhbGxiYWNrID0gdXNlRXZlbnRDYWxsYmFjaygoKSA9PiB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgaWYgKCFkaXNhYmxlZCkge1xuICAgICAgICAgICAgKF9hID0gb24uem9vbSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmNhbGwob24sIHsgem9vbSB9KTtcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIFJlYWN0LnVzZUVmZmVjdChvblpvb21DYWxsYmFjaywgW3pvb20sIG9uWm9vbUNhbGxiYWNrXSk7XG59XG5cbmZ1bmN0aW9uIHVzZVpvb21Qcm9wcygpIHtcbiAgICBjb25zdCB7IHpvb20gfSA9IHVzZUxpZ2h0Ym94UHJvcHMoKTtcbiAgICByZXR1cm4gcmVzb2x2ZVpvb21Qcm9wcyh6b29tKTtcbn1cblxuZnVuY3Rpb24gdXNlWm9vbUltYWdlUmVjdChzbGlkZVJlY3QsIGltYWdlRGltZW5zaW9ucykge1xuICAgIHZhciBfYSwgX2I7XG4gICAgbGV0IGltYWdlUmVjdCA9IHsgd2lkdGg6IDAsIGhlaWdodDogMCB9O1xuICAgIGxldCBtYXhJbWFnZVJlY3QgPSB7IHdpZHRoOiAwLCBoZWlnaHQ6IDAgfTtcbiAgICBjb25zdCB7IGN1cnJlbnRTbGlkZSB9ID0gdXNlTGlnaHRib3hTdGF0ZSgpO1xuICAgIGNvbnN0IHsgaW1hZ2VGaXQgfSA9IHVzZUxpZ2h0Ym94UHJvcHMoKS5jYXJvdXNlbDtcbiAgICBjb25zdCB7IG1heFpvb21QaXhlbFJhdGlvIH0gPSB1c2Vab29tUHJvcHMoKTtcbiAgICBpZiAoc2xpZGVSZWN0ICYmIGN1cnJlbnRTbGlkZSkge1xuICAgICAgICBjb25zdCBzbGlkZSA9IHsgLi4uY3VycmVudFNsaWRlLCAuLi5pbWFnZURpbWVuc2lvbnMgfTtcbiAgICAgICAgaWYgKGlzSW1hZ2VTbGlkZShzbGlkZSkpIHtcbiAgICAgICAgICAgIGNvbnN0IGNvdmVyID0gaXNJbWFnZUZpdENvdmVyKHNsaWRlLCBpbWFnZUZpdCk7XG4gICAgICAgICAgICBjb25zdCB3aWR0aCA9IE1hdGgubWF4KC4uLigoKF9hID0gc2xpZGUuc3JjU2V0KSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EubWFwKCh4KSA9PiB4LndpZHRoKSkgfHwgW10pLmNvbmNhdChzbGlkZS53aWR0aCA/IFtzbGlkZS53aWR0aF0gOiBbXSkpO1xuICAgICAgICAgICAgY29uc3QgaGVpZ2h0ID0gTWF0aC5tYXgoLi4uKCgoX2IgPSBzbGlkZS5zcmNTZXQpID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi5tYXAoKHgpID0+IHguaGVpZ2h0KSkgfHwgW10pLmNvbmNhdChzbGlkZS5oZWlnaHQgPyBbc2xpZGUuaGVpZ2h0XSA6IFtdKSk7XG4gICAgICAgICAgICBpZiAod2lkdGggPiAwICYmIGhlaWdodCA+IDAgJiYgc2xpZGVSZWN0LndpZHRoID4gMCAmJiBzbGlkZVJlY3QuaGVpZ2h0ID4gMCkge1xuICAgICAgICAgICAgICAgIG1heEltYWdlUmVjdCA9IGNvdmVyXG4gICAgICAgICAgICAgICAgICAgID8ge1xuICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IE1hdGgucm91bmQoTWF0aC5taW4od2lkdGgsIChzbGlkZVJlY3Qud2lkdGggLyBzbGlkZVJlY3QuaGVpZ2h0KSAqIGhlaWdodCkpLFxuICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiBNYXRoLnJvdW5kKE1hdGgubWluKGhlaWdodCwgKHNsaWRlUmVjdC5oZWlnaHQgLyBzbGlkZVJlY3Qud2lkdGgpICogd2lkdGgpKSxcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICA6IHsgd2lkdGgsIGhlaWdodCB9O1xuICAgICAgICAgICAgICAgIG1heEltYWdlUmVjdCA9IHtcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IG1heEltYWdlUmVjdC53aWR0aCAqIG1heFpvb21QaXhlbFJhdGlvLFxuICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IG1heEltYWdlUmVjdC5oZWlnaHQgKiBtYXhab29tUGl4ZWxSYXRpbyxcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIGltYWdlUmVjdCA9IGNvdmVyXG4gICAgICAgICAgICAgICAgICAgID8ge1xuICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IE1hdGgubWluKHNsaWRlUmVjdC53aWR0aCwgbWF4SW1hZ2VSZWN0LndpZHRoLCB3aWR0aCksXG4gICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IE1hdGgubWluKHNsaWRlUmVjdC5oZWlnaHQsIG1heEltYWdlUmVjdC5oZWlnaHQsIGhlaWdodCksXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogTWF0aC5yb3VuZChNYXRoLm1pbihzbGlkZVJlY3Qud2lkdGgsIChzbGlkZVJlY3QuaGVpZ2h0IC8gaGVpZ2h0KSAqIHdpZHRoLCB3aWR0aCkpLFxuICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiBNYXRoLnJvdW5kKE1hdGgubWluKHNsaWRlUmVjdC5oZWlnaHQsIChzbGlkZVJlY3Qud2lkdGggLyB3aWR0aCkgKiBoZWlnaHQsIGhlaWdodCkpLFxuICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGNvbnN0IG1heFpvb20gPSBpbWFnZVJlY3Qud2lkdGggPyBNYXRoLm1heChyb3VuZChtYXhJbWFnZVJlY3Qud2lkdGggLyBpbWFnZVJlY3Qud2lkdGgsIDUpLCAxKSA6IDE7XG4gICAgcmV0dXJuIHsgaW1hZ2VSZWN0LCBtYXhab29tIH07XG59XG5cbmZ1bmN0aW9uIGRpc3RhbmNlKHBvaW50ZXJBLCBwb2ludGVyQikge1xuICAgIHJldHVybiAoKHBvaW50ZXJBLmNsaWVudFggLSBwb2ludGVyQi5jbGllbnRYKSAqKiAyICsgKHBvaW50ZXJBLmNsaWVudFkgLSBwb2ludGVyQi5jbGllbnRZKSAqKiAyKSAqKiAwLjU7XG59XG5mdW5jdGlvbiB1c2Vab29tU2Vuc29ycyh6b29tLCBtYXhab29tLCBkaXNhYmxlZCwgY2hhbmdlWm9vbSwgY2hhbmdlT2Zmc2V0cywgem9vbVdyYXBwZXJSZWYpIHtcbiAgICBjb25zdCBhY3RpdmVQb2ludGVycyA9IFJlYWN0LnVzZVJlZihbXSk7XG4gICAgY29uc3QgbGFzdFBvaW50ZXJEb3duID0gUmVhY3QudXNlUmVmKDApO1xuICAgIGNvbnN0IHBpbmNoWm9vbURpc3RhbmNlID0gUmVhY3QudXNlUmVmKCk7XG4gICAgY29uc3QgeyBnbG9iYWxJbmRleCB9ID0gdXNlTGlnaHRib3hTdGF0ZSgpO1xuICAgIGNvbnN0IHsgY29udGFpbmVyUmVmLCBzdWJzY3JpYmVTZW5zb3JzIH0gPSB1c2VDb250cm9sbGVyKCk7XG4gICAgY29uc3QgeyBrZXlib2FyZE1vdmVEaXN0YW5jZSwgem9vbUluTXVsdGlwbGllciwgd2hlZWxab29tRGlzdGFuY2VGYWN0b3IsIHNjcm9sbFRvWm9vbSwgZG91YmxlVGFwRGVsYXksIGRvdWJsZUNsaWNrRGVsYXksIGRvdWJsZUNsaWNrTWF4U3RvcHMsIHBpbmNoWm9vbURpc3RhbmNlRmFjdG9yLCB9ID0gdXNlWm9vbVByb3BzKCk7XG4gICAgY29uc3QgdHJhbnNsYXRlQ29vcmRpbmF0ZXMgPSBSZWFjdC51c2VDYWxsYmFjaygoZXZlbnQpID0+IHtcbiAgICAgICAgaWYgKGNvbnRhaW5lclJlZi5jdXJyZW50KSB7XG4gICAgICAgICAgICBjb25zdCB7IHBhZ2VYLCBwYWdlWSB9ID0gZXZlbnQ7XG4gICAgICAgICAgICBjb25zdCB7IHNjcm9sbFgsIHNjcm9sbFkgfSA9IHdpbmRvdztcbiAgICAgICAgICAgIGNvbnN0IHsgbGVmdCwgdG9wLCB3aWR0aCwgaGVpZ2h0IH0gPSBjb250YWluZXJSZWYuY3VycmVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICAgICAgICAgIHJldHVybiBbcGFnZVggLSBsZWZ0IC0gc2Nyb2xsWCAtIHdpZHRoIC8gMiwgcGFnZVkgLSB0b3AgLSBzY3JvbGxZIC0gaGVpZ2h0IC8gMl07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIFtdO1xuICAgIH0sIFtjb250YWluZXJSZWZdKTtcbiAgICBjb25zdCBvbktleURvd24gPSB1c2VFdmVudENhbGxiYWNrKChldmVudCkgPT4ge1xuICAgICAgICBjb25zdCBwcmV2ZW50RGVmYXVsdCA9ICgpID0+IHtcbiAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgfTtcbiAgICAgICAgaWYgKHpvb20gPiAxKSB7XG4gICAgICAgICAgICBjb25zdCBtb3ZlID0gKGRlbHRhWCwgZGVsdGFZKSA9PiB7XG4gICAgICAgICAgICAgICAgcHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICBjaGFuZ2VPZmZzZXRzKGRlbHRhWCwgZGVsdGFZKTtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBpZiAoZXZlbnQua2V5ID09PSBcIkFycm93RG93blwiKSB7XG4gICAgICAgICAgICAgICAgbW92ZSgwLCBrZXlib2FyZE1vdmVEaXN0YW5jZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChldmVudC5rZXkgPT09IFwiQXJyb3dVcFwiKSB7XG4gICAgICAgICAgICAgICAgbW92ZSgwLCAta2V5Ym9hcmRNb3ZlRGlzdGFuY2UpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoZXZlbnQua2V5ID09PSBcIkFycm93TGVmdFwiKSB7XG4gICAgICAgICAgICAgICAgbW92ZSgta2V5Ym9hcmRNb3ZlRGlzdGFuY2UsIDApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoZXZlbnQua2V5ID09PSBcIkFycm93UmlnaHRcIikge1xuICAgICAgICAgICAgICAgIG1vdmUoa2V5Ym9hcmRNb3ZlRGlzdGFuY2UsIDApO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGhhbmRsZUNoYW5nZVpvb20gPSAoem9vbVZhbHVlKSA9PiB7XG4gICAgICAgICAgICBwcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgY2hhbmdlWm9vbSh6b29tVmFsdWUpO1xuICAgICAgICB9O1xuICAgICAgICBjb25zdCBoYXNNZXRhID0gKCkgPT4gZXZlbnQuZ2V0TW9kaWZpZXJTdGF0ZShcIk1ldGFcIik7XG4gICAgICAgIGlmIChldmVudC5rZXkgPT09IFwiK1wiIHx8IChldmVudC5rZXkgPT09IFwiPVwiICYmIGhhc01ldGEoKSkpIHtcbiAgICAgICAgICAgIGhhbmRsZUNoYW5nZVpvb20oem9vbSAqIHpvb21Jbk11bHRpcGxpZXIpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGV2ZW50LmtleSA9PT0gXCItXCIgfHwgKGV2ZW50LmtleSA9PT0gXCJfXCIgJiYgaGFzTWV0YSgpKSkge1xuICAgICAgICAgICAgaGFuZGxlQ2hhbmdlWm9vbSh6b29tIC8gem9vbUluTXVsdGlwbGllcik7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoZXZlbnQua2V5ID09PSBcIjBcIiAmJiBoYXNNZXRhKCkpIHtcbiAgICAgICAgICAgIGhhbmRsZUNoYW5nZVpvb20oMSk7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICBjb25zdCBvbldoZWVsID0gdXNlRXZlbnRDYWxsYmFjaygoZXZlbnQpID0+IHtcbiAgICAgICAgaWYgKGV2ZW50LmN0cmxLZXkgfHwgc2Nyb2xsVG9ab29tKSB7XG4gICAgICAgICAgICBpZiAoTWF0aC5hYnMoZXZlbnQuZGVsdGFZKSA+IE1hdGguYWJzKGV2ZW50LmRlbHRhWCkpIHtcbiAgICAgICAgICAgICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgICAgICAgICBjaGFuZ2Vab29tKHpvb20gKiAoMSAtIGV2ZW50LmRlbHRhWSAvIHdoZWVsWm9vbURpc3RhbmNlRmFjdG9yKSwgdHJ1ZSwgLi4udHJhbnNsYXRlQ29vcmRpbmF0ZXMoZXZlbnQpKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHpvb20gPiAxKSB7XG4gICAgICAgICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgICAgIGlmICghc2Nyb2xsVG9ab29tKSB7XG4gICAgICAgICAgICAgICAgY2hhbmdlT2Zmc2V0cyhldmVudC5kZWx0YVgsIGV2ZW50LmRlbHRhWSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICBjb25zdCBjbGVhclBvaW50ZXIgPSBSZWFjdC51c2VDYWxsYmFjaygoZXZlbnQpID0+IHtcbiAgICAgICAgY29uc3QgcG9pbnRlcnMgPSBhY3RpdmVQb2ludGVycy5jdXJyZW50O1xuICAgICAgICBwb2ludGVycy5zcGxpY2UoMCwgcG9pbnRlcnMubGVuZ3RoLCAuLi5wb2ludGVycy5maWx0ZXIoKHApID0+IHAucG9pbnRlcklkICE9PSBldmVudC5wb2ludGVySWQpKTtcbiAgICB9LCBbXSk7XG4gICAgY29uc3QgcmVwbGFjZVBvaW50ZXIgPSBSZWFjdC51c2VDYWxsYmFjaygoZXZlbnQpID0+IHtcbiAgICAgICAgY2xlYXJQb2ludGVyKGV2ZW50KTtcbiAgICAgICAgZXZlbnQucGVyc2lzdCgpO1xuICAgICAgICBhY3RpdmVQb2ludGVycy5jdXJyZW50LnB1c2goZXZlbnQpO1xuICAgIH0sIFtjbGVhclBvaW50ZXJdKTtcbiAgICBjb25zdCBvblBvaW50ZXJEb3duID0gdXNlRXZlbnRDYWxsYmFjaygoZXZlbnQpID0+IHtcbiAgICAgICAgdmFyIF9hO1xuICAgICAgICBjb25zdCBwb2ludGVycyA9IGFjdGl2ZVBvaW50ZXJzLmN1cnJlbnQ7XG4gICAgICAgIGlmICghKChfYSA9IHpvb21XcmFwcGVyUmVmID09PSBudWxsIHx8IHpvb21XcmFwcGVyUmVmID09PSB2b2lkIDAgPyB2b2lkIDAgOiB6b29tV3JhcHBlclJlZi5jdXJyZW50KSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuY29udGFpbnMoZXZlbnQudGFyZ2V0KSkpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBpZiAoem9vbSA+IDEpIHtcbiAgICAgICAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHsgdGltZVN0YW1wIH0gPSBldmVudDtcbiAgICAgICAgaWYgKHBvaW50ZXJzLmxlbmd0aCA9PT0gMCAmJlxuICAgICAgICAgICAgdGltZVN0YW1wIC0gbGFzdFBvaW50ZXJEb3duLmN1cnJlbnQgPCAoZXZlbnQucG9pbnRlclR5cGUgPT09IFwidG91Y2hcIiA/IGRvdWJsZVRhcERlbGF5IDogZG91YmxlQ2xpY2tEZWxheSkpIHtcbiAgICAgICAgICAgIGxhc3RQb2ludGVyRG93bi5jdXJyZW50ID0gMDtcbiAgICAgICAgICAgIGNoYW5nZVpvb20oem9vbSAhPT0gbWF4Wm9vbSA/IHpvb20gKiBNYXRoLm1heChtYXhab29tICoqICgxIC8gZG91YmxlQ2xpY2tNYXhTdG9wcyksIHpvb21Jbk11bHRpcGxpZXIpIDogMSwgZmFsc2UsIC4uLnRyYW5zbGF0ZUNvb3JkaW5hdGVzKGV2ZW50KSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBsYXN0UG9pbnRlckRvd24uY3VycmVudCA9IHRpbWVTdGFtcDtcbiAgICAgICAgfVxuICAgICAgICByZXBsYWNlUG9pbnRlcihldmVudCk7XG4gICAgICAgIGlmIChwb2ludGVycy5sZW5ndGggPT09IDIpIHtcbiAgICAgICAgICAgIHBpbmNoWm9vbURpc3RhbmNlLmN1cnJlbnQgPSBkaXN0YW5jZShwb2ludGVyc1swXSwgcG9pbnRlcnNbMV0pO1xuICAgICAgICB9XG4gICAgfSk7XG4gICAgY29uc3Qgb25Qb2ludGVyTW92ZSA9IHVzZUV2ZW50Q2FsbGJhY2soKGV2ZW50KSA9PiB7XG4gICAgICAgIGNvbnN0IHBvaW50ZXJzID0gYWN0aXZlUG9pbnRlcnMuY3VycmVudDtcbiAgICAgICAgY29uc3QgYWN0aXZlUG9pbnRlciA9IHBvaW50ZXJzLmZpbmQoKHApID0+IHAucG9pbnRlcklkID09PSBldmVudC5wb2ludGVySWQpO1xuICAgICAgICBpZiAocG9pbnRlcnMubGVuZ3RoID09PSAyICYmIHBpbmNoWm9vbURpc3RhbmNlLmN1cnJlbnQpIHtcbiAgICAgICAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICAgICAgcmVwbGFjZVBvaW50ZXIoZXZlbnQpO1xuICAgICAgICAgICAgY29uc3QgY3VycmVudERpc3RhbmNlID0gZGlzdGFuY2UocG9pbnRlcnNbMF0sIHBvaW50ZXJzWzFdKTtcbiAgICAgICAgICAgIGNvbnN0IGRlbHRhID0gY3VycmVudERpc3RhbmNlIC0gcGluY2hab29tRGlzdGFuY2UuY3VycmVudDtcbiAgICAgICAgICAgIGlmIChNYXRoLmFicyhkZWx0YSkgPiAwKSB7XG4gICAgICAgICAgICAgICAgY2hhbmdlWm9vbSh6b29tICogKDEgKyBkZWx0YSAvIHBpbmNoWm9vbURpc3RhbmNlRmFjdG9yKSwgdHJ1ZSwgLi4ucG9pbnRlcnNcbiAgICAgICAgICAgICAgICAgICAgLm1hcCgoeCkgPT4gdHJhbnNsYXRlQ29vcmRpbmF0ZXMoeCkpXG4gICAgICAgICAgICAgICAgICAgIC5yZWR1Y2UoKGFjYywgY29vcmRpbmF0ZSkgPT4gY29vcmRpbmF0ZS5tYXAoKHgsIGkpID0+IGFjY1tpXSArIHggLyAyKSkpO1xuICAgICAgICAgICAgICAgIHBpbmNoWm9vbURpc3RhbmNlLmN1cnJlbnQgPSBjdXJyZW50RGlzdGFuY2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHpvb20gPiAxKSB7XG4gICAgICAgICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgICAgIGlmIChhY3RpdmVQb2ludGVyKSB7XG4gICAgICAgICAgICAgICAgaWYgKHBvaW50ZXJzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgICAgICAgICAgICAgICBjaGFuZ2VPZmZzZXRzKChhY3RpdmVQb2ludGVyLmNsaWVudFggLSBldmVudC5jbGllbnRYKSAvIHpvb20sIChhY3RpdmVQb2ludGVyLmNsaWVudFkgLSBldmVudC5jbGllbnRZKSAvIHpvb20pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXBsYWNlUG9pbnRlcihldmVudCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICBjb25zdCBvblBvaW50ZXJVcCA9IFJlYWN0LnVzZUNhbGxiYWNrKChldmVudCkgPT4ge1xuICAgICAgICBjb25zdCBwb2ludGVycyA9IGFjdGl2ZVBvaW50ZXJzLmN1cnJlbnQ7XG4gICAgICAgIGlmIChwb2ludGVycy5sZW5ndGggPT09IDIgJiYgcG9pbnRlcnMuZmluZCgocCkgPT4gcC5wb2ludGVySWQgPT09IGV2ZW50LnBvaW50ZXJJZCkpIHtcbiAgICAgICAgICAgIHBpbmNoWm9vbURpc3RhbmNlLmN1cnJlbnQgPSB1bmRlZmluZWQ7XG4gICAgICAgIH1cbiAgICAgICAgY2xlYXJQb2ludGVyKGV2ZW50KTtcbiAgICB9LCBbY2xlYXJQb2ludGVyXSk7XG4gICAgY29uc3QgY2xlYW51cFNlbnNvcnMgPSBSZWFjdC51c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgICAgIGNvbnN0IHBvaW50ZXJzID0gYWN0aXZlUG9pbnRlcnMuY3VycmVudDtcbiAgICAgICAgcG9pbnRlcnMuc3BsaWNlKDAsIHBvaW50ZXJzLmxlbmd0aCk7XG4gICAgICAgIGxhc3RQb2ludGVyRG93bi5jdXJyZW50ID0gMDtcbiAgICAgICAgcGluY2hab29tRGlzdGFuY2UuY3VycmVudCA9IHVuZGVmaW5lZDtcbiAgICB9LCBbXSk7XG4gICAgdXNlUG9pbnRlckV2ZW50cyhzdWJzY3JpYmVTZW5zb3JzLCBvblBvaW50ZXJEb3duLCBvblBvaW50ZXJNb3ZlLCBvblBvaW50ZXJVcCwgZGlzYWJsZWQpO1xuICAgIFJlYWN0LnVzZUVmZmVjdChjbGVhbnVwU2Vuc29ycywgW2dsb2JhbEluZGV4LCBjbGVhbnVwU2Vuc29yc10pO1xuICAgIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICAgIGlmICghZGlzYWJsZWQpIHtcbiAgICAgICAgICAgIHJldHVybiBjbGVhbnVwKGNsZWFudXBTZW5zb3JzLCBzdWJzY3JpYmVTZW5zb3JzKEVWRU5UX09OX0tFWV9ET1dOLCBvbktleURvd24pLCBzdWJzY3JpYmVTZW5zb3JzKEVWRU5UX09OX1dIRUVMLCBvbldoZWVsKSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuICgpID0+IHsgfTtcbiAgICB9LCBbZGlzYWJsZWQsIHN1YnNjcmliZVNlbnNvcnMsIGNsZWFudXBTZW5zb3JzLCBvbktleURvd24sIG9uV2hlZWxdKTtcbn1cblxuZnVuY3Rpb24gdXNlWm9vbVN0YXRlKGltYWdlUmVjdCwgbWF4Wm9vbSwgem9vbVdyYXBwZXJSZWYpIHtcbiAgICBjb25zdCBbem9vbSwgc2V0Wm9vbV0gPSBSZWFjdC51c2VTdGF0ZSgxKTtcbiAgICBjb25zdCBbb2Zmc2V0WCwgc2V0T2Zmc2V0WF0gPSBSZWFjdC51c2VTdGF0ZSgwKTtcbiAgICBjb25zdCBbb2Zmc2V0WSwgc2V0T2Zmc2V0WV0gPSBSZWFjdC51c2VTdGF0ZSgwKTtcbiAgICBjb25zdCBhbmltYXRlID0gdXNlWm9vbUFuaW1hdGlvbih6b29tLCBvZmZzZXRYLCBvZmZzZXRZLCB6b29tV3JhcHBlclJlZik7XG4gICAgY29uc3QgeyBjdXJyZW50U2xpZGUsIGdsb2JhbEluZGV4IH0gPSB1c2VMaWdodGJveFN0YXRlKCk7XG4gICAgY29uc3QgeyBjb250YWluZXJSZWN0LCBzbGlkZVJlY3QgfSA9IHVzZUNvbnRyb2xsZXIoKTtcbiAgICBjb25zdCB7IHpvb21Jbk11bHRpcGxpZXIgfSA9IHVzZVpvb21Qcm9wcygpO1xuICAgIGNvbnN0IGN1cnJlbnRTb3VyY2UgPSBjdXJyZW50U2xpZGUgJiYgaXNJbWFnZVNsaWRlKGN1cnJlbnRTbGlkZSkgPyBjdXJyZW50U2xpZGUuc3JjIDogdW5kZWZpbmVkO1xuICAgIGNvbnN0IGRpc2FibGVkID0gIWN1cnJlbnRTb3VyY2UgfHwgISh6b29tV3JhcHBlclJlZiA9PT0gbnVsbCB8fCB6b29tV3JhcHBlclJlZiA9PT0gdm9pZCAwID8gdm9pZCAwIDogem9vbVdyYXBwZXJSZWYuY3VycmVudCk7XG4gICAgdXNlTGF5b3V0RWZmZWN0KCgpID0+IHtcbiAgICAgICAgc2V0Wm9vbSgxKTtcbiAgICAgICAgc2V0T2Zmc2V0WCgwKTtcbiAgICAgICAgc2V0T2Zmc2V0WSgwKTtcbiAgICB9LCBbZ2xvYmFsSW5kZXgsIGN1cnJlbnRTb3VyY2VdKTtcbiAgICBjb25zdCBjaGFuZ2VPZmZzZXRzID0gUmVhY3QudXNlQ2FsbGJhY2soKGR4LCBkeSwgdGFyZ2V0Wm9vbSkgPT4ge1xuICAgICAgICBjb25zdCBuZXdab29tID0gdGFyZ2V0Wm9vbSB8fCB6b29tO1xuICAgICAgICBjb25zdCBuZXdPZmZzZXRYID0gb2Zmc2V0WCAtIChkeCB8fCAwKTtcbiAgICAgICAgY29uc3QgbmV3T2Zmc2V0WSA9IG9mZnNldFkgLSAoZHkgfHwgMCk7XG4gICAgICAgIGNvbnN0IG1heE9mZnNldFggPSAoaW1hZ2VSZWN0LndpZHRoICogbmV3Wm9vbSAtIHNsaWRlUmVjdC53aWR0aCkgLyAyIC8gbmV3Wm9vbTtcbiAgICAgICAgY29uc3QgbWF4T2Zmc2V0WSA9IChpbWFnZVJlY3QuaGVpZ2h0ICogbmV3Wm9vbSAtIHNsaWRlUmVjdC5oZWlnaHQpIC8gMiAvIG5ld1pvb207XG4gICAgICAgIHNldE9mZnNldFgoTWF0aC5taW4oTWF0aC5hYnMobmV3T2Zmc2V0WCksIE1hdGgubWF4KG1heE9mZnNldFgsIDApKSAqIE1hdGguc2lnbihuZXdPZmZzZXRYKSk7XG4gICAgICAgIHNldE9mZnNldFkoTWF0aC5taW4oTWF0aC5hYnMobmV3T2Zmc2V0WSksIE1hdGgubWF4KG1heE9mZnNldFksIDApKSAqIE1hdGguc2lnbihuZXdPZmZzZXRZKSk7XG4gICAgfSwgW3pvb20sIG9mZnNldFgsIG9mZnNldFksIHNsaWRlUmVjdCwgaW1hZ2VSZWN0LndpZHRoLCBpbWFnZVJlY3QuaGVpZ2h0XSk7XG4gICAgY29uc3QgY2hhbmdlWm9vbSA9IFJlYWN0LnVzZUNhbGxiYWNrKCh0YXJnZXRab29tLCByYXBpZCwgZHgsIGR5KSA9PiB7XG4gICAgICAgIGNvbnN0IG5ld1pvb20gPSByb3VuZChNYXRoLm1pbihNYXRoLm1heCh0YXJnZXRab29tICsgMC4wMDEgPCBtYXhab29tID8gdGFyZ2V0Wm9vbSA6IG1heFpvb20sIDEpLCBtYXhab29tKSwgNSk7XG4gICAgICAgIGlmIChuZXdab29tID09PSB6b29tKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBpZiAoIXJhcGlkKSB7XG4gICAgICAgICAgICBhbmltYXRlKCk7XG4gICAgICAgIH1cbiAgICAgICAgY2hhbmdlT2Zmc2V0cyhkeCA/IGR4ICogKDEgLyB6b29tIC0gMSAvIG5ld1pvb20pIDogMCwgZHkgPyBkeSAqICgxIC8gem9vbSAtIDEgLyBuZXdab29tKSA6IDAsIG5ld1pvb20pO1xuICAgICAgICBzZXRab29tKG5ld1pvb20pO1xuICAgIH0sIFt6b29tLCBtYXhab29tLCBjaGFuZ2VPZmZzZXRzLCBhbmltYXRlXSk7XG4gICAgY29uc3QgaGFuZGxlQ29udHJvbGxlclJlY3RDaGFuZ2UgPSB1c2VFdmVudENhbGxiYWNrKCgpID0+IHtcbiAgICAgICAgaWYgKHpvb20gPiAxKSB7XG4gICAgICAgICAgICBpZiAoem9vbSA+IG1heFpvb20pIHtcbiAgICAgICAgICAgICAgICBjaGFuZ2Vab29tKG1heFpvb20sIHRydWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2hhbmdlT2Zmc2V0cygpO1xuICAgICAgICB9XG4gICAgfSk7XG4gICAgdXNlTGF5b3V0RWZmZWN0KGhhbmRsZUNvbnRyb2xsZXJSZWN0Q2hhbmdlLCBbY29udGFpbmVyUmVjdC53aWR0aCwgY29udGFpbmVyUmVjdC5oZWlnaHQsIGhhbmRsZUNvbnRyb2xsZXJSZWN0Q2hhbmdlXSk7XG4gICAgY29uc3Qgem9vbUluID0gUmVhY3QudXNlQ2FsbGJhY2soKCkgPT4gY2hhbmdlWm9vbSh6b29tICogem9vbUluTXVsdGlwbGllciksIFt6b29tLCB6b29tSW5NdWx0aXBsaWVyLCBjaGFuZ2Vab29tXSk7XG4gICAgY29uc3Qgem9vbU91dCA9IFJlYWN0LnVzZUNhbGxiYWNrKCgpID0+IGNoYW5nZVpvb20oem9vbSAvIHpvb21Jbk11bHRpcGxpZXIpLCBbem9vbSwgem9vbUluTXVsdGlwbGllciwgY2hhbmdlWm9vbV0pO1xuICAgIHJldHVybiB7IHpvb20sIG9mZnNldFgsIG9mZnNldFksIGRpc2FibGVkLCBjaGFuZ2VPZmZzZXRzLCBjaGFuZ2Vab29tLCB6b29tSW4sIHpvb21PdXQgfTtcbn1cblxuY29uc3QgWm9vbUNvbnRyb2xsZXJDb250ZXh0ID0gUmVhY3QuY3JlYXRlQ29udGV4dChudWxsKTtcbmNvbnN0IHVzZVpvb20gPSBtYWtlVXNlQ29udGV4dChcInVzZVpvb21cIiwgXCJab29tQ29udHJvbGxlckNvbnRleHRcIiwgWm9vbUNvbnRyb2xsZXJDb250ZXh0KTtcbmZ1bmN0aW9uIFpvb21Db250ZXh0UHJvdmlkZXIoeyBjaGlsZHJlbiB9KSB7XG4gICAgY29uc3QgW3pvb21XcmFwcGVyLCBzZXRab29tV3JhcHBlcl0gPSBSZWFjdC51c2VTdGF0ZSgpO1xuICAgIGNvbnN0IHsgc2xpZGVSZWN0IH0gPSB1c2VDb250cm9sbGVyKCk7XG4gICAgY29uc3QgeyBpbWFnZVJlY3QsIG1heFpvb20gfSA9IHVzZVpvb21JbWFnZVJlY3Qoc2xpZGVSZWN0LCB6b29tV3JhcHBlciA9PT0gbnVsbCB8fCB6b29tV3JhcHBlciA9PT0gdm9pZCAwID8gdm9pZCAwIDogem9vbVdyYXBwZXIuaW1hZ2VEaW1lbnNpb25zKTtcbiAgICBjb25zdCB7IHpvb20sIG9mZnNldFgsIG9mZnNldFksIGRpc2FibGVkLCBjaGFuZ2Vab29tLCBjaGFuZ2VPZmZzZXRzLCB6b29tSW4sIHpvb21PdXQgfSA9IHVzZVpvb21TdGF0ZShpbWFnZVJlY3QsIG1heFpvb20sIHpvb21XcmFwcGVyID09PSBudWxsIHx8IHpvb21XcmFwcGVyID09PSB2b2lkIDAgPyB2b2lkIDAgOiB6b29tV3JhcHBlci56b29tV3JhcHBlclJlZik7XG4gICAgdXNlWm9vbUNhbGxiYWNrKHpvb20sIGRpc2FibGVkKTtcbiAgICB1c2Vab29tU2Vuc29ycyh6b29tLCBtYXhab29tLCBkaXNhYmxlZCwgY2hhbmdlWm9vbSwgY2hhbmdlT2Zmc2V0cywgem9vbVdyYXBwZXIgPT09IG51bGwgfHwgem9vbVdyYXBwZXIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHpvb21XcmFwcGVyLnpvb21XcmFwcGVyUmVmKTtcbiAgICBjb25zdCB6b29tUmVmID0gUmVhY3QudXNlTWVtbygoKSA9PiAoeyB6b29tLCBtYXhab29tLCBvZmZzZXRYLCBvZmZzZXRZLCBkaXNhYmxlZCwgem9vbUluLCB6b29tT3V0LCBjaGFuZ2Vab29tIH0pLCBbem9vbSwgbWF4Wm9vbSwgb2Zmc2V0WCwgb2Zmc2V0WSwgZGlzYWJsZWQsIHpvb21Jbiwgem9vbU91dCwgY2hhbmdlWm9vbV0pO1xuICAgIFJlYWN0LnVzZUltcGVyYXRpdmVIYW5kbGUodXNlWm9vbVByb3BzKCkucmVmLCAoKSA9PiB6b29tUmVmLCBbem9vbVJlZl0pO1xuICAgIGNvbnN0IGNvbnRleHQgPSBSZWFjdC51c2VNZW1vKCgpID0+ICh7IC4uLnpvb21SZWYsIHNldFpvb21XcmFwcGVyIH0pLCBbem9vbVJlZiwgc2V0Wm9vbVdyYXBwZXJdKTtcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChab29tQ29udHJvbGxlckNvbnRleHQuUHJvdmlkZXIsIHsgdmFsdWU6IGNvbnRleHQgfSwgY2hpbGRyZW4pO1xufVxuXG5jb25zdCBab29tSW5JY29uID0gY3JlYXRlSWNvbihcIlpvb21JblwiLCBSZWFjdC5jcmVhdGVFbGVtZW50KFJlYWN0LkZyYWdtZW50LCBudWxsLFxuICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJwYXRoXCIsIHsgZDogXCJNMTUuNSAxNGgtLjc5bC0uMjgtLjI3QzE1LjQxIDEyLjU5IDE2IDExLjExIDE2IDkuNSAxNiA1LjkxIDEzLjA5IDMgOS41IDNTMyA1LjkxIDMgOS41IDUuOTEgMTYgOS41IDE2YzEuNjEgMCAzLjA5LS41OSA0LjIzLTEuNTdsLjI3LjI4di43OWw1IDQuOTlMMjAuNDkgMTlsLTQuOTktNXptLTYgMEM3LjAxIDE0IDUgMTEuOTkgNSA5LjVTNy4wMSA1IDkuNSA1IDE0IDcuMDEgMTQgOS41IDExLjk5IDE0IDkuNSAxNHpcIiB9KSxcbiAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwicGF0aFwiLCB7IGQ6IFwiTTEyIDEwaC0ydjJIOXYtMkg3VjloMlY3aDF2MmgydjF6XCIgfSkpKTtcbmNvbnN0IFpvb21PdXRJY29uID0gY3JlYXRlSWNvbihcIlpvb21PdXRcIiwgUmVhY3QuY3JlYXRlRWxlbWVudChcInBhdGhcIiwgeyBkOiBcIk0xNS41IDE0aC0uNzlsLS4yOC0uMjdDMTUuNDEgMTIuNTkgMTYgMTEuMTEgMTYgOS41IDE2IDUuOTEgMTMuMDkgMyA5LjUgM1MzIDUuOTEgMyA5LjUgNS45MSAxNiA5LjUgMTZjMS42MSAwIDMuMDktLjU5IDQuMjMtMS41N2wuMjcuMjh2Ljc5bDUgNC45OUwyMC40OSAxOWwtNC45OS01em0tNiAwQzcuMDEgMTQgNSAxMS45OSA1IDkuNVM3LjAxIDUgOS41IDUgMTQgNy4wMSAxNCA5LjUgMTEuOTkgMTQgOS41IDE0ek03IDloNXYxSDd6XCIgfSkpO1xuY29uc3QgWm9vbUJ1dHRvbiA9IFJlYWN0LmZvcndhcmRSZWYoZnVuY3Rpb24gWm9vbUJ1dHRvbih7IHpvb21Jbiwgb25Mb3NlRm9jdXMgfSwgcmVmKSB7XG4gICAgY29uc3Qgd2FzRW5hYmxlZCA9IFJlYWN0LnVzZVJlZihmYWxzZSk7XG4gICAgY29uc3Qgd2FzRm9jdXNlZCA9IFJlYWN0LnVzZVJlZihmYWxzZSk7XG4gICAgY29uc3QgeyB6b29tLCBtYXhab29tLCB6b29tSW46IHpvb21JbkNhbGxiYWNrLCB6b29tT3V0OiB6b29tT3V0Q2FsbGJhY2ssIGRpc2FibGVkOiB6b29tRGlzYWJsZWQgfSA9IHVzZVpvb20oKTtcbiAgICBjb25zdCB7IHJlbmRlciB9ID0gdXNlTGlnaHRib3hQcm9wcygpO1xuICAgIGNvbnN0IGRpc2FibGVkID0gem9vbURpc2FibGVkIHx8ICh6b29tSW4gPyB6b29tID49IG1heFpvb20gOiB6b29tIDw9IDEpO1xuICAgIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICAgIGlmIChkaXNhYmxlZCAmJiB3YXNFbmFibGVkLmN1cnJlbnQgJiYgd2FzRm9jdXNlZC5jdXJyZW50KSB7XG4gICAgICAgICAgICBvbkxvc2VGb2N1cygpO1xuICAgICAgICB9XG4gICAgICAgIGlmICghZGlzYWJsZWQpIHtcbiAgICAgICAgICAgIHdhc0VuYWJsZWQuY3VycmVudCA9IHRydWU7XG4gICAgICAgIH1cbiAgICB9LCBbZGlzYWJsZWQsIG9uTG9zZUZvY3VzXSk7XG4gICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KEljb25CdXR0b24sIHsgcmVmOiByZWYsIGRpc2FibGVkOiBkaXNhYmxlZCwgbGFiZWw6IHpvb21JbiA/IFwiWm9vbSBpblwiIDogXCJab29tIG91dFwiLCBpY29uOiB6b29tSW4gPyBab29tSW5JY29uIDogWm9vbU91dEljb24sIHJlbmRlckljb246IHpvb21JbiA/IHJlbmRlci5pY29uWm9vbUluIDogcmVuZGVyLmljb25ab29tT3V0LCBvbkNsaWNrOiB6b29tSW4gPyB6b29tSW5DYWxsYmFjayA6IHpvb21PdXRDYWxsYmFjaywgb25Gb2N1czogKCkgPT4ge1xuICAgICAgICAgICAgd2FzRm9jdXNlZC5jdXJyZW50ID0gdHJ1ZTtcbiAgICAgICAgfSwgb25CbHVyOiAoKSA9PiB7XG4gICAgICAgICAgICB3YXNGb2N1c2VkLmN1cnJlbnQgPSBmYWxzZTtcbiAgICAgICAgfSB9KSk7XG59KTtcblxuZnVuY3Rpb24gWm9vbUJ1dHRvbnNHcm91cCgpIHtcbiAgICBjb25zdCB6b29tSW5SZWYgPSBSZWFjdC51c2VSZWYobnVsbCk7XG4gICAgY29uc3Qgem9vbU91dFJlZiA9IFJlYWN0LnVzZVJlZihudWxsKTtcbiAgICBjb25zdCB7IGZvY3VzIH0gPSB1c2VDb250cm9sbGVyKCk7XG4gICAgY29uc3QgZm9jdXNTaWJsaW5nID0gUmVhY3QudXNlQ2FsbGJhY2soKHNpYmxpbmcpID0+IHtcbiAgICAgICAgdmFyIF9hLCBfYjtcbiAgICAgICAgaWYgKCEoKF9hID0gc2libGluZy5jdXJyZW50KSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuZGlzYWJsZWQpKSB7XG4gICAgICAgICAgICAoX2IgPSBzaWJsaW5nLmN1cnJlbnQpID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi5mb2N1cygpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgZm9jdXMoKTtcbiAgICAgICAgfVxuICAgIH0sIFtmb2N1c10pO1xuICAgIGNvbnN0IGZvY3VzWm9vbUluID0gUmVhY3QudXNlQ2FsbGJhY2soKCkgPT4gZm9jdXNTaWJsaW5nKHpvb21JblJlZiksIFtmb2N1c1NpYmxpbmddKTtcbiAgICBjb25zdCBmb2N1c1pvb21PdXQgPSBSZWFjdC51c2VDYWxsYmFjaygoKSA9PiBmb2N1c1NpYmxpbmcoem9vbU91dFJlZiksIFtmb2N1c1NpYmxpbmddKTtcbiAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoUmVhY3QuRnJhZ21lbnQsIG51bGwsXG4gICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoWm9vbUJ1dHRvbiwgeyB6b29tSW46IHRydWUsIHJlZjogem9vbUluUmVmLCBvbkxvc2VGb2N1czogZm9jdXNab29tT3V0IH0pLFxuICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFpvb21CdXR0b24sIHsgcmVmOiB6b29tT3V0UmVmLCBvbkxvc2VGb2N1czogZm9jdXNab29tSW4gfSkpKTtcbn1cblxuZnVuY3Rpb24gWm9vbVRvb2xiYXJDb250cm9sKCkge1xuICAgIGNvbnN0IHsgcmVuZGVyIH0gPSB1c2VMaWdodGJveFByb3BzKCk7XG4gICAgY29uc3Qgem9vbVJlZiA9IHVzZVpvb20oKTtcbiAgICBpZiAocmVuZGVyLmJ1dHRvblpvb20pIHtcbiAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUmVhY3QuRnJhZ21lbnQsIG51bGwsIHJlbmRlci5idXR0b25ab29tKHpvb21SZWYpKTtcbiAgICB9XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoWm9vbUJ1dHRvbnNHcm91cCwgbnVsbCk7XG59XG5cbmZ1bmN0aW9uIGlzUmVzcG9uc2l2ZUltYWdlU2xpZGUoc2xpZGUpIHtcbiAgICB2YXIgX2E7XG4gICAgcmV0dXJuICgoKF9hID0gc2xpZGUuc3JjU2V0KSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EubGVuZ3RoKSB8fCAwKSA+IDA7XG59XG5mdW5jdGlvbiByZWR1Y2VyKHsgY3VycmVudCwgcHJlbG9hZCB9LCB7IHR5cGUsIHNvdXJjZSB9KSB7XG4gICAgc3dpdGNoICh0eXBlKSB7XG4gICAgICAgIGNhc2UgXCJmZXRjaFwiOlxuICAgICAgICAgICAgaWYgKCFjdXJyZW50KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHsgY3VycmVudDogc291cmNlIH07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4geyBjdXJyZW50LCBwcmVsb2FkOiBzb3VyY2UgfTtcbiAgICAgICAgY2FzZSBcImRvbmVcIjpcbiAgICAgICAgICAgIGlmIChzb3VyY2UgPT09IHByZWxvYWQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4geyBjdXJyZW50OiBzb3VyY2UgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB7IGN1cnJlbnQsIHByZWxvYWQgfTtcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihVTktOT1dOX0FDVElPTl9UWVBFKTtcbiAgICB9XG59XG5mdW5jdGlvbiBSZXNwb25zaXZlSW1hZ2UocHJvcHMpIHtcbiAgICB2YXIgX2EsIF9iO1xuICAgIGNvbnN0IFt7IGN1cnJlbnQsIHByZWxvYWQgfSwgZGlzcGF0Y2hdID0gUmVhY3QudXNlUmVkdWNlcihyZWR1Y2VyLCB7fSk7XG4gICAgY29uc3QgeyBzbGlkZTogaW1hZ2UsIHJlY3QsIGltYWdlRml0LCByZW5kZXIgfSA9IHByb3BzO1xuICAgIGNvbnN0IHNyY1NldCA9IGltYWdlLnNyY1NldC5zb3J0KChhLCBiKSA9PiBhLndpZHRoIC0gYi53aWR0aCk7XG4gICAgY29uc3Qgd2lkdGggPSAoX2EgPSBpbWFnZS53aWR0aCkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogc3JjU2V0W3NyY1NldC5sZW5ndGggLSAxXS53aWR0aDtcbiAgICBjb25zdCBoZWlnaHQgPSAoX2IgPSBpbWFnZS5oZWlnaHQpICE9PSBudWxsICYmIF9iICE9PSB2b2lkIDAgPyBfYiA6IHNyY1NldFtzcmNTZXQubGVuZ3RoIC0gMV0uaGVpZ2h0O1xuICAgIGNvbnN0IGNvdmVyID0gaXNJbWFnZUZpdENvdmVyKGltYWdlLCBpbWFnZUZpdCk7XG4gICAgY29uc3QgbWF4V2lkdGggPSBNYXRoLm1heCguLi5zcmNTZXQubWFwKCh4KSA9PiB4LndpZHRoKSk7XG4gICAgY29uc3QgdGFyZ2V0V2lkdGggPSBNYXRoLm1pbigoY292ZXIgPyBNYXRoLm1heCA6IE1hdGgubWluKShyZWN0LndpZHRoLCB3aWR0aCAqIChyZWN0LmhlaWdodCAvIGhlaWdodCkpLCBtYXhXaWR0aCk7XG4gICAgY29uc3QgcGl4ZWxEZW5zaXR5ID0gZGV2aWNlUGl4ZWxSYXRpbygpO1xuICAgIGNvbnN0IGhhbmRsZVJlc2l6ZSA9IHVzZUV2ZW50Q2FsbGJhY2soKCkgPT4ge1xuICAgICAgICB2YXIgX2E7XG4gICAgICAgIGNvbnN0IHRhcmdldFNvdXJjZSA9IChfYSA9IHNyY1NldC5maW5kKCh4KSA9PiB4LndpZHRoID49IHRhcmdldFdpZHRoICogcGl4ZWxEZW5zaXR5KSkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogc3JjU2V0W3NyY1NldC5sZW5ndGggLSAxXTtcbiAgICAgICAgaWYgKCFjdXJyZW50IHx8IHNyY1NldC5maW5kSW5kZXgoKHgpID0+IHguc3JjID09PSBjdXJyZW50KSA8IHNyY1NldC5maW5kSW5kZXgoKHgpID0+IHggPT09IHRhcmdldFNvdXJjZSkpIHtcbiAgICAgICAgICAgIGRpc3BhdGNoKHsgdHlwZTogXCJmZXRjaFwiLCBzb3VyY2U6IHRhcmdldFNvdXJjZS5zcmMgfSk7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICB1c2VMYXlvdXRFZmZlY3QoaGFuZGxlUmVzaXplLCBbcmVjdC53aWR0aCwgcmVjdC5oZWlnaHQsIHBpeGVsRGVuc2l0eSwgaGFuZGxlUmVzaXplXSk7XG4gICAgY29uc3QgaGFuZGxlUHJlbG9hZCA9IHVzZUV2ZW50Q2FsbGJhY2soKGN1cnJlbnRQcmVsb2FkKSA9PiBkaXNwYXRjaCh7IHR5cGU6IFwiZG9uZVwiLCBzb3VyY2U6IGN1cnJlbnRQcmVsb2FkIH0pKTtcbiAgICBjb25zdCBzdHlsZSA9IHtcbiAgICAgICAgV2Via2l0VHJhbnNmb3JtOiBcInRyYW5zbGF0ZVooMClcIixcbiAgICB9O1xuICAgIGlmICghY292ZXIpIHtcbiAgICAgICAgT2JqZWN0LmFzc2lnbihzdHlsZSwgcmVjdC53aWR0aCAvIHJlY3QuaGVpZ2h0IDwgd2lkdGggLyBoZWlnaHQgPyB7IHdpZHRoOiBcIjEwMCVcIiwgaGVpZ2h0OiBcImF1dG9cIiB9IDogeyB3aWR0aDogXCJhdXRvXCIsIGhlaWdodDogXCIxMDAlXCIgfSk7XG4gICAgfVxuICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChSZWFjdC5GcmFnbWVudCwgbnVsbCxcbiAgICAgICAgcHJlbG9hZCAmJiBwcmVsb2FkICE9PSBjdXJyZW50ICYmIChSZWFjdC5jcmVhdGVFbGVtZW50KEltYWdlU2xpZGUsIHsga2V5OiBcInByZWxvYWRcIiwgLi4ucHJvcHMsIHNsaWRlOiB7IC4uLmltYWdlLCBzcmM6IHByZWxvYWQsIHNyY1NldDogdW5kZWZpbmVkIH0sIHN0eWxlOiB7IHBvc2l0aW9uOiBcImFic29sdXRlXCIsIHZpc2liaWxpdHk6IFwiaGlkZGVuXCIsIC4uLnN0eWxlIH0sIG9uTG9hZDogKCkgPT4gaGFuZGxlUHJlbG9hZChwcmVsb2FkKSwgcmVuZGVyOiB7XG4gICAgICAgICAgICAgICAgLi4ucmVuZGVyLFxuICAgICAgICAgICAgICAgIGljb25Mb2FkaW5nOiAoKSA9PiBudWxsLFxuICAgICAgICAgICAgICAgIGljb25FcnJvcjogKCkgPT4gbnVsbCxcbiAgICAgICAgICAgIH0gfSkpLFxuICAgICAgICBjdXJyZW50ICYmIChSZWFjdC5jcmVhdGVFbGVtZW50KEltYWdlU2xpZGUsIHsga2V5OiBcImN1cnJlbnRcIiwgLi4ucHJvcHMsIHNsaWRlOiB7IC4uLmltYWdlLCBzcmM6IGN1cnJlbnQsIHNyY1NldDogdW5kZWZpbmVkIH0sIHN0eWxlOiBzdHlsZSB9KSkpKTtcbn1cblxuZnVuY3Rpb24gWm9vbVdyYXBwZXIoeyByZW5kZXIsIHNsaWRlLCBvZmZzZXQsIHJlY3QgfSkge1xuICAgIHZhciBfYTtcbiAgICBjb25zdCBbaW1hZ2VEaW1lbnNpb25zLCBzZXRJbWFnZURpbWVuc2lvbnNdID0gUmVhY3QudXNlU3RhdGUoKTtcbiAgICBjb25zdCB6b29tV3JhcHBlclJlZiA9IFJlYWN0LnVzZVJlZihudWxsKTtcbiAgICBjb25zdCB7IHpvb20sIG1heFpvb20sIG9mZnNldFgsIG9mZnNldFksIHNldFpvb21XcmFwcGVyIH0gPSB1c2Vab29tKCk7XG4gICAgY29uc3QgeyBjYXJvdXNlbCwgb24gfSA9IHVzZUxpZ2h0Ym94UHJvcHMoKTtcbiAgICBjb25zdCB7IGN1cnJlbnRJbmRleCB9ID0gdXNlTGlnaHRib3hTdGF0ZSgpO1xuICAgIHVzZUxheW91dEVmZmVjdCgoKSA9PiB7XG4gICAgICAgIGlmIChvZmZzZXQgPT09IDApIHtcbiAgICAgICAgICAgIHNldFpvb21XcmFwcGVyKHsgem9vbVdyYXBwZXJSZWYsIGltYWdlRGltZW5zaW9ucyB9KTtcbiAgICAgICAgICAgIHJldHVybiAoKSA9PiBzZXRab29tV3JhcHBlcih1bmRlZmluZWQpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiAoKSA9PiB7IH07XG4gICAgfSwgW29mZnNldCwgaW1hZ2VEaW1lbnNpb25zLCBzZXRab29tV3JhcHBlcl0pO1xuICAgIGxldCByZW5kZXJlZCA9IChfYSA9IHJlbmRlci5zbGlkZSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmNhbGwocmVuZGVyLCB7IHNsaWRlLCBvZmZzZXQsIHJlY3QsIHpvb20sIG1heFpvb20gfSk7XG4gICAgaWYgKCFyZW5kZXJlZCAmJiBpc0ltYWdlU2xpZGUoc2xpZGUpKSB7XG4gICAgICAgIGNvbnN0IHNsaWRlUHJvcHMgPSB7XG4gICAgICAgICAgICBzbGlkZSxcbiAgICAgICAgICAgIG9mZnNldCxcbiAgICAgICAgICAgIHJlY3QsXG4gICAgICAgICAgICByZW5kZXIsXG4gICAgICAgICAgICBpbWFnZUZpdDogY2Fyb3VzZWwuaW1hZ2VGaXQsXG4gICAgICAgICAgICBpbWFnZVByb3BzOiBjYXJvdXNlbC5pbWFnZVByb3BzLFxuICAgICAgICAgICAgb25DbGljazogb2Zmc2V0ID09PSAwID8gKCkgPT4geyB2YXIgX2E7IHJldHVybiAoX2EgPSBvbi5jbGljaykgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmNhbGwob24sIHsgaW5kZXg6IGN1cnJlbnRJbmRleCB9KTsgfSA6IHVuZGVmaW5lZCxcbiAgICAgICAgfTtcbiAgICAgICAgcmVuZGVyZWQgPSBpc1Jlc3BvbnNpdmVJbWFnZVNsaWRlKHNsaWRlKSA/IChSZWFjdC5jcmVhdGVFbGVtZW50KFJlc3BvbnNpdmVJbWFnZSwgeyBrZXk6IHNsaWRlLnNyYywgLi4uc2xpZGVQcm9wcywgc2xpZGU6IHNsaWRlLCByZWN0OiBvZmZzZXQgPT09IDAgPyB7IHdpZHRoOiByZWN0LndpZHRoICogem9vbSwgaGVpZ2h0OiByZWN0LmhlaWdodCAqIHpvb20gfSA6IHJlY3QgfSkpIDogKFJlYWN0LmNyZWF0ZUVsZW1lbnQoSW1hZ2VTbGlkZSwgeyBrZXk6IHNsaWRlLnNyYywgb25Mb2FkOiAoaW1nKSA9PiBzZXRJbWFnZURpbWVuc2lvbnMoeyB3aWR0aDogaW1nLm5hdHVyYWxXaWR0aCwgaGVpZ2h0OiBpbWcubmF0dXJhbEhlaWdodCB9KSwgLi4uc2xpZGVQcm9wcyB9KSk7XG4gICAgfVxuICAgIGlmICghcmVuZGVyZWQpXG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IHJlZjogem9vbVdyYXBwZXJSZWYsIGNsYXNzTmFtZTogY2xzeChjc3NDbGFzcyhDTEFTU19GVUxMU0laRSksIGNzc0NsYXNzKENMQVNTX0ZMRVhfQ0VOVEVSKSwgY3NzQ2xhc3MoQ0xBU1NfU0xJREVfV1JBUFBFUikpLCBzdHlsZTogb2Zmc2V0ID09PSAwID8geyB0cmFuc2Zvcm06IGBzY2FsZSgke3pvb219KSB0cmFuc2xhdGVYKCR7b2Zmc2V0WH1weCkgdHJhbnNsYXRlWSgke29mZnNldFl9cHgpYCB9IDogdW5kZWZpbmVkIH0sIHJlbmRlcmVkKSk7XG59XG5cbmNvbnN0IFpvb20gPSAoeyBhdWdtZW50LCBhZGRNb2R1bGUgfSkgPT4ge1xuICAgIGF1Z21lbnQoKHsgem9vbTogem9vbVByb3BzLCB0b29sYmFyLCByZW5kZXIsIGNvbnRyb2xsZXIsIC4uLnJlc3RQcm9wcyB9KSA9PiB7XG4gICAgICAgIGNvbnN0IHpvb20gPSByZXNvbHZlWm9vbVByb3BzKHpvb21Qcm9wcyk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICB6b29tLFxuICAgICAgICAgICAgdG9vbGJhcjogYWRkVG9vbGJhckJ1dHRvbih0b29sYmFyLCBQTFVHSU5fWk9PTSwgUmVhY3QuY3JlYXRlRWxlbWVudChab29tVG9vbGJhckNvbnRyb2wsIG51bGwpKSxcbiAgICAgICAgICAgIHJlbmRlcjoge1xuICAgICAgICAgICAgICAgIC4uLnJlbmRlcixcbiAgICAgICAgICAgICAgICBzbGlkZTogKHByb3BzKSA9PiB7IHZhciBfYTsgcmV0dXJuIGlzSW1hZ2VTbGlkZShwcm9wcy5zbGlkZSkgPyBSZWFjdC5jcmVhdGVFbGVtZW50KFpvb21XcmFwcGVyLCB7IHJlbmRlcjogcmVuZGVyLCAuLi5wcm9wcyB9KSA6IChfYSA9IHJlbmRlci5zbGlkZSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmNhbGwocmVuZGVyLCBwcm9wcyk7IH0sXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgY29udHJvbGxlcjogeyAuLi5jb250cm9sbGVyLCBwcmV2ZW50RGVmYXVsdFdoZWVsWTogem9vbS5zY3JvbGxUb1pvb20gfSxcbiAgICAgICAgICAgIC4uLnJlc3RQcm9wcyxcbiAgICAgICAgfTtcbiAgICB9KTtcbiAgICBhZGRNb2R1bGUoY3JlYXRlTW9kdWxlKFBMVUdJTl9aT09NLCBab29tQ29udGV4dFByb3ZpZGVyKSk7XG59O1xuXG5leHBvcnQgeyBab29tIGFzIGRlZmF1bHQgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/yet-another-react-lightbox/dist/plugins/zoom/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/yet-another-react-lightbox/dist/types.js":
/*!***************************************************************!*\
  !*** ./node_modules/yet-another-react-lightbox/dist/types.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ACTION_CLOSE: () => (/* binding */ ACTION_CLOSE),\n/* harmony export */   ACTION_NEXT: () => (/* binding */ ACTION_NEXT),\n/* harmony export */   ACTION_PREV: () => (/* binding */ ACTION_PREV),\n/* harmony export */   ACTION_SWIPE: () => (/* binding */ ACTION_SWIPE),\n/* harmony export */   ACTIVE_SLIDE_COMPLETE: () => (/* binding */ ACTIVE_SLIDE_COMPLETE),\n/* harmony export */   ACTIVE_SLIDE_ERROR: () => (/* binding */ ACTIVE_SLIDE_ERROR),\n/* harmony export */   ACTIVE_SLIDE_LOADING: () => (/* binding */ ACTIVE_SLIDE_LOADING),\n/* harmony export */   ACTIVE_SLIDE_PLAYING: () => (/* binding */ ACTIVE_SLIDE_PLAYING),\n/* harmony export */   CLASS_FLEX_CENTER: () => (/* binding */ CLASS_FLEX_CENTER),\n/* harmony export */   CLASS_FULLSIZE: () => (/* binding */ CLASS_FULLSIZE),\n/* harmony export */   CLASS_NO_SCROLL: () => (/* binding */ CLASS_NO_SCROLL),\n/* harmony export */   CLASS_NO_SCROLL_PADDING: () => (/* binding */ CLASS_NO_SCROLL_PADDING),\n/* harmony export */   CLASS_SLIDE_WRAPPER: () => (/* binding */ CLASS_SLIDE_WRAPPER),\n/* harmony export */   ELEMENT_BUTTON: () => (/* binding */ ELEMENT_BUTTON),\n/* harmony export */   ELEMENT_ICON: () => (/* binding */ ELEMENT_ICON),\n/* harmony export */   EVENT_ON_KEY_DOWN: () => (/* binding */ EVENT_ON_KEY_DOWN),\n/* harmony export */   EVENT_ON_KEY_UP: () => (/* binding */ EVENT_ON_KEY_UP),\n/* harmony export */   EVENT_ON_POINTER_CANCEL: () => (/* binding */ EVENT_ON_POINTER_CANCEL),\n/* harmony export */   EVENT_ON_POINTER_DOWN: () => (/* binding */ EVENT_ON_POINTER_DOWN),\n/* harmony export */   EVENT_ON_POINTER_LEAVE: () => (/* binding */ EVENT_ON_POINTER_LEAVE),\n/* harmony export */   EVENT_ON_POINTER_MOVE: () => (/* binding */ EVENT_ON_POINTER_MOVE),\n/* harmony export */   EVENT_ON_POINTER_UP: () => (/* binding */ EVENT_ON_POINTER_UP),\n/* harmony export */   EVENT_ON_WHEEL: () => (/* binding */ EVENT_ON_WHEEL),\n/* harmony export */   IMAGE_FIT_CONTAIN: () => (/* binding */ IMAGE_FIT_CONTAIN),\n/* harmony export */   IMAGE_FIT_COVER: () => (/* binding */ IMAGE_FIT_COVER),\n/* harmony export */   MODULE_CAROUSEL: () => (/* binding */ MODULE_CAROUSEL),\n/* harmony export */   MODULE_CONTROLLER: () => (/* binding */ MODULE_CONTROLLER),\n/* harmony export */   MODULE_NAVIGATION: () => (/* binding */ MODULE_NAVIGATION),\n/* harmony export */   MODULE_NO_SCROLL: () => (/* binding */ MODULE_NO_SCROLL),\n/* harmony export */   MODULE_PORTAL: () => (/* binding */ MODULE_PORTAL),\n/* harmony export */   MODULE_ROOT: () => (/* binding */ MODULE_ROOT),\n/* harmony export */   MODULE_TOOLBAR: () => (/* binding */ MODULE_TOOLBAR),\n/* harmony export */   PLUGIN_CAPTIONS: () => (/* binding */ PLUGIN_CAPTIONS),\n/* harmony export */   PLUGIN_COUNTER: () => (/* binding */ PLUGIN_COUNTER),\n/* harmony export */   PLUGIN_DOWNLOAD: () => (/* binding */ PLUGIN_DOWNLOAD),\n/* harmony export */   PLUGIN_FULLSCREEN: () => (/* binding */ PLUGIN_FULLSCREEN),\n/* harmony export */   PLUGIN_INLINE: () => (/* binding */ PLUGIN_INLINE),\n/* harmony export */   PLUGIN_SHARE: () => (/* binding */ PLUGIN_SHARE),\n/* harmony export */   PLUGIN_SLIDESHOW: () => (/* binding */ PLUGIN_SLIDESHOW),\n/* harmony export */   PLUGIN_THUMBNAILS: () => (/* binding */ PLUGIN_THUMBNAILS),\n/* harmony export */   PLUGIN_ZOOM: () => (/* binding */ PLUGIN_ZOOM),\n/* harmony export */   SLIDE_STATUS_COMPLETE: () => (/* binding */ SLIDE_STATUS_COMPLETE),\n/* harmony export */   SLIDE_STATUS_ERROR: () => (/* binding */ SLIDE_STATUS_ERROR),\n/* harmony export */   SLIDE_STATUS_LOADING: () => (/* binding */ SLIDE_STATUS_LOADING),\n/* harmony export */   SLIDE_STATUS_PLACEHOLDER: () => (/* binding */ SLIDE_STATUS_PLACEHOLDER),\n/* harmony export */   SLIDE_STATUS_PLAYING: () => (/* binding */ SLIDE_STATUS_PLAYING),\n/* harmony export */   UNKNOWN_ACTION_TYPE: () => (/* binding */ UNKNOWN_ACTION_TYPE),\n/* harmony export */   VK_ARROW_LEFT: () => (/* binding */ VK_ARROW_LEFT),\n/* harmony export */   VK_ARROW_RIGHT: () => (/* binding */ VK_ARROW_RIGHT),\n/* harmony export */   VK_ESCAPE: () => (/* binding */ VK_ESCAPE),\n/* harmony export */   activeSlideStatus: () => (/* binding */ activeSlideStatus)\n/* harmony export */ });\nconst MODULE_CAROUSEL = \"carousel\";\nconst MODULE_CONTROLLER = \"controller\";\nconst MODULE_NAVIGATION = \"navigation\";\nconst MODULE_NO_SCROLL = \"no-scroll\";\nconst MODULE_PORTAL = \"portal\";\nconst MODULE_ROOT = \"root\";\nconst MODULE_TOOLBAR = \"toolbar\";\nconst PLUGIN_CAPTIONS = \"captions\";\nconst PLUGIN_COUNTER = \"counter\";\nconst PLUGIN_DOWNLOAD = \"download\";\nconst PLUGIN_FULLSCREEN = \"fullscreen\";\nconst PLUGIN_INLINE = \"inline\";\nconst PLUGIN_SHARE = \"share\";\nconst PLUGIN_SLIDESHOW = \"slideshow\";\nconst PLUGIN_THUMBNAILS = \"thumbnails\";\nconst PLUGIN_ZOOM = \"zoom\";\nconst SLIDE_STATUS_LOADING = \"loading\";\nconst SLIDE_STATUS_PLAYING = \"playing\";\nconst SLIDE_STATUS_ERROR = \"error\";\nconst SLIDE_STATUS_COMPLETE = \"complete\";\nconst SLIDE_STATUS_PLACEHOLDER = \"placeholder\";\nconst activeSlideStatus = (status) => `active-slide-${status}`;\nconst ACTIVE_SLIDE_LOADING = activeSlideStatus(SLIDE_STATUS_LOADING);\nconst ACTIVE_SLIDE_PLAYING = activeSlideStatus(SLIDE_STATUS_PLAYING);\nconst ACTIVE_SLIDE_ERROR = activeSlideStatus(SLIDE_STATUS_ERROR);\nconst ACTIVE_SLIDE_COMPLETE = activeSlideStatus(SLIDE_STATUS_COMPLETE);\nconst CLASS_FULLSIZE = \"fullsize\";\nconst CLASS_FLEX_CENTER = \"flex_center\";\nconst CLASS_NO_SCROLL = \"no_scroll\";\nconst CLASS_NO_SCROLL_PADDING = \"no_scroll_padding\";\nconst CLASS_SLIDE_WRAPPER = \"slide_wrapper\";\nconst ACTION_PREV = \"prev\";\nconst ACTION_NEXT = \"next\";\nconst ACTION_SWIPE = \"swipe\";\nconst ACTION_CLOSE = \"close\";\nconst EVENT_ON_POINTER_DOWN = \"onPointerDown\";\nconst EVENT_ON_POINTER_MOVE = \"onPointerMove\";\nconst EVENT_ON_POINTER_UP = \"onPointerUp\";\nconst EVENT_ON_POINTER_LEAVE = \"onPointerLeave\";\nconst EVENT_ON_POINTER_CANCEL = \"onPointerCancel\";\nconst EVENT_ON_KEY_DOWN = \"onKeyDown\";\nconst EVENT_ON_KEY_UP = \"onKeyUp\";\nconst EVENT_ON_WHEEL = \"onWheel\";\nconst VK_ESCAPE = \"Escape\";\nconst VK_ARROW_LEFT = \"ArrowLeft\";\nconst VK_ARROW_RIGHT = \"ArrowRight\";\nconst ELEMENT_BUTTON = \"button\";\nconst ELEMENT_ICON = \"icon\";\nconst IMAGE_FIT_CONTAIN = \"contain\";\nconst IMAGE_FIT_COVER = \"cover\";\nconst UNKNOWN_ACTION_TYPE = \"Unknown action type\";\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMveWV0LWFub3RoZXItcmVhY3QtbGlnaHRib3gvZGlzdC90eXBlcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzREFBc0QsT0FBTztBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUUrNkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93YXRlcm1hcmstZXhwZXJpZW5jZS8uL25vZGVfbW9kdWxlcy95ZXQtYW5vdGhlci1yZWFjdC1saWdodGJveC9kaXN0L3R5cGVzLmpzPzJkMjEiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgTU9EVUxFX0NBUk9VU0VMID0gXCJjYXJvdXNlbFwiO1xuY29uc3QgTU9EVUxFX0NPTlRST0xMRVIgPSBcImNvbnRyb2xsZXJcIjtcbmNvbnN0IE1PRFVMRV9OQVZJR0FUSU9OID0gXCJuYXZpZ2F0aW9uXCI7XG5jb25zdCBNT0RVTEVfTk9fU0NST0xMID0gXCJuby1zY3JvbGxcIjtcbmNvbnN0IE1PRFVMRV9QT1JUQUwgPSBcInBvcnRhbFwiO1xuY29uc3QgTU9EVUxFX1JPT1QgPSBcInJvb3RcIjtcbmNvbnN0IE1PRFVMRV9UT09MQkFSID0gXCJ0b29sYmFyXCI7XG5jb25zdCBQTFVHSU5fQ0FQVElPTlMgPSBcImNhcHRpb25zXCI7XG5jb25zdCBQTFVHSU5fQ09VTlRFUiA9IFwiY291bnRlclwiO1xuY29uc3QgUExVR0lOX0RPV05MT0FEID0gXCJkb3dubG9hZFwiO1xuY29uc3QgUExVR0lOX0ZVTExTQ1JFRU4gPSBcImZ1bGxzY3JlZW5cIjtcbmNvbnN0IFBMVUdJTl9JTkxJTkUgPSBcImlubGluZVwiO1xuY29uc3QgUExVR0lOX1NIQVJFID0gXCJzaGFyZVwiO1xuY29uc3QgUExVR0lOX1NMSURFU0hPVyA9IFwic2xpZGVzaG93XCI7XG5jb25zdCBQTFVHSU5fVEhVTUJOQUlMUyA9IFwidGh1bWJuYWlsc1wiO1xuY29uc3QgUExVR0lOX1pPT00gPSBcInpvb21cIjtcbmNvbnN0IFNMSURFX1NUQVRVU19MT0FESU5HID0gXCJsb2FkaW5nXCI7XG5jb25zdCBTTElERV9TVEFUVVNfUExBWUlORyA9IFwicGxheWluZ1wiO1xuY29uc3QgU0xJREVfU1RBVFVTX0VSUk9SID0gXCJlcnJvclwiO1xuY29uc3QgU0xJREVfU1RBVFVTX0NPTVBMRVRFID0gXCJjb21wbGV0ZVwiO1xuY29uc3QgU0xJREVfU1RBVFVTX1BMQUNFSE9MREVSID0gXCJwbGFjZWhvbGRlclwiO1xuY29uc3QgYWN0aXZlU2xpZGVTdGF0dXMgPSAoc3RhdHVzKSA9PiBgYWN0aXZlLXNsaWRlLSR7c3RhdHVzfWA7XG5jb25zdCBBQ1RJVkVfU0xJREVfTE9BRElORyA9IGFjdGl2ZVNsaWRlU3RhdHVzKFNMSURFX1NUQVRVU19MT0FESU5HKTtcbmNvbnN0IEFDVElWRV9TTElERV9QTEFZSU5HID0gYWN0aXZlU2xpZGVTdGF0dXMoU0xJREVfU1RBVFVTX1BMQVlJTkcpO1xuY29uc3QgQUNUSVZFX1NMSURFX0VSUk9SID0gYWN0aXZlU2xpZGVTdGF0dXMoU0xJREVfU1RBVFVTX0VSUk9SKTtcbmNvbnN0IEFDVElWRV9TTElERV9DT01QTEVURSA9IGFjdGl2ZVNsaWRlU3RhdHVzKFNMSURFX1NUQVRVU19DT01QTEVURSk7XG5jb25zdCBDTEFTU19GVUxMU0laRSA9IFwiZnVsbHNpemVcIjtcbmNvbnN0IENMQVNTX0ZMRVhfQ0VOVEVSID0gXCJmbGV4X2NlbnRlclwiO1xuY29uc3QgQ0xBU1NfTk9fU0NST0xMID0gXCJub19zY3JvbGxcIjtcbmNvbnN0IENMQVNTX05PX1NDUk9MTF9QQURESU5HID0gXCJub19zY3JvbGxfcGFkZGluZ1wiO1xuY29uc3QgQ0xBU1NfU0xJREVfV1JBUFBFUiA9IFwic2xpZGVfd3JhcHBlclwiO1xuY29uc3QgQUNUSU9OX1BSRVYgPSBcInByZXZcIjtcbmNvbnN0IEFDVElPTl9ORVhUID0gXCJuZXh0XCI7XG5jb25zdCBBQ1RJT05fU1dJUEUgPSBcInN3aXBlXCI7XG5jb25zdCBBQ1RJT05fQ0xPU0UgPSBcImNsb3NlXCI7XG5jb25zdCBFVkVOVF9PTl9QT0lOVEVSX0RPV04gPSBcIm9uUG9pbnRlckRvd25cIjtcbmNvbnN0IEVWRU5UX09OX1BPSU5URVJfTU9WRSA9IFwib25Qb2ludGVyTW92ZVwiO1xuY29uc3QgRVZFTlRfT05fUE9JTlRFUl9VUCA9IFwib25Qb2ludGVyVXBcIjtcbmNvbnN0IEVWRU5UX09OX1BPSU5URVJfTEVBVkUgPSBcIm9uUG9pbnRlckxlYXZlXCI7XG5jb25zdCBFVkVOVF9PTl9QT0lOVEVSX0NBTkNFTCA9IFwib25Qb2ludGVyQ2FuY2VsXCI7XG5jb25zdCBFVkVOVF9PTl9LRVlfRE9XTiA9IFwib25LZXlEb3duXCI7XG5jb25zdCBFVkVOVF9PTl9LRVlfVVAgPSBcIm9uS2V5VXBcIjtcbmNvbnN0IEVWRU5UX09OX1dIRUVMID0gXCJvbldoZWVsXCI7XG5jb25zdCBWS19FU0NBUEUgPSBcIkVzY2FwZVwiO1xuY29uc3QgVktfQVJST1dfTEVGVCA9IFwiQXJyb3dMZWZ0XCI7XG5jb25zdCBWS19BUlJPV19SSUdIVCA9IFwiQXJyb3dSaWdodFwiO1xuY29uc3QgRUxFTUVOVF9CVVRUT04gPSBcImJ1dHRvblwiO1xuY29uc3QgRUxFTUVOVF9JQ09OID0gXCJpY29uXCI7XG5jb25zdCBJTUFHRV9GSVRfQ09OVEFJTiA9IFwiY29udGFpblwiO1xuY29uc3QgSU1BR0VfRklUX0NPVkVSID0gXCJjb3ZlclwiO1xuY29uc3QgVU5LTk9XTl9BQ1RJT05fVFlQRSA9IFwiVW5rbm93biBhY3Rpb24gdHlwZVwiO1xuXG5leHBvcnQgeyBBQ1RJT05fQ0xPU0UsIEFDVElPTl9ORVhULCBBQ1RJT05fUFJFViwgQUNUSU9OX1NXSVBFLCBBQ1RJVkVfU0xJREVfQ09NUExFVEUsIEFDVElWRV9TTElERV9FUlJPUiwgQUNUSVZFX1NMSURFX0xPQURJTkcsIEFDVElWRV9TTElERV9QTEFZSU5HLCBDTEFTU19GTEVYX0NFTlRFUiwgQ0xBU1NfRlVMTFNJWkUsIENMQVNTX05PX1NDUk9MTCwgQ0xBU1NfTk9fU0NST0xMX1BBRERJTkcsIENMQVNTX1NMSURFX1dSQVBQRVIsIEVMRU1FTlRfQlVUVE9OLCBFTEVNRU5UX0lDT04sIEVWRU5UX09OX0tFWV9ET1dOLCBFVkVOVF9PTl9LRVlfVVAsIEVWRU5UX09OX1BPSU5URVJfQ0FOQ0VMLCBFVkVOVF9PTl9QT0lOVEVSX0RPV04sIEVWRU5UX09OX1BPSU5URVJfTEVBVkUsIEVWRU5UX09OX1BPSU5URVJfTU9WRSwgRVZFTlRfT05fUE9JTlRFUl9VUCwgRVZFTlRfT05fV0hFRUwsIElNQUdFX0ZJVF9DT05UQUlOLCBJTUFHRV9GSVRfQ09WRVIsIE1PRFVMRV9DQVJPVVNFTCwgTU9EVUxFX0NPTlRST0xMRVIsIE1PRFVMRV9OQVZJR0FUSU9OLCBNT0RVTEVfTk9fU0NST0xMLCBNT0RVTEVfUE9SVEFMLCBNT0RVTEVfUk9PVCwgTU9EVUxFX1RPT0xCQVIsIFBMVUdJTl9DQVBUSU9OUywgUExVR0lOX0NPVU5URVIsIFBMVUdJTl9ET1dOTE9BRCwgUExVR0lOX0ZVTExTQ1JFRU4sIFBMVUdJTl9JTkxJTkUsIFBMVUdJTl9TSEFSRSwgUExVR0lOX1NMSURFU0hPVywgUExVR0lOX1RIVU1CTkFJTFMsIFBMVUdJTl9aT09NLCBTTElERV9TVEFUVVNfQ09NUExFVEUsIFNMSURFX1NUQVRVU19FUlJPUiwgU0xJREVfU1RBVFVTX0xPQURJTkcsIFNMSURFX1NUQVRVU19QTEFDRUhPTERFUiwgU0xJREVfU1RBVFVTX1BMQVlJTkcsIFVOS05PV05fQUNUSU9OX1RZUEUsIFZLX0FSUk9XX0xFRlQsIFZLX0FSUk9XX1JJR0hULCBWS19FU0NBUEUsIGFjdGl2ZVNsaWRlU3RhdHVzIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/yet-another-react-lightbox/dist/types.js\n");

/***/ })

};
;